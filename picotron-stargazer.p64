picotron cartridge // www.picotron.net
version 2

:: entities/
:: entities/base.lua
--[[pod_format="raw",created="2025-04-14 21:29:02",modified="2025-05-22 23:29:30",revision=2001]]
function build_entity()
	return {
        x = 0, y = -64,
        dx = 0, dy = 0,
        grounded = true,
        width = 0.8,
        height = 0.8,
        walk_speed = 1,
        jump_force = -2.4,
	}
end

function walking_animator(e, idle_frame, start_frame, frame_limit, air_frame, x_offset, y_offset)
	e.wa_frame = 0
	e.wa_limit = frame_limit
	
	e.wa_start_frame = start_frame
	e.wa_idle_frame = idle_frame
	e.wa_air_frame = air_frame
	
	e.wa_x_offset = x_offset
	e.wa_y_offset = y_offset
	
	e.wa_left = false
	return function(e)
		if abs(e.dx) < 0.05 then
			e.dx = 0
		end
		if (not e.grounded) then
			if (e.dy > 0.5) then
				if (e.dy > 3.5) then
					spr(e.wa_air_frame+2,x_offset, y_offset, e.wa_left)
				else
					spr(e.wa_air_frame+1,x_offset, y_offset, e.wa_left)
				end
			else
				spr(e.wa_air_frame,x_offset, y_offset, e.wa_left)
			end
		else
			if (e.dx < 0) e.wa_left = true
			if (e.dx > 0) e.wa_left = false
			if (abs(e.dx)>0.1) then
				e.wa_frame += abs(e.dx/3)
				if (e.wa_frame >= e.wa_limit) then
					e.wa_frame = 0
				end
				spr(flr(e.wa_start_frame+e.wa_frame), x_offset, y_offset, e.wa_left)
			else
				e.wa_frame = 0
				spr(e.wa_idle_frame, e.wa_x_offset, e.wa_y_offset, e.wa_left)
			end
		end
	end
end
:: entities/player.lua
--[[pod_format="raw",created="2025-04-14 21:28:33",modified="2025-06-30 15:07:02",revision=2850]]
include "entities/base.lua"


local anchoring = {
	-- POINTING ORDER: left left-up up right-up right
	--
	{} 	
}
local swing_frames_right = {
	 {24, {0,  0, 13, 0.5, 0.5}}, -- L
 	 {25, {0,  3,  5, 0.5, 0.5}}, -- L U
 	 {26, {0, 10,  1, 0.5, 0.5}}, --   U
 	 {27, {0, 18,  3, 0.5, 0.5}}, -- R U
 	 {28, {0, 19, 13, 0.5, 0.5}}, -- R
}

local swing_frames_left = {
 	 {24, {0, 16, 13, 0.5, 0.5}}, -- R
 	 {25, {0, 13,  5, 0.5, 0.5}}, -- R U
 	 {26, {0,  6,  1, 0.5, 0.5}}, --   U
 	 {27, {0, -2,  3, 0.5, 0.5}}, -- L U
	 {28, {0, -3, 13, 0.5, 0.5}}, -- L
}

function recalc_frame_data()
	__re(swing_frames_right)
	__re(swing_frames_left)
end

local function swing_animator(e)
	e.swing_timer = 0
	e.swinging = false
	return function()
		-- Draw swing
		local data_source = e.wa_left and swing_frames_left or swing_frames_right
		e.swing_timer += 0.4
		if e.swing_timer < #swing_frames_right then
			local frame_number = flr(e.swing_timer)+1
			local frame_data   = data_source[frame_number]
			
			local frame_number_chr          = frame_data[1]
			local frame_data_pickaxe        = frame_data[2]
			local s_number                  = frame_data_pickaxe[1]
			local frame_data_pickaxe_x      = frame_data_pickaxe[2]
			local frame_data_pickaxe_y      = frame_data_pickaxe[3]
			local frame_data_anchor_x       = frame_data_pickaxe[4]
			local frame_data_anchor_y       = frame_data_pickaxe[5]
			
	
			local s        = get_spr(s_number)
			local s_width  = s:width()
			local s_height = s:height()
			
			local spr_x_offset = -s_width * frame_data_anchor_x
			local spr_y_offset = -s_height * frame_data_anchor_y

			--spr(s_number, -5+frame_data_pickaxe_x+spr_x_offset, -8+frame_data_pickaxe_y+spr_y_offset)
			circfill(-5+frame_data_pickaxe_x,-8+frame_data_pickaxe_y,1)
			spr(frame_number_chr,-5,-8,e.wa_left)
		else
			e.swinging = false
		end
	end,
	function ()
		-- Trigger swing
		e.swing_timer = 0
		e.swinging = true
	end
end

function build_player()
	local base = build_entity()
	
	base.width = 0.7
	base.update = update
-- uncoment for fun :) base.x = 999999999999999999
	
	local draw_swing, trigger_swing = swing_animator(base)
	
	local wa = walking_animator(base, 1, 2, 6, 9, -5, -8)
	base.draw = function(e)
		if (e.swinging) then
			draw_swing()	
		end
		if not e.swinging then
			wa(e)
		end
		if key "tab" then
			prints(e.x .. " " .. e.y, -32, -32)
		end
	end
	base.prev_whole_x = flr(base.x/8)
	base.prev_whole_y = flr(base.y/8)
	base.fc = 0
	base.update = function(e)
		e.fc += 1
		-- Player input
		-- e.dx = (input & 1 and e.walk_speed) or (input & 2 and -e.walk_speed) or 0
		e.dx *= 0.8
		if (key("a")) then 
			e.dx -= e.walk_speed*0.2
		elseif (key("d")) then 
			e.dx += e.walk_speed*0.2
		end
		
		-- Jumping
		if e.grounded and key("w") then
			e.dy = e.jump_force
			e.grounded = false
		end 
		
		if not (key("w") or e.grounded) and e.dy < -1 then
			e.dy = -1
		end
		
		if (keyp("t")) trigger_swing()
		
		if e.fc%5 == 0 then 
			local whole_x = flr(e.x/8+0.5+ (e.wa_left and -1 or 1)) 
			local whole_y = flr(e.y/8+0.5-1)
			
			if e.prev_whole_x != whole_x or e.prev_whole_y != whole_y then
				chunk.place_light_in_world(whole_x, whole_y, 20)
				chunk.break_light_in_world(base.prev_whole_x, base.prev_whole_y)
			end
		
			e.prev_whole_x = whole_x
			e.prev_whole_y = whole_y
		end
	end
	
	base.equipped_sprite = 16
	return base
end
:: entities/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTE0IDIxOjI4OjIzIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMSJdXQ==
:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTA5IDE4OjU5OjA1Iixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMCIscmV2aXNpb249NDY5NF1dbHo0APgDAABVOAAA_CZ7WzBdPXtibXA9cHh1
AEMgEBAE8FYHEAfAF9AXwAcQB-BWLGZsYWdzPTAscGFuX3g9MC4wNgEAETcYAPwReT04LjMyNjY3
MjY4NDY4ODdlLTAxNyx6b29tPTE1fSxiAP8aGhmgGgkGBwmQKRcJgH8ZgBcPFRcOkBcOFw6QDxBH
kAcNN5BdgC4QLjB_AGVvbXAuIC4gfgBBH0b8ABFPkC4t0P0AQx9HfwAUH8B-AEMfV38AET_gPkB6
AWdfPS6ALnB6AWdPLQAucIAAQvAKPx9wfmBOAE4wXhBOEG4grlCOgF6QXoBugBYA-wI_MF4gPhBe
ME4ATlCOcG6QHoABYP8DAA5QDg0HDTcNDlAOfQ5QDvAMhQBBGzaFAD_QR5CHAGEbJocAL-AKiABj
H-BVAJKsBAQENz8cPB8QEVoAA0oAHzCMAAcPMgAasgoKBCAGYAYHcAYHBgDPdRd-FReAF3AXkAdQ
SgAMHjZKAPIaNyAGN0AGBw8VUAYHDgUOQBcADgUOMAYHEA4FDiAGMA4FDhAHQA4FDnAEAA9hAB76
CRYXMBZXEBcADxUFABcABiAOBSAHMA4FcAMAHzBYAB3xAxAHFgcGYDcGYA8VBwZQDgUOB6wAMAAX
ILIAEBe_ACAwB8sAEEDWAE9gBQ5wYgAdMVAGkF8BwIAGB3UGB38VF3AXYAQALwcgSgAdMwUPFT4B
Mg5AB5oAAaYAIQYHswARBmABzwYHUA4GB0AmFyAWJ2IAHjMwDxVJAQZSAQFrAf8ABgAWAA4FAAYH
EBc2FzA3WQAeUHAPFQVgngARQKoAEjC3AAIcAhMHKgLfDgUOUBcOYAY3YCYXEGEAGgD9Ah9V6ggV
DCMCQy0wLjZeABM0XgAfMEgJD4QnDxUXkCcOF1wAT4AuPdBbACMfV1sADn8OXZAeEC4gXQAhsFgq
CaAqCQYHkDkXWwCJNw8VB5A3DgdbAB8AWwAjGmlbACFXkF0A-wIPECcPFQeADgcPEDeAHk0OAFsA
IR-wNQCHXwgIBPAwNQDxDnMBDzUAeg-UAAImMTI3AEItMjQ4OgA-MC41OwDmD5EBFQ81AGQO2gAP
NQDkDnMBDzUAegDUAD4TDxO4Cw_3BwoANgBfDA8TUA44ACDfAw8TcA5QDlAOAA7wAz4AIQB0DDEw
DgBCAD9wDpBDAB0QkIAAAj4AFRBGAD9QDiBIACARIIgAMxAOIEwAESAGAD8wDiBQACESAJgAAkoA
DlYAAhIAAHAAD1oAIQI6ABMASgA4AB4ADgADCAAVEGoAPwAOAGQAGj8BAQQxAP--------------
---------------------------------75QPTE2fX0=
:: gfx/1.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTEyIDIwOjA4OjQzIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMCIscmV2aXNpb249NDgwNF1dbHo0ALAEAAANNgAA8Rh7WzBdPXtibXA9cHh1
AEMgCAgE8DAsZmxhZ3M9MTI4LHBhbl94PTAIANp5PTAsem9vbT0xNn0sNABRew8bCw4CALEEDg8U
Dg0ODQ4DDQIAUg8VBF0MAwAzDVwNWgAfMFgAFbgPFFQOBF4PFQReDQMAPw5dDkoAH_8UHg8VDh0O
BC4dDhQeDQoABw9aAB7wExsLAwAOCwMQDgAPFQMOAB0ACw4NAwsOAA0ODQANDgMOCw0fAFAAAw4A
DR8AFQMfABADBAAPbQEf8AENXxcNDl0PEw5dDA49DA0MCABfDQw9DA5jASNQGwsDDxQGAPAEHxUP
GwQPFAMPGy8VBAsPGw8UAwYAEBUeANAvFA8bAw4LBA8UDgsD5wAAKQBgDi8VAwsOJwAQDiYAXw4D
HQ4DfwAd4WkPGVoJDloOCX4pDjkaCgAvOn5FAB2CjxVvFA8VVA8FAP8BfxU-FA8VLxQkDg8VVA4N
JE4AHRXxAQMPMgAVs58QPC4MDhwODB4cAgABDgAzLjyeSgAfMkoAFfABDxkpLxcPDhkaFx8XCSon
DgQAYg8YKCkPGQYAzx8YGBkfGQIvGC8ZBNgAHTAPECxcALMcHxwXHxcMLxwnDwYAYgEvEC0PEgYA
zxEfEB0fEg8gIS8SAWEAHfAAAy8bJg8WHxsbFxYOKycGBABiDxUlIw8TBgDvHxUVEx8TDyAvFS8T
DxVdAB0A9ADkFw8OHxgYFx8XDxgoJw8GAFIVIiQPFAYAYR8VEhQfFGMAHxRjAB-xDg8PXxcPDw8X
Xw8FDxcPDwUeBQ4FDxdeBQ1eBQ0ODgBfDV4FDlV8BB-AFgAPFSMADxYAMw4DCwD-Bg0TDQ5TDgMN
Mw1DDiMAMw0DIA0jEAkEH08PIPEvqwIdL-AwvgAd-xIAVwAHUAcGEAcgBwYABjAHBjAHAAcGIAYQ
BwZQBwBGBwC5AB-1AvACCgAKQAoZUA8ZYAVwBVAFcgMfM5cAFpEQJzAHBgcGByAGAEAwJ1AHSQAf
YEsAIf8J8AoILx8gCA8PKA8fEDgPDwgwDgdQDgcgSgAf8RAgDxUPFkAODxUODTANHg0gBQ0ODR4Q
DRUNBQ0wDQVQAwAPVwAg-xkQPyAFEA4RDxAFDxUFDhEfEA8VDxAPFQ4RPxAeIR0BHlEOAA4xDiA_
RAIgj4EPIPETDvECSAJPb-ArCxALAP0AH3-wIgtQCxALNwEgIfAcOgBvEAsACyALPwAifnALIAsg
CxA8AA8fARYPMgBIb-EKDyDxFbkBJw8yAP9Cb-EDDyBRDpYB-39fFQ8gUR7lBBxfEBAE8PDOAB8P
MgDl_CMADxQEDx8PDwgPGAIPFQUPFgYHDxcPDg8eAQ8QDxEMDxwPHQ0PEg8TAw8bCw8aCgkPGQwA
CiUACD8ACFgAD5QAHfARED8SMA4QDkAOAUABDx8KASABDxgKDx8PGAEQAQgKBwgHAG4HCggBIDE6
Bw9VARgPMgCrD2QPN0A-GD8UBADxAi8YTxQfGL8UHxVPFC8VPxQ-BAAOTgAPfQMsHzQyAP------
--------------------------------lQ56Hg8yAP--------_iUD0xNH19
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTA5IDE5OjUyOjUzIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMSJdXQ==
:: map/
:: map/debug.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTEzIDE3OjA0OjExIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMCIscmV2aXNpb249Mzk0MF1dbHo0AGEEAACmcgAA8hJ7e2JtcD11c2VyZGF0
YSgiaTE2IiwxMzgsNTMsIjAwNDEEAA8BAP--EwEsAhIyBAAPAQADD0wC--AmNDEIAAgEAC4wMAgA
DwEA-_oBSAQTMQQAB1QEBBgADwEA--wPFAIJDywC-----ysuNDEsAg8oAv--IyY0OQQADygC-_4P
AQAFCBwCDigCDwEA--QOGAIPLAL-AzkxMDcEAA8gAA0PYAS_KjQ5IAIEEAAECAAPKAL8DyAADQ8B
ALoFSBEaOQQACSQALzkwKAL-8APUCiE0OQQAMzEwMewACgIAASAACxgABAEADCwACBwADwEAwQ4I
Ag8gAAMPAQC_AyQCATACBewAHzEoAAMOAQAONAAPAQD-yQHkASk0ORAABAIADCwCAhYAHzFEAAMP
AQD-zQzkAQ-0AQovNDk0AB8BIAAVNAQADwEAsQRcBgQIAAwMAA8BAMEF5AEHBAIIAgAEAAIFEAAD
KAAIAQAIKAAOHAAEJAIfNiwCtgQUAgQIAAwMAA8BAPIOKAIPAQAKBBwCDygCuQgYAg_8Ch0fMQIA
UA8BAKlPMTAzMAEA7QLGAR8yBAAUHzUEABAfMgQABA4wAg8oAsUfMTwDvAKuAB8yBAAMHzUEACQf
MgQAAg8BAKEIKAIfMQIAEh8yBAAUDwIAPwwBAB8xAgAyHzIEAAAfNQQANB8yBAAED1ADYw9wAAQP
WAEgHzIEAIwMAgAfMgQAOB81BABMHzIEAAQfMSgCWB8yEAIUHzIEAP8FHzUEAFQfMgQABAoCAA8Q
Ai8PAgAFHjIQAA8EAP8fHzUEAFQfMgQADQ8UAjAfMgQAbB81BAAQHzIEAHwfNQQAjB8yKAIsHzIE
AHwfNQQAMBcyBAAfNQQA9B4yKAIPPASaDAQAHzUEAP9FHzIoAhgfMgQAkB81BAD-QR8yJAIWDygC
-----xMfMiQCGg8oAv-gHzIkAiIPKAL-2B8yJAIqDygC-9QfMiQCLg8oAh8XNwwADBAAHzcQAAQI
FAAPBAAlHzUEAP8lBEABD1AEXQj4AQwMABsyDAAOFAAPBAAnHzUEAP8NBCgBDxgCNw9QBDMPCAAB
CAQAHjIQAA8EACofNQQA-wUfMhgCEggMAA8oAicPgBUZHzcQAAQfNxQABQ8EAEAfNQQAyB8yBAAe
DwEAGA8oAtwPBABZFzUIAA8EAEEeMgQADygChA4sAg8EAHsPuAALHzIEAGAXNQgADwQAKR8yIAKW
DiwCFTGIAA8kAo0POAIsD_gAqg4BAA8sAuEPjCdCD3QCHQ8kAv8HDzACbwICAA8BAIQPFALuDywC
DxUx6AAPBAA-BgIADwEA-64ZMQIAHzIEADQPHAIKDzQC-70EAgAfMgQAFAYCAA8BAP-eHzECABgP
AQD---------------------yPELIiksaGlkZGVuPWZhbHNlLHBhbl94PS04ODYLANJ5PTAsdGls
ZV9oPTE2CgAQdwoAoHpvb209MC41fX0=
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTA5IDE5OjUyOjUzIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMSJdXQ==
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTA5IDE4OjU5OjA1Iixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMCIscmV2aXNpb249NDQ1MF1dbHo0ABABAADjCgAA8CNweHUAAygAAAQABA9A
EAIOAAGgASACoA4ADxAADfDKAQIDQAyQBAUGB0APD5AICQoPCwkAvwwPDQ8ODw9AC-D-AQDr9hCq
ARAGDw0QASABIAHwAAIQAg8gEAEgDyEgATAPaaACHQDwDzAPZyAPK-CfD3wP-w8c8MUP_AoP-w_A
D-cPDQHwCUYAFyBGABUORQCdQPDDDygP--DGMQAfDjAA------_NH-8BAKxAyA9AAOoH8wonvyn-
-yPA-SPO-SNfc2928CNfgfAlD9AwIABMLL8u-R8AEyocAPALMY8z-SaQ-Sae-SYfc3928CYPgfAn
BSAP8CAhAG8QQP2w8HAKAGQf-wEA-9ZQ-----90=
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA0LTA5IDE5OjUyOjUzIixtb2RpZmllZD0iMjAyNS0w
Ni0zMCAxODozODoyMSJdXQ==
:: chunk.lua
--[[pod_format="raw",created="2025-04-12 18:54:32",modified="2025-06-30 18:38:20",revision=6303]]
--[[
  [x] Chunk allocation
  [x] Chunk loading -> Loads from debug map
  [x] Chunk rendering
  [x] Store chunks to file system
  [x] Load chunks back from fs
]]

-- Sooooooo
-- We need to solve a few tasks
-- 1. Load chunks to memory
-- 2. Render them to screen
-- HOW 2 do? Either
--- Do all the everything manually <- tried this, 3x slower
--- OR
--- Leverage Picotron's native crap <- went with this!

local my_requests = {}
chunk = {}
LOADED_CHUNKS = {}

include "constants.lua"
include "logging.lua"
include "generator.lua"
include "util.lua"
include "queue.lua"


ALLOCATION_TABLE = {}
RENDER_CHUNK_HEAP = userdata("i16",CHUNK_SIZE*512,CHUNK_SIZE)
WORLD_NAME = "test_world"

FALLBACK_LOADER_BEHAVIOR = false
function chunk.set_fallback_behavior()
	FALLBACK_LOADER_BEHAVIOR = true
end

local center_x = 0
local center_y = 0

function chunk.set_tile_in_world(x,y,b,bg,skip_light)
	local c = chunk.get_chunk_by_world_pos(x,y)
	
	if (c) then
		local x_in_chunk = x%CHUNK_SIZE
		local y_in_chunk = y%CHUNK_SIZE
		if bg then
			c.bg:set(x_in_chunk,y_in_chunk,b)
		else
			c.tiles:set(x_in_chunk,y_in_chunk,b)
		end
		local tile = b == 0 and 0 or b + 256
		update_displayed_tile(tile, c, x_in_chunk, y_in_chunk) 
		c.changed = true
		
		-- update sky light
		-- for every full block (non-transparent foreground or non-transparent background)
		-- increase next block's sky light value by 1
		-- for every blank block
		-- increase but no higher than initial encountered value
		
		if skip_light then return end
		
		local gt = chunk.get_tile_in_world
		local sl = chunk.set_light_in_world
		
		local initial_found_value = gt(x,y-1,"sky")
		local light_accumulator = initial_found_value
		
		local found_tile = nil
		repeat
			-- for now, don't look at foreground tiles
			--[[
			local found_tile = gt(x,y-1,"tiles")
			if found_tile and fget(256+found_tile, 7) then
				found_tile = gt(x,y-1,"bg")
					if found_tile and fget(256+found_tile, 7) then
						found_tile = 0
					end
			end
			]]
			found_tile = gt(x,y-1,"bg")
			if found_tile and fget(256+found_tile, 7) then
				found_tile = 0
			end
			if found_tile == 0 then
				light_accumulator -= 1
			else
				light_accumulator += 1
			end
			
			light_accumulator = mid(0,6,light_accumulator)
			sl(x,y,light_accumulator)
			y+=1
		until not found_tile
	end
end

function chunk.set_light_in_world(x,y,n)
		local c = chunk.get_chunk_by_world_pos(x,y)
		if not c then return end
		
		local ix = x%CHUNK_SIZE
		local iy = y%CHUNK_SIZE
		c.sky:set(ix,iy,max(n,0))

		local source_light = c.light
		local source_sky = c.sky
	
		local light_alloc_idx = c.light_alloc_idx
		local light_write_offset = light_alloc_idx * CHUNK_SIZE
	
		local light_value = mid(0,source_light:get(ix,iy),7)
		local sky_value   = mid(0,source_sky:get(ix,iy),7)
		local final_light_value = min(light_value, sky_value)
				     
		local light_tile  = 512-(sky_value+(7*light_value))
		RENDER_CHUNK_HEAP:set( light_write_offset+ix, iy, light_tile )
end

function chunk.get_tile_in_world(x,y,layer)
	local layer = layer or "tiles"
	local x,y = flr(x), flr(y)
	local chunk_with_block = chunk.get_chunk_by_world_pos(x,y)
	if (not chunk_with_block) return nil
	return chunk_with_block[layer]:get(x%CHUNK_SIZE,y%CHUNK_SIZE)
end

function chunk.set_center(x,y)
	send_message(CHUNK_PROCESS, { event = "msg" } )
	center_x = flr(x)
	center_y = flr(y)
end

function set_world_name(name)
	WORLD_NAME = name
	mkdir(SAVEGAME_DIRECTORY .. "/" .. WORLD_NAME)
end

function chunk.init()
	ADD_RENDER_GEN = make_queue()
	mkdir(SAVEGAME_DIRECTORY)
	mkdir(SAVEGAME_DIRECTORY .. "/" .. WORLD_NAME)
	memmap(RENDER_CHUNK_HEAP,0x100000)
end

function chunk.build_chunk()
	return {
		tiles = userdata("i16",CHUNK_SIZE,CHUNK_SIZE),
		bg = userdata("i16",CHUNK_SIZE,CHUNK_SIZE),
		light = userdata("i8",CHUNK_SIZE,CHUNK_SIZE),
		sky = userdata("u8",CHUNK_SIZE,CHUNK_SIZE),
		schedule = {},
		next_schedule = {},
		light_sources = {}
	}
end

--[[
 Allocate and add a new chunk to the world
 cx, cy: world position in whole chunks
 c: chunk instance
]]

function allocate_drawable_chunk()
	-- Find an unallocated chunk in heap by looking for a "false"
	local alloc_idx = indexof(ALLOCATION_TABLE, false)
	-- If we get a nil, that means we need a new slot
	if alloc_idx == nil then 
		alloc_idx = #ALLOCATION_TABLE+1 
	else
	end
	-- Mark the slot as allocated
	ALLOCATION_TABLE[alloc_idx] = true
	return alloc_idx
end

function chunk.add_chunk(cx,cy,c)
	del(my_requests, c.loaded_at_x .. "/" .. c.loaded_at_y) 
	local chunk_id = cx .. "_" .. cy
	LOADED_CHUNKS[chunk_id] = c
	local alloc_idx = allocate_drawable_chunk()
	local bg_alloc_idx = allocate_drawable_chunk()
	local light_alloc_idx = allocate_drawable_chunk()
	-- Finally, write to the heap...
	-- The heap is structured like a long-ass map, 8 in height and 1024 in length
	-- This can store 128 map layers
	-- TODO optimize this
	local write_offset = alloc_idx * CHUNK_SIZE
	local bg_write_offset = bg_alloc_idx * CHUNK_SIZE
	local light_write_offset = light_alloc_idx * CHUNK_SIZE
	local source_tiles = c.tiles
	local source_bg = c.bg
	local source_light = c.light
	local source_sky = c.sky
	
		-- Precalculate some stuff...
	c.own_id = chunk_id
	c.alloc_idx = alloc_idx
	c.bg_alloc_idx = bg_alloc_idx
	c.light_alloc_idx = light_alloc_idx
	
	c.tile_idx = write_offset
	c.bg_tile_idx = bg_write_offset
	c.light_tile_idx = light_write_offset
	
	c.touched = true
	
	c.screen_x = cx * CHUNK_SIZE_IN_PIXELS
	c.screen_y = cy * CHUNK_SIZE_IN_PIXELS
	c.x = cx
	c.y = cy
	bar_start("Chunk adding")
	for ix=0,CHUNK_SIZE-1 do
		for iy = 0,CHUNK_SIZE-1 do
			local tile = 256 + source_tiles:get(ix,iy)
			
			update_displayed_tile(tile, c, ix, iy)
						
			local light_value = mid(0,source_light:get(ix,iy),7)
			local sky_value   = mid(0,source_sky:get(ix,iy),7)
			local final_light_value = min(light_value, sky_value)
					     
			local light_tile  = 512-(sky_value+(7*light_value))
			RENDER_CHUNK_HEAP:set( light_write_offset+ix, iy, light_tile )
		end
	end
	bar_end("Chunk adding")
end

function chunk.update_all_light_in_chunk(c)
	c.changed = true
	if not c.light then c.light = userdata("i8",CHUNK_SIZE,CHUNK_SIZE) end
	local source_light = c.light
	local source_sky   = c.sky
	
	local light_write_offset = c.light_tile_idx
	for ix=0,CHUNK_SIZE-1 do
		for iy = 0,CHUNK_SIZE-1 do
			local light_value = mid(0,source_light:get(ix,iy),6)
			local sky_value   = mid(0,source_sky:get(ix,iy),6)		
					     
			local light_tile = 512-(sky_value+(7*light_value))
			RENDER_CHUNK_HEAP:set( light_write_offset+ix, iy, light_tile )
		end
	end
end

function update_displayed_tile(tile, chunk, ix, iy)
	local write_offset = chunk.tile_idx
	local bg_write_offset = chunk.bg_tile_idx
	local source_bg = chunk.bg
	
	if (tile == 256) tile = 0
	if (tile == 258 and rnd(3)<1) then
		--tile += flr(rnd(6)) * 8 + (flr(rnd(8)) << 13)
	end
	
	-- Foreground tile decided by this point
	local is_foreground_transparent = tile == 0 or fget(tile, 7)
	

	RENDER_CHUNK_HEAP:set( write_offset+ix, iy, tile )
	
	-- Picking background tile...
	local bg_tile = is_foreground_transparent and 256+source_bg:get(ix,iy) or 0
	if (bg_tile == 256) bg_tile = 0
	if (bg_tile == 265 and rnd(3)<1) then
		bg_tile += flr(rnd(6)) * 8 + (flr(rnd(8)) << 13)
	end
	RENDER_CHUNK_HEAP:set( bg_write_offset+ix, iy, bg_tile )
end

function get_chunk_fname(cx, cy)
	return SAVEGAME_DIRECTORY .. "/" .. WORLD_NAME .. "/" .. cx .. "_" .. cy .. "-chunk.pod"
end

function chunk.free_chunk(c)
	ALLOCATION_TABLE[c.alloc_idx] = false
	ALLOCATION_TABLE[c.bg_alloc_idx] = false
	ALLOCATION_TABLE[c.light_alloc_idx] = false
	LOADED_CHUNKS[c.own_id] = nil
	if c.changed then
		CHUNKS_TO_SAVE[#CHUNKS_TO_SAVE+1] = c
	end
end

function chunk.get_chunk_by_world_pos(x,y)
	return chunk.get_chunk(flr(x/CHUNK_SIZE),flr(y/CHUNK_SIZE))
end

function chunk.get_chunk(cx,cy)
	local chunk_id = cx .. "_" .. cy
	return LOADED_CHUNKS[chunk_id]
end

function chunk.render_loaded_chunks(base_x,base_y)
	if ( key("tab") and key("shift") ) map() return
	bar_start("Rendering")
	for i,c in pairs(LOADED_CHUNKS) do
		if (c.rendered) then
			map(
				c.bg_tile_idx,  --tile_x,       starting tiles
			   0,         	 --tile_y, 
				c.screen_x,  --[sx,          screen position
				c.screen_y,  --sy], 
				CHUNK_SIZE,  --[tiles_x,     how much to draw 
				CHUNK_SIZE,  --tiles_y], 
				0x00,        --[p8layers],   p8 layers...
				8,           --[tile_w,      tile size
				8            --tile_h]
			)
			map(
				c.tile_idx,  --tile_x,       starting tiles
			   0,         	 --tile_y, 
				c.screen_x,  --[sx,          screen position
				c.screen_y,  --sy], 
				CHUNK_SIZE,  --[tiles_x,     how much to draw 
				CHUNK_SIZE,  --tiles_y], 
				0x00,        --[p8layers],   p8 layers...
				8,           --[tile_w,      tile size
				8            --tile_h]
			)
			for i,v in pairs(c.schedule) do
				pset(v[1]*8+4,v[2]*8+4,10)
			end
		end
	end
	bar_end("Rendering")

end

function chunk.render_light(base_x,base_y)
	-- if true then return end
	if ( key("tab") and key("shift") ) map() return
	bar_start("Rendering")
	for i,c in pairs(LOADED_CHUNKS) do
		if (c.rendered) then
			map(
				c.light_tile_idx,  --tile_x,       starting tiles
			   0,         	 --tile_y, 
				c.screen_x,  --[sx,          screen position
				c.screen_y,  --sy], 
				CHUNK_SIZE,  --[tiles_x,     how much to draw 
				CHUNK_SIZE,  --tiles_y], 
				0x00,        --[p8layers],   p8 layers...
				8,           --[tile_w,      tile size
				8            --tile_h]
			)
			if (key("tab")) then
				prints(c.debug_label, c.screen_x, c.screen_y, 7) 
				prints(c.x .. ' ' .. c.y, c.screen_x, c.screen_y+8, 7)
			end
			if (key "tab" and key "l" ) then
				print(c.debug_label or "", c.screen_x, c.screen_y, 7)
				for ix=0,CHUNK_SIZE-1 do
					for iy=0,CHUNK_SIZE-1 do
						if ix%4==0 then
							print(c.sky:get(ix,iy) .. "/" .. c.light:get(ix,iy), c.screen_x + ix * 8, c.screen_y + iy*8)
						end
					end
				end 
			end
		end
	end
	bar_end("Rendering")
end

function chunk.load_chunk(cx,cy)
	local filename = get_chunk_fname(cx, cy)
	local type, size, path = fstat(filename)
	local new_chunk = nil
	yield()
	if type then
		-- Load from disk...
		new_chunk = chunk.build_chunk()
		local data = fetch(filename)
		new_chunk.tiles = data.tiles
		new_chunk.bg = data.bg
		new_chunk.light = data.light
		new_chunk.light_sources = data.light_sources
		new_chunk.sky = data.sky
		new_chunk.schedule = data.schedule
		new_chunk.debug_label = "Loaded"
	else
		-- Generate...
		new_chunk = do_world_generation(cx,cy)
		new_chunk.changed = true
		new_chunk.debug_label = "Generated"
	end
	new_chunk.loaded_at_x = cx
	new_chunk.loaded_at_y = cy
	return new_chunk
end


function chunk.request_load(cx,cy)
	local cid = cx .. "/" .. cy
	for i,v in pairs(my_requests) do
		if v == cid then return end
	end
	my_requests[#my_requests+1] = cid
	send_message(CHUNK_PROCESS, { event = "request_load", payload = { cx = cx, cy = cy }  })
end

function chunk.start_loader_routine() 
	return cocreate(function() 
		while true do
			aggro_loader()
		end
	end)
end

function aggro_loader()
	local loader_area_start_x = flr(center_x/CHUNK_SIZE_IN_PIXELS) - 1
	local loader_area_start_y = flr(center_y/CHUNK_SIZE_IN_PIXELS) - 1
	local loader_area_end_x   = loader_area_start_x + 9
	local loader_area_end_y   = loader_area_start_y + 7
	
	local rendered_area_start_x = loader_area_start_x
	local rendered_area_end_x   = loader_area_end_x
	local rendered_area_start_y = loader_area_start_y
	local rendered_area_end_y   = loader_area_end_y

	for ix = loader_area_start_x, loader_area_end_x do
		yield()
		for iy = loader_area_start_y, loader_area_end_y do			
			local found_chunk = chunk.get_chunk(ix, iy)
			if found_chunk then
				found_chunk.touched = true
				found_chunk.rendered =
					ix >= rendered_area_start_x and ix <= rendered_area_end_x and
					iy >= rendered_area_start_y and iy <= rendered_area_end_y 
			else
				if not FALLBACK_LOADER_BEHAVIOR then
					chunk.request_load(ix, iy)
				else
					--[[ Fine, I'll load it myself! ]]
					local new_chunk = chunk.load_chunk(ix, iy)
					chunk.recv_chunk({payload = new_chunk})
				end

			end
		end
	end
	for i,c in pairs(LOADED_CHUNKS) do
		if c.touched then
			c.touched = false
		else
			chunk.free_chunk(c)
		end
	end
end


local LIGHT_CACHE = {}
function chunk.place_light_in_world(x,y,str)
	local owner_chunk = chunk.get_chunk_by_world_pos(x,y)
	if not owner_chunk then return end
	if not owner_chunk.light_sources then owner_chunk.light_sources = {} end
	owner_chunk.light_sources[#owner_chunk.light_sources+1] = {
		x = x,
		y = y,
		str = str
	}
	
	local light_overlay = LIGHT_CACHE[str]
	if not light_overlay then
		light_overlay = userdata("i8", str, str)
		tracked_rect(str, str, function(ix, iy, dist, idist)
			light_overlay:set(ix, iy, -idist)
		end)
		LIGHT_CACHE[str] = light_overlay
	end
	
	local affected_cx, affected_cy = owner_chunk.x, owner_chunk.y
	local affected_chunk_radius = flr(str/CHUNK_SIZE/2)
	
	local min_chunk_offset = -affected_chunk_radius
	local max_chunk_offset = affected_chunk_radius
	
	local tile_x = x%CHUNK_SIZE
	local tile_y = y%CHUNK_SIZE
	
	local center_corner = flr(str / 2)
	
	for ricx = min_chunk_offset, max_chunk_offset do
		for ricy = min_chunk_offset, max_chunk_offset do
			local icx, icy = affected_cx+ricx, affected_cy+ricy
			local c = chunk.get_chunk(icx, icy)
			if c then
				local slice = userdata("i8",CHUNK_SIZE,CHUNK_SIZE)
				light_overlay:blit(
					slice, 
					center_corner - tile_x + ricx*CHUNK_SIZE,
					center_corner - tile_y + ricy*CHUNK_SIZE
				)
				c.light = c.light + slice
				chunk.update_all_light_in_chunk(c)
			end
		end
	end
end

function chunk.break_light_in_world(x,y)
	local owner_chunk = chunk.get_chunk_by_world_pos(x,y)
	if not owner_chunk then return end
	if not owner_chunk.light_sources then owner_chunk.light_sources = {} end
	local found_sources = {} -- cba backwards iteration
	for i,v in pairs(owner_chunk.light_sources) do
		if v.x == x and v.y == y then
			found_sources[#found_sources+1] = v
		end
	end
	for i,v in pairs(found_sources) do
		del(owner_chunk.light_sources, v)
		local str = v.str
		local light_overlay = LIGHT_CACHE[str]
		if not light_overlay then
			light_overlay = userdata("i8", str, str)
			tracked_rect(str, str, function(ix, iy, dist, idist)
				light_overlay:set(ix, iy, -idist)
			end)
			LIGHT_CACHE[str] = light_overlay
		end
		local affected_cx, affected_cy = owner_chunk.x, owner_chunk.y
		local affected_chunk_radius = flr(str/CHUNK_SIZE/2)
		
		local min_chunk_offset = -affected_chunk_radius
		local max_chunk_offset = affected_chunk_radius
		
		local tile_x = x%CHUNK_SIZE
		local tile_y = y%CHUNK_SIZE
		
		local center_corner = flr(str / 2)
		
		for ricx = min_chunk_offset, max_chunk_offset do
			for ricy = min_chunk_offset, max_chunk_offset do
				local icx, icy = affected_cx+ricx, affected_cy+ricy
				local c = chunk.get_chunk(icx, icy)
				if c then
					local slice = userdata("i8",CHUNK_SIZE,CHUNK_SIZE)
					light_overlay:blit(
						slice, 
						center_corner - tile_x + ricx*CHUNK_SIZE,
						center_corner - tile_y + ricy*CHUNK_SIZE
					)
					c.light = c.light - slice
					chunk.update_all_light_in_chunk(c)
				end
			end
		end
	end
end


CHUNKS_TO_SAVE = {}

function chunk.start_saver_routine()
	return cocreate(function() 
		while true do
			aggro_saver()
			yield()
		end
	end)
end

function aggro_saver()
	local c = deli(CHUNKS_TO_SAVE)
	if c then
		if not FALLBACK_LOADER_BEHAVIOR then 
			chunk.request_save(c)
		else
			chunk.save_to_disk(c)
		end
	end
	return c
end

function chunk.request_save(c)
	send_message(CHUNK_PROCESS, { event = "request_save", payload = c })
end

function chunk.save_to_disk(c)
		local filename = get_chunk_fname(c.x,c.y)
		local data = {
			tiles = c.tiles,
			bg    = c.bg,
			light = c.light,
			sky   = c.sky,
			schedule = c.schedule,
			light_sources = c.light_sources,
		}
		store(filename, data)
end

function save_all()
	for i,c in pairs(LOADED_CHUNKS) do
		print("Will save chunk " .. i)
		CHUNKS_TO_SAVE[#CHUNKS_TO_SAVE+1] = c
	end
	local cc = 0
	while aggro_saver() do cls() print("Saved chunk " .. cc ) cc+=1 flip() end
end

function chunk.recv_chunk(evt)
	local new_chunk = evt.payload
	
	ADD_RENDER_GEN(chunk.add_chunk, {new_chunk.loaded_at_x, new_chunk.loaded_at_y, new_chunk})
	new_chunk.touched = true
end
--===========--
function do_world_generation(cx,cy,y)
	local new_chunk = chunk.build_chunk()
	new_chunk.tiles, new_chunk.bg, new_chunk.light, new_chunk.sky = generate_terrain(cx,cy,y)
	return new_chunk
end
:: chunkservice.lua
--[[pod_format="raw",created="2025-04-25 11:19:16",modified="2025-06-30 18:38:20",revision=824]]
include "chunk.lua"

local MAIN_PID = env().argv[1]

EVENT_QUEUE = {}
on_event("request_load", function(evt)
	local args = evt.payload
	local chunkdata = chunk.load_chunk(args.cx, args.cy)
	send_message(MAIN_PID, { event = "load_chunk", payload = chunkdata })
end)

on_event("request_save", function(evt)
	local chunkdata = evt.payload
	chunk.save_to_disk(evt.payload)
end)

function _update()
	error "Update called"
end

--[[
local tt = 0
while true do
	if tt > 999999 then
		local ps = fetch "/ram/system/processes.pod"
		local alive = false
		for i,proc in pairs(ps) do
			if proc.id == MAIN_PID then
				alive = true
			end
		end
		
		if not alive then error "Subprocess exitting!" end
	end
	yield()
end
]]
:: constants.lua
--[[pod_format="raw",created="2025-04-12 19:11:01",modified="2025-06-30 15:24:59",revision=4006]]

GAME_VERSION_STRING = "Indev 0w0"
TILE_SIZE = 8
CHUNK_SIZE = 8
CHUNK_SIZE_IN_PIXELS = TILE_SIZE * CHUNK_SIZE
SAVEGAME_DIRECTORY = "/appdata/picotron_stargazer"

GRAVITY = 0.1
MAX_FALL = 4

SCREEN_WIDTH=480
SCREEN_HEIGHT=270
SCREEN_5 = SCREEN_HEIGHT/5
SCREEN_10 = SCREEN_HEIGHT/10

WORLD_SEED=stat(86)

-- colors top to bottom
-- 0x07
-- 0x1c
-- 0x0c
-- 0x10
-- 0x01

SKY_COLORS = {
	[0]    = 0x0707,
	[SCREEN_10*1]  = 0x071c,
	[SCREEN_10*2]  = 0x1c1c,
	[SCREEN_10*3]  = 0x1c0c,
	[SCREEN_10*4]  = 0x0c0c,
	[SCREEN_10*5]  = 0x0c10,
	[SCREEN_10*6]  = 0x1010,
	[SCREEN_10*7]  = 0x1001,
	[SCREEN_10*8]  = 0x0101,
	[SCREEN_10*9] = 0x0100,
}

BOTTOM_RIGHT_PIXEL_X=479
BOTTOM_RIGHT_PIXEL_Y=269




:: entity.lua
--[[pod_format="raw",created="2025-04-14 16:32:59",modified="2025-06-12 19:36:50",revision=2115]]

include "constants.lua"
include "chunk.lua"



ENTITIES = {}
function update_entities()
	for e in all(ENTITIES) do
		e:update()
		move_entity(e)
	end
end

function draw_entities(camera_x, camera_y)
	for e in all(ENTITIES) do
		camera(camera_x-flr(e.x),camera_y-flr(e.y))
		e:draw()
	end
	camera(camera_x, camera_y)
end

function add_entity(e)
	ENTITIES[#ENTITIES+1] = e
end

function is_tile_solid(x,y)
	local tile_number = chunk.get_tile_in_world(x,y)
	return tile_number and tile_number > 0 and fget(256+tile_number,1) == false
end

function move_entity(e)
    -- Horizontal movement
    e.x += e.dx
    local tile_size = TILE_SIZE
    
    -- X collision check
    local x_side = e.dx > 0 and (e.x + e.width*tile_size) or e.x
    local tx = flr(x_side/tile_size)
    local ty_start = flr(e.y/tile_size)
    local ty_end = flr((e.y + e.height*tile_size - 1)/tile_size)
    
    for ty=ty_start,ty_end do
        if is_tile_solid(tx, ty) then
            e.x = e.dx > 0 and (tx*tile_size - e.width*tile_size) or (tx+1)*tile_size
            e.dx = 0
            break
        end
    end
    
    -- Vertical movement
    -- Apply gravity
    e.dy = mid(-MAX_FALL, e.dy + GRAVITY, MAX_FALL)
    e.y += e.dy
    e.grounded = false
    
    -- Y collision check
    local y_side = e.dy > 0 and (e.y + e.height*tile_size) or e.y
    local ty = flr(y_side/tile_size)
    local tx_start = flr(e.x/tile_size)
    local tx_end = flr((e.x + e.width*tile_size - 1)/tile_size)
    
    for tx=tx_start,tx_end do
        if is_tile_solid(tx, ty) then
            e.y = e.dy > 0 and (ty*tile_size - e.height*tile_size) or (ty+1)*tile_size
            if e.dy > 0 then e.grounded = true end
            e.dy = 0
            break
        end
    end
end
:: generator.lua
--[[pod_format="raw",created="2025-04-13 21:39:41",modified="2025-06-30 18:38:20",revision=2216]]
include "noise.lua"
include "constants.lua"

local nf = simplex.Noise3D
function noise(x,y)
	return nf(x,y,n)
	+ 0.5*nf(2*x,2*y,n)
	+ 0.25*nf(4*x,4*y,n)
end

local nf = simplex.Noise3D
function noise(x,y)
	return nf(x,y,n)
	+ 0.5*nf(2*x,2*y,n)
	+ 0.25*nf(4*x,4*y,n)
end

local USERDATA_6 = userdata('i8', CHUNK_SIZE, CHUNK_SIZE)
for ix=0,7 do
	for iy=0,7 do
		USERDATA_6:set(ix, iy, 6)
	end
end

function generate_terrain(cx,cy)
	local terrain_data = userdata("i16",CHUNK_SIZE,CHUNK_SIZE)
	local bg_data = userdata("i16",CHUNK_SIZE,CHUNK_SIZE)
	local light_data = userdata("i8",CHUNK_SIZE,CHUNK_SIZE)
	local sky_data = userdata("u8",CHUNK_SIZE,CHUNK_SIZE)
	for ix=0,CHUNK_SIZE-1 do
		local world_x = cx*CHUNK_SIZE+ix
		-- Generate height data for this position of the map
		-- Sea level is at 0
		local column_height = flr(nf(world_x/64, 0xDEADBEEF, WORLD_SEED)*16)
		for iy = 0,CHUNK_SIZE-1 do
			local tile = 0
			local bg_tile = 0
			local world_y = cy*CHUNK_SIZE+iy
			local light_level = 0
			if world_y > column_height then
				light_level = min(6,world_y-column_height)
				bg_tile = 9
				tile = 2
				local cavern_noise = nf(world_x/64, world_y/64, WORLD_SEED)
					if cavern_noise > -0.1 and cavern_noise < 0.1 then
						tile = 0
					end 	
					if cavern_noise > 0 then
						tile = 5
					end			
			end
			if world_y == column_height then
				bg_tile = 9
				tile = 1
			end
			if world_y == column_height-1 then
				tile = rnd(1)<0.2 and ( (rnd(1)<0.5 and 20 or 27)+flr(rnd(4)))  or 0
			end
			
			-- full dark
			USERDATA_6:blit(light_data, 0, 0, 0, 0, 8, 8)
			
			bg_data:set(ix,iy,bg_tile)
			terrain_data:set(ix,iy,tile)
			sky_data:set(ix,iy,light_level)
		end
	end
	return terrain_data, bg_data, light_data, sky_data
end
:: init_routines.lua
--[[pod_format="raw",created="2025-06-12 19:46:34",modified="2025-06-30 15:07:02",revision=833]]
include "lightmap_data.lua"

COLOR_RAMPS = {
 -- {1,2,3,4...}
 {0, 21, 19, 20, 21, 22, 23, 24, 25,  9, 27, 16, 18, 30, 24, 1, 19, 1, 1, 21, 1, 5, 30, 2, 24, 27,  3, 29, 13,  2,  4},
 {0,  0, 21, 21,  0, 21, 30, 21, 24, 25, 19,  1,  1,  2,  2, 0,  1, 0, 0,  1, 0, 0,  2, 0,  2,  3, 19, 18, 18,  1, 20},
 {0,  0,  0,  0,  0,  1,  1,  0, 21,  2,  1,  0,  0,  1, 21, 0,  0, 0, 0,  0, 0, 0,  1, 0, 21, 19,  1,  1,  1,  0, 21}
 -- {0,0,0,0...}
}
COLOR_RAMPS[4] = {}
for i=1,32 do COLOR_RAMPS[4][i] = 0 end
for i=33,64 do COLOR_RAMPS[4][i] = i end

function init_everything()
	init_colortables()
	set_lightmap(1)
	fetch("/system/fonts/p8.font"):poke(0x4000)
	fillp()
end

function init_colortables()
	color_table = userdata("u8", 64, 64)
	memmap(0x8000, color_table)
	for i=0,63 do
		for j=0,63 do
			color_table:set(i,j,j)
		end
	end
	for i=0,63 do
		color_table:set(i,0,i)
	end
	for k=1,4 do
		for i=1,64 do
			color_table:set(i, 32+k, COLOR_RAMPS[k][i])
		end
		color_table:set(63, 32+k, 63)
	end
end


:: label.qoi
b64$cW9pZgAAAeAAAAEOBAH_Ka3--f39-f39_f4dK1PBCijACsAowArAKMEKKMEKKMEKKMAKwSjA
CsgoxgrD-v-x6MEKwD-ACsA-wAo-wQo-wQrAP8AKP8AKyD-BCj-BCj-BCsA-wAo-wQo-wQo-wQo-
wQrHP8AKwD-ACsA-wQo-Cj8Kwz-BCj8KPwo-wQrHP8EKP8EKP8AKyD-ACsA-wQo-wQo-wArAP8EK
P8EKP8EKP8EKP8EKP8EKwz-BCv39-fMowArAKArBKAooCigKKAooCsEoCigKwCgKwCgKKAooCsoo
-v93qMUKwD-ACsA--hJTWcA-CjnAPwo-OQo-OcA-OT85Pwo-OT85PwrEP8AKwD85wD85Pzk-OT85
Pwo5wD85PzkKOT85PznBPzk-OQrCP8EKPzk-Cj85Pwo-OcE-OT85CsI-OT85Pzk-OT85PzkKwz-A
Cj85wT85wT85PwrAPwrFPzkKwDk-OT85wQo-OQrAOT85Pzk-OQo5PzkKOT85Pzk-OQo5PzkKwj85
PzkK-f398igKKAoowArAKAooCigKKAoowArAKMAKwSgKwCgKKAooCsooHcUKPwo-OQo-OQo-OQrA
Pzk-OQo-OQo-wAo5Pzk-OT85PzkKwj8KOcAKPzkKP8E5P8AKOT85CsA-wTkKPwo5P8AKwD-ACjkK
wz85wD85Pzk-OT85P8AKwD85PzkKwj85Pzk-OT85Pzk-OQrCPwo5wD-ACsA-wArAPzk-OQrAOQrE
PzkKwT85P8EKwD85CsA-wDk-OT85CsA-OQo-wDk-OT85Cj-AOQrCPzk-OQr9-f3yKMAKwCgKwSgK
KAooCigKKArBKAooCsAoCsAoCigKKAooCsgoHcUKP8E5Cj85Cj85CsA-OT85Cj85Cj85Pwo-OT85
Pzk-OQrDOT8KwD85Cj85Pzk-OT8KPzk-Cj85Pzk-CjkKPznACj85PwrEPzkKPzk-OT85Pzk-OcAK
P8E5CsI-OT85P8E5Pzk-OQrDOT8KPznACj85wAo-OT85Cj8KxT85CsE-OQo5PzkKPzkKwT85Pzk-
OQrAPzkKwD85Pzk-OQrAPzkKwj85PzkK-f398igKKAoowQooCigKKMEKKMEKKAooCijBCigKKAoo
wQrIKB3FCj85wT-BCsA-wAo-wAo5Cj85Cj85Pzk-wAo5Pzk-OQrCP8AKOQo-OQo-OT85Pzk-OT-B
OT85Pzk-wQo-wQo-OT85CsI-wQo-OT85P8E5P8EKwD85wArCP8E5P8E5P8E5CsI-wAo5P8EKP8EK
P8E5CsA5CsM-wQrBPzk-wTk-wQo-wTk-wTkKwD85P8E5P8E5P8E5Cj8KwD-BOQr9-f394SgdxQrA
OQrBOcEKwDnACjnACsE5CsA5CjkKOcAKwDkKOQrDOcAKwTkKwDkKOQo5CjkKOcEKOQo5CjnBCjnB
CjkKOQrDOcEKOQo5CjnBCjnBCsA5CsQ5wQo5wQo5wQrDOcAKwDnBCjnBCjnBCsc5wQrBOQo5wQo5
wQo5wQo5wQrBOQo5wQo5wQo5wQrAOQrAOcEK-f39-eEoHcUKwz8KPwo-wQo-CsE-wQrAP8AKwz-B
Cj8KPwo-wQo-wQo-wQo-wQo-wQo-wQo-wArAP8EKP8EKPwrFP8EKPwo-Cj-BCj8KwT-ACsE-Csg-
wQo-wArAP8AKxD-BCj-BCj-BCj-ACsA-wQo-wQrAP8AKPwo-CsM-wQrAP8AKxD-ACj-BCj-BCj-A
CsA-wQrAP8AKP8EKP8EKP8AKwD-BCsA-wAo-Cj8Kwz-BCj-BCsA-wAo-Cj8KxD-ACj-ACsQ-wQo-
CsE-Cj8KP8EKwD-ACj8KPwo-Cj8KwD8K-f33KB3FCsA-wAo-OT85Pzk-OT85CsE-OcA-CjnACsI-
OcE-OT85Pzk-OT85wT85PzkKPznAP8E5PznBPzk-CsA-OcA-OT85PzkKxD85Pzk-OT85Cj85wD85
CsA-OT8KwD85CsQ-wAo-OcE-OT8KPzk-CsM-OcE-OcE-OcE-OT8KPzk-OT85Pzk-CjnAPzk-OQrD
PznAPwo-OQrCPwo5wD85Pzk-OT85Pzk-Cj85Pzk-Cj85Pzk-OT85Pzk-OT8KPzk-OT8KPzk-OT85
CsM-OcA-OcE-CjnAPzk-OQrCPwo-OT85PwrDPzk-OT85CsA-OT85PznBPwo5wD85Pzk-OT85Cj85
Cv391ijBCscowQoowQooCigKxygdxQo-Cj85Pzk-OT-ACjk-OQrBPzkKPzkKxD-ACsE-Cjk-wTk-
wArAP8AKOQo-OQo-OT85P8AKwD85PzkKPzkKP8E5PzkKxD-ACjk-OT85Cj85Cj85CsA-OT85Cj85
CsM-CjnAP8AKwD85Pzk-OT85CsI-wArAP8AKwD-ACsA-OT85P8AKOT-BOT85CsA-wAo5CsM-OQo-
OT85CsI-OQrAP8E5P8AKOT85Pzk-wAo5Pzk-OT-BOT-ACjk-OT85P8AKOT85PzkKPwo5CsM-OQo-
wArAPzkKwD-BOQrCPzk-OT85PzkKwj-ACjk-OQrAPzk-OT-ACsA-wQo-wAo5P8E5Cj85Cv39zigK
KArAKMAKKAooCijBCsUoCigKwygKxygdxQo-wTk-OT85Pzk-Cj85CsE-OQo-OQrEPznACj8KPwo-
OcE-OcAKPzk-CsA-OQo-OT85PznACj85PzkKPzkKPzk-OT85CsQ-OT8KPzk-OQo-OQo-OQrAPzk-
OQrAOQrEOT8KPznACj85Pzk-OT85CsI-OcAKPznACj85wAo-OT85Pzk-Cj85Pzk-OQrAPzk-CsQ-
OQo-OT85CsI-OQrAPzk-OT85Pwo-OT85Pzk-Cj85Pzk-OT85Pzk-Cj85Pzk-OT8KPzk-OT8KPwrE
PzkKPznACj85CsA-OT85CsI-OT85Pzk-OQrCPzk-Cj85CsA-OT85PznACsA5Pzk-OT8KwDk-OQrA
OQr9-c4oCigKKArBKMEKKMAKxSjACijBCsAoCsgoHcUKPznBCj-AOT-BOT-BCj-BCsA-wArDP8EK
Pzk-OT85CsA-wQo-OT85P8EKPzk-OT-BCj85PzkKPzkKPzk-OT-BCsM-wTkKP8A5P8EKP8EKP8E5
Cj8KxD-ACjk-wQo-OT85P8E5CsI-OQrAP8EKP8EKP8E5P8E5Pzk-OQo-wAo-OT85CsM-OQo-wAo5
CsM-wAo-OT85Pzk-OT-BOT-BOT-ACjk-OT85Pzk-OT-BOT-BOT-ACjk-OT85Cj8KwT85Cj-BCsA-
wAo-OT85CsI-wAo5Pzk-OQrCP8E5P8EKwD-AOT-BCj-ACjk-OT85P8E5Cj8K-f3PKMEKKArBKArB
KArHKArBKAooCskoHcUKwDkKwjnACjnBCjnBCjnBCsA5wArDOcEKOQo5CjkKwTnBCjkKOQo5wQo5
CjkKOcEKOQo5CsA5CsA5CjkKOcEKwznBCsA5wAo5wQo5wQo5wQrAOQrEOcAKwDnBCjkKOQo5wQrD
OQrBOcEKOcEKOcEKOcEKOQo5CsA5wAo5CjkKxDkKwDnACsU5wAo5CjkKOQo5CjnBCjnBCjnACsA5
CjkKOQo5CjnBCjnBCjnACsA5CjkKwDkKwTkKwDnBCsA5wAo5CjkKwznACsA5CjkKwznBCjnBCsA5
wAo5wQo5wArAOQo5CjnBCsA5Cv39zijBCsAowAooCsEoCsUowQoowQooCigKxygdxQrEP8AKPwrB
P8AKzD-BCsA-wAo-wQrDPwo-Cj-BCj8KwT-BCsA-Cv39-f39-eMoHcUKPwo-Cj8KPzk-OQrAPzk-
CsM-Cj8Kwz85wT8KPzk-OT85CsI-OT85PznBPzkKwD85PzkKPzkK-f39-f394igdxQo-OT85Pzk-
OT85CsA-OT85CsI-OT85CsI-wArAPzk-OT-ACjkKwj-BOT-ACsA-OQrAP8E5Cj85Cv39-f39-eIo
HcUKP8E5Pzk-OT85CsA-OT85CsI-wTkKwj85wAo-OT85Pzk-CsM-OT85PznACj85CsA-OcEKwDkK
-f39-f394igdxQo-OT85P8AKOT-BCj-BOQrCPzk-OQrCPzkKwD-ACjk-OT85CsI-OT85P8EKP8EK
PzkKwT8K-f39-f394ygdxQrAOQo5CjnACsA5wQo5wQrDOQo5CsM5CsE5wArAOQo5CsM5CjkKOcEK
OcEKOQrCOQr9-f39-f3iKB3FCv39wz-BCj-BCv39-f392CgdxQrEP8AKwD-ACsA-CsU-wAo-Cj8K
zD-ACj8Kwj8KxT-ACj8KPwrLP8EKwD-ACsA-CsU-wAo-Cj8KzD-ACsA-wArAPwrEPzk-OT85PzkK
-f39-f3XKB3FCsM-CjnAPwo5wArAOQrDPwo-OT-ACjkKyj8KOcA-OQrCOQrDPwo-OT-ACjkKyz85
wD8KOcAKwDkKwz8KPzk-wAo5Cso-CjnAPwo5wArAOQrDP8E5Pzk-OQr9-f39-dcoHcUKwz85CsE5
PwrAPwrEPzk-OT85PwrLPzkKwD85CsE-CsQ-OT85Pzk-Csw-OQrAOT8KwD8KxD85Pzk-OT8Kyz85
CsA-OQrBPwrEPzk-OT85PzkK-f39-f3XKB3FCsQ-wAo-wAo5CsA5CsM-wAo5Pzk-OQrLP8AKwD-A
CsE5CsM-wAo5Pzk-OQrLPzkKP8AKOQrAOQrDP8AKOT85PzkKyz-ACsA-wArBOQrDP8E5P8E5Cv39
-f391ygdxQrFOcAKOcAKyDnACsA5CjkKzDnACsA5wArHOcAKwDkKOQrMOQrAOcAKyDnACsA5CjkK
zDnACsA5wArHOcEKOcEK-f39-f3XKB3FCv39-f39-f3kKB3FCv39-f39-f3kKB3FCv39-f39-f3k
KB3FCv39-f39-f3kKB3FCv39-f39-f3kKB3FCv39-f3I-gDkNsb_JGOw-fgjxgr9zigdxQr9-f39
yP4AslEjJiMmIyYjIMAKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIg
wgrCIMIKwiDCCsIgwgrCIMAmIyYjJiMmIwr9zigdxQr9-f39yP6rUjYm-nQvKSYbJhsmIP4prf8g
CsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAog-qtSNiYbJhsmGyb_Ka3-xCDOCvYoHcUK-f39-cj_AIdRGw8bDxsP-kUtMiAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIA8bDxsP
Gw8DCsQgzgr2KB3FCv39-f3I-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3-xCDCCsYgwgr2KB3F
Cv39-f3I-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDA
CiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAK
IArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3-xCDCCsYgwgrmKMEKwCjACijBCsMoxgr9
-f39yP6rUjYbxAMgwP4prf-CIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwP6rUjYbxAP_Ka3-xCDACsAgwArCIMAKwCDACuIowArAKArBKArC
KArEKP7-owDFCv39-f3IGwPEGyD9_BsDxBsKxCDACsAgwArCIMAKwCDACuIoCigKKMAKwCgKwigK
xCghxQr9-f39yCPGIP34I8YKxCDACsIgwgrCIMAK4ijACsAoCsEoCsIoCsQoIcUK-f39-cgmIyYj
JiMmIyDACsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIg
wgrCIMIKwiDAJiMmIyYjJiMKxCDACsIgwgrCIMAK4igKKAoowQrAKMAKwCgKxCghxQr9-f39yP6r
UjYmGyYbJhsmIP4prf8gCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAog-qtSNiYbJhsmGyb_Ka3-xCDACsIgwgrCIMAK9ighxQr9-f39yA8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMKxCDACsIgwgrCIMAoCigKKAooCijACsAoCigKwyjBCijACsAo
wArAKMEKKMAKwSjACssoxgr9-f39yP6rUjYbxAMg-imt-8AgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCD_q1I2G8QD-imt-8QgwArAIMAK
wiDACijAICgKKAooCigKKAooCigKKArDKAooCigKKAooCigKwCgKwCgKKAooCs0o-v-sJ8UK-f39
-cj_q1I2G8QDIP4prf8gCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAog-qtSNhvEA-4prf-EIMAKwCDACsIgwCgKIMAowQooCigKKAooCijA
CsQowQooCigKKMIKKArAKAooCijACsEoCigKxigfxQr9-f39yP6rUjYbxAMgwP4prf-CIMIKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwP6rUjYb
xAP_Ka3-xCDCCsYoIMEoCigKKAooCigKKAooCigKwyjDCijECijCCigKKMEKwigKxijGCv39-f3I
GwPEGyD9_BsDxBsKxCDCCsYgKMAgKAooCsAowAooCigKKAooCsMoxQooxQooCigKKMIKwCgK-f39
-dkjxiDSPyA-ID-BIME-IMM-wCDAP8EgPyD9yyPGCsQgzgrTKMEKKArBKArBKArFKAooCigK-f39
-domIyYjJiMmIyDACsIgwgrCIMIKwD8KPyA-ID8KwD8gwgrBPyDCPwo-CiDCCsIgwgrCIMIKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDAJiMmIyYjJiMKxCDOCtMowQrAKMAKKArBKArFKMEKKAoo
Cv39-f3Y-qtSNiYbJhsmGyYg-imt-yAKwCAKIMAKIArAIAogP8EKP8EgPwo-CsA-CiA-wQrAPwog
wD-ACj-BIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAK
IArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8bDxsPGw8DIArAIMAK
wCDACsAgwArAIMAKwCDACj8gPwo-IMA-CiDACsAgwD8KIMAKPyA-Cj8gwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
DxsPGw8bDwMK8SjBCscowQooCigK-f39-dj_q1I2G8QDIP4prf-AIMAKwCDACsAgwArAIMAKwCDA
Cj8gP8EgPwrAIMAKwCA-wSA-wSA-wSDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCD_q1I2G8QD-imt-_koCigKwCjA
CigKKAoowQrFKArBKAr9-f392P6rUjYbxAMg-imt-yAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiD_q1I2G8QD-imt-_koCigKKArBKMEK
KMAKxSjACsAoCv39-f3Z-qtSNhvEAyDA-imt-8IgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrC
IMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvEA-4prf-pKMEKKArBKArBKArHKAoo
Cv39-f3aGwPEGyD9_BsDxBsK6SjBCsAowAooCsEoCsUowQooCigK-f39-dgjxiDPPyA-ID8gPyD9
4CPGCv39-f394CYjJiMmIyYjIMAKwiDCCsIgwD8gKAooCiggKCAKwiDCCsIgwgrCIMIKwiDCCsIg
wgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAmIyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_
Ka3-IArAIAogwAogCsAgCiDAKCAKwCAKPyAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAog
wAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDA
CiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8bDxsPGw8DIArAIMAKwCDACsAgwArAID8KwCgg
CsAgKArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g
-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDAKMA-KArAPyAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAg
CiA-KCAKwCgKICgKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAK
IMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_
Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMAoPwrBPyg-IMAKwiDCCsIgwgrCIMIKwiDCCsIg
wgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMD_q1I2G8QD-imt--39-f394BsDxBsgzj8oPyA-
KD8gKCD93xsDxBsK-f39-f3gI8YgzyjAPyjAICgg-eAjxgr9-f39-eAmIyYjJiMmIyDACsIgwgrC
IMIKKArAIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39
-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvE
A-4prf-9-f39-eAbA8QbIP34GwPEGwr9-f39-eAjxiD9_CPGCv39-f394CYjJiMmIyYjIMAKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39
-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvE
A-4prf-9-f39-eAbA8QbIP34GwPEGwr9-f39-eAjxiD9_CPGCv39-f394CYjJiMmIyYjIMAKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39
-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvE
A-4prf-9-f39-eAbA8QbIP34GwPEGwr9-f39-eAjxiD9_CPGCv39-f394CYjJiMmIyYjIMAKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39
-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvE
A-4prf-9-f39-eAbA8QbIP34GwPEGwr9-f39-eAjxiD9_CPGCv39-f394CYjJiMmIyYjIMAKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt--39-f394A8b
DxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgDxsPGw8bDwMK-f39-f3g-qtSNhvEAyD_Ka3-wCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP6rUjYbxAP_Ka3--f39
-f3g-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIP6rUjYbxAP_Ka3--f39-f3g-qtSNhvEAyDA-imt-8IgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDA-qtSNhvE
A-4prf-9-f39-eAbA8QbIP34GwPEGwr9-f39-eAjxiD9_CPGCv39-f394CYjJiMmIyYjIMAKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAm
IyYjJiMmIwr9-f39-eD_q1I2JhsmGyYbJiD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIP6rUjYmGyYbJhsm-imt-8gfCh8K-f39
-f3TDxsPGw8bDwMgCsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCAPGw8bDxsPAwrIHyHACv39-f390-6rUjYbxAMg-imt-8AgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCD_q1I2
G8QD-imt-8n_4msCCv39-f391P6rUjYbxAMg-imt-yAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiD_q1I2G8QD-imt-8n_X1dPCv39-f39
1P6rUjYbxAMgwP4prf-CIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDC
CsIgwgrCIMIKwiDCCsIgwP6rUjYbxAP_Ka3-yi4K-f39-f3TGwPEGyD9_BsDxBsKyS4K-f39-f3U
I8Yg-fgj-cAK-f39-eYmIyYjJiMmIyDACsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDAJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYj
JiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIwr9-f395v6rUjYmGyYbJhsmIP4prf8g
CsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAog-qtSNiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYb
JhsmGyYKJhsmGyYbJv4prf-9-f395g8bDxsPGw8DIArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgDxsPGw8bDwMPGw8bDxsPAw8bDxsP
Gw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAwr9-f395v6rUjYbxAMg
-imt-8AgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCD_q1I2G8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEA-4prf-9-f395v6rUjYb
xAMg-imt-yAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiD_q1I2G8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEA-4prf-9-f395v6r
UjYbxAMgwP4prf-CIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIg
wgrCIMIKwiDCCsIgwP6rUjYbxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QD-imt--39-f3m
GwPEGyD9_BsDxBvAA8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbCv39-f3mI8Yg-fj_ZUaI-v_s
xf7kDasxDzEP-oN2nDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA6MQ8x
DzEPEDoxDzEPMQ8QCv39-f3mJiMmIyYjJiMgwArCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIK
wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwDE6EDoQOhAoMToQOhA6ECgxOhA6EDoQKDE6
EDoQOhAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6ECgK-f39-eb_q1I2JhsmGyYbJiD_
Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAog
wAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDA
CiAKwCAKIA8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8Q
OhA6EDo5DxA6EDoQOjkK-f39-eb_AIdRGw8bDxsPAyAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIDE6EDoQKBAoMToQOhAoECgxOhA6
ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgK-f39-eb_q1I2G8QD
IP4prf-AIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArA
IMAKwCDACsAg-uQNqxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6
EDo5DxA6EDoQOjkPEDoQOhA6OQr9-f395v6rUjYbxAMg-imt-yAKwCAKIMAKIArAIAogwAogCsAg
CiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAK
IMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiAxOjk6EDoQKDE6OToQOhAo
MTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoCv39-f3m-qtS
NhvEAyDA-imt-8IgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDC
CsIgwgrCIMIKwiDADxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6
EDo5DxA6EDoQOjkPEDoQOhA6OQr9-f395hsDxBsg-fgQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQ
KDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6Cv39-f3mI8Yg-fg6D8Q6wA-E
OsAPxDrAD8Q6wA-EOsAPxDrAD8Q6wA-EOgr9-f395iYjJiMmIyYjIMAKwiDCCsIgwgrCIMIKwiDC
CsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAPOsQoDzrEKA86xCgP
OsQoDzrEKA86xCgPOsQoDzrEKAr9-f395v6rUjYmGyYbJhsmIP4prf8gCsAgCiDACiAKwCAKIMAK
IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAog
CsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogDzrEKA86xCgPOsQo
DzrEKA86xCgPOsQoDzrEKA86xCgK-f39-eb_AIdRGw8bDxsPAyAKwCDACsAgwArAIMAKwCDACsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIP7kDas6wig6KA86wig6
KA86wig6KA86wig6KA86wig6KA86wig6KA86wig6KA86wig6KAr9-f395v6rUjYbxAMg-imt-8Ag
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCAPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKAr9-f395v6rUjYbxAMg-imt-yAKwCAK
IMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAog
wAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiAP
Oig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigK-f39-eb_q1I2
G8QDIMD_Ka3-wiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIK
wiDCCsIgwgrCIMAPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKAr9-f391R-AIcAKyxsD
xBsg-fg6KMQ6wCjEOsAoxDrAKMQ6wCjEOsAoxDrAKMQ6wCjEOgr9-f391B-AIf7Cw8c-IQrKI8Yg
-fgoD-5_JVMPLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0P
LQ8tOigPLQ8tDy06Cv39-f3UIcE-wCEKyiYjJiMmIyYjIMAKwiDCCsIgwgrCIMIKwiDCCsIgwgrC
IMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMAPKDooOig6-gAAAA8oOig6KDo1
Dyg6KDooOjUPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6NQ8oOig6KDo1Cv39-f3TAMYK
yf6rUjYmGyYbJhsmIP4prf8gCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAK
IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAog
CsAgCiDACiAKwCAKIMAKIArAIAogLTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6
KDoowC06KDooOijALTooOig6KMAtOig6KDoowAr9-f391D-AAz-AAwrK-gCHURsPGw8bDwMgCsAg
wArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCD_5A2rKDooOjU6NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6NTo1Dyg6KDo1OjUPKDoo
OjU6NQ8oOig6NTo1Cv39-f3UP8ADP8ADCsr_q1I2G8QDIP4prf-AIMAKwCDACsAgwArAIMAKwCDA
CsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAK
wCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgwArAIMAKwCDACsAgLTooOig6KMAtOig6KDoo
wC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowAr9-f391CA-
wwrK-qtSNhvEAyD_Ka3-IArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAK
wCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArAIAogwAogCsAgCiDACiAKwCAKIMAKIArA
IAogwAogCsAgCiDACiAKwCAKIA8owTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjB
Oig6NQ8owTooOjUPKME6KDo1Cv39-f3UPyA-wgrK-qtSNhvEAyDA-imt-8IgwgrCIMIKwiDCCsIg
wgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDCCsIgwgrCIMIKwiDALTooOig6KMAtOig6
KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowAr9-f39
1CDECsobA8QbIP34OjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA6NSg1KDUowDo1KDUo
NSjAOjUoNSg1KMA6NSg1KDUowAr9-f390wPBI8ADwSP9-c01LSgtKC0owDUtKC0oLSjANS0oLSgt
KMA1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjACv39-f3WJiMmIyYjJiMm
IyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYj
JiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMm
IyYjJiMmIyYjJiMmIyYjJiMmIyYjLTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1
KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNQr9-f391v6rUjYmGyYbJhsmCiYbJhsmGyYKJhsm
GyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYb
JhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsm
GyYKJhsmGyYbJijANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1
wCjANSg1KDXAKMA1KDUoNcD_Ka3--f39-db_AIdRGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8b
DxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsP
Gw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8b
DwMtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUo
NS01KDUoNSg1Cv39-f3W-qtSNhvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvE
AwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDKMA1KDUoNcAowDUoNSg1wCjANSg1KDXA
KMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wP4prf-9-f391v6rUjYbxAMK
G8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwob
xAMKG8QDChvEAy01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1
KDUtNcEoNSg1-imt--39-f3W-qtSNhvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QD
ChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDKMA1KDUoNcAowDUoNSg1wCjANSg1
KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wP4prf-9-f391hsDxBvA
A8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbwAPEG8AD
xBvAA8QbwAPEGyg1xSg1xSg1xSg1xSg1xSg1xSg1xSg1xQr9-f39xiPOEDHEEMAxxBAb-qtSNsQb
I87_Ka3--eg1-cAK-f39-cYmIyYjJiMmIyYjJiMmIyYjMRDEOTEQxDn_q1I2G8QDJiMmIyYjJiMm
IyYjJiMmI-4prf-96DX9wAr9-f39xv6rUjYmGyYbJhsmCiYbJhsmGyYxEMQ5MRDEOQobxAMKJhsm
GyYbJgomGyYbJhsm-imt--3oNf3ACv39-f3GDxsPGw8bDwMPGw8bDxsPAzEQwjkQOTEQwjkQOf6r
UjYbxAMPGw8bDxsPAw8bDxsPGw8D-imt--3oNf3ACv39-f3G-qtSNhvEAwobxAMxEMQ5MRDEOQob
xAMKG8QDChvEA-4prf-96DX9wAr9-f39xv6rUjYbxAMKG8QDMRA5EMI5MRA5EMI5ChvEAwobxAMK
G8QD-imt--3oNf3ACv39-f3G-qtSNhvEAwobxAMxEMQ5MRDEOQobxAMKG8QDChvEA-4prf-96DX9
wAr9-f39xhsDxBvAA8QbEDnEEMA5xBAbA8QbwAPEG8ADxBsK-eg1-cAK-f399CPOOjH_5A2rMQ8x
DxDAMcQQwDHEEMAxxBAb-qtSNsQbwArEGwMKGwobChvAI8b_Ka3--eA1-cAK-f399CYjJiMmIyYj
JiMmIyYjJiMxOhA6EDoQKDEQxDkxEMQ5MRDEOf6rUjYbxAMKG8QDCgMbAxsDGygmIyYjJiMmI-4p
rf-94DX9wAr9-f30-qtSNiYbJhsmGyYKJhsmGyYbJg8QOhA6EDo5MRDEOTEQxDkxEMQ5ChvEAwob
xAMbwAMbAxsDwAomGyYbJhsm-imt--3gNf3ACv39-fT_AIdRGw8bDxsPAw8bDxsPGw8DMToQOhAo
ECgxEMI5EDkxEMI5EDkxEMI5EDn_q1I2G8QDChvEAwoDGwMbAxsoDxsPGw8bDwP_Ka3--eA1-cAK
-f399P6rUjYbxAMKG8QD-uQNqxA6EDoQOjkxEMQ5MRDEOTEQxDkKG8QDChvEAxvAAxsDGwPAChvE
A-4prf-94DX9wAr9-f30-qtSNhvEAwobxAMxOjk6EDoQKDEQORDCOTEQORDCOTEQORDCOQobxAMK
G8QDCgMbAxsDGygKG8QD-imt--3gNf3ACv39-fT_q1I2G8QDChvEAw8QOhA6EDo5MRDEOTEQxDkx
EMQ5ChvEAwobxAMbwAMbAxsDwAobxAP_Ka3--eA1-cAK-f399BsDxBvAA8QbECg5KDkoOToQOcQQ
wDnEEMA5xBAbA8QbwAPEG8AoAygDKAPAGwPEGwr94DX9wAr9-f3kI846MQ8xDzEPEDoxDzEPMQ8Q
OjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1
KDUoNSg1KCPOCv3QNf3ACv39-eQmIyYjJiMmIyYjJiMmIyYjMToQOhA6ECgxOhA6EDoQKDE6EDoQ
OhAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAowDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1
KDUmIyYjJiMmIyYjJiMmIyYjCv3QNf3ACv39-eT_q1I2JhsmGyYbJgomGyYbJhsmDxA6EDoQOjkP
EDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5NSg1KDUoNSg1KDUoNSg1KDUo
NSg1KDUoNSg1KDXBKAomGyYbJhsmCiYbJhsmGyb_Ka3--dA1-cAK-f395P4Ah1EbDxsPGw8DDxsP
Gw8bDwMxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECjANSg1
KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNQ8bDxsPGw8DDxsPGw8bDwMK-dA1-cAK-f395P6r
UjYbxAMKG8QD-uQNqxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6
EDo5NSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSgKG8QDChvEA-4prf-90DX9wAr9-f3k
-qtSNhvEAwobxAMxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6
ECjANSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNQobxAMKG8QD-imt--3QNf3ACv39-eT_
q1I2G8QDChvEAw8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6
OTUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoChvEAwobxAP_Ka3--dA1-cAK-f395BsD
xBvAA8QbECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6KDUo
NSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUoNSg1KDUbA8QbwAPEGwr90DX9wArcI-3CCv39wjoxDzEP
MQ8QOjEPMQ8xDxA6D8Q6wA-EOsAPxDrAD8Q6wA-EOsAPxDo13yg1KDUoNSg1KDUoNSg1KCPGCv3I
Nf3ACtwmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYj
JiMmIyYjJiMmIyYjJiMK-f3CMToQOhA6ECgxOhA6EDoQKA86xCgPOsQoDzrEKA86xCgPOsQoDzrE
KDXeKDUoNSg1KDUoNSg1KDUoNSYjJiMmIyYjCv3INf3ACtwbJv6rUjYmGyYbJhsmCiYbJhsmGyYK
JhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyb_Ka3--f3CDxA6
EDoQOjkPEDoQOhA6OQ86xCgPOsQoDzrEKA86xCgPOsQoDzrEKDXfKDUoNSg1KDUoNSg1KDUo-qtS
NiYbJhsmGyb_Ka3--cg1-cAK3P4Ah1EDDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMP
Gw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAwr9-cIxOhA6ECgQKDE6EDoQKBAo-uQNqzrC
KDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooNd4oNSg1KDUoNSg1wSg1KDX_AIdRGw8b
DxsPAwr9yDX9wArcGwP_q1I2G8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEA-4prf-9-cL_
5A2rEDoQOhA6OQ8QOhA6EDo5DzrEKA86xCgPOsQoDzrEKA86xCgPOsQoNd8oNSg1KDUoNSg1KDUo
NSj_q1I2G8QD-imt--3INf3ACtwbA-6rUjYbxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QD
-imt--39wjE6OToQOhAoMTo5OhA6ECgPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6
wig13ig1KDUoNSg1KDUoNSg1KDX_q1I2G8QD-imt--3INf3ACtwbA-6rUjYbxAMKG8QDChvEAwob
xAMKG8QDChvEAwobxAMKG8QD-imt--39wg8QOhA6EDo5DxA6EDoQOjkPOsQoDzrEKA86xCgPOsQo
DzrEKA86xCg13yg1KDUoNSg1KDUoNSg1KP6rUjYbxAP_Ka3-wCMK-cU1-cAK3AMbwAPEG8ADxBvA
A8QbwAPEG8ADxBvAA8QbwAPEG8ADxBsK-f3CECg5KDkoOToQKDkoOSg5OsAoxDrAKMQ6wCjEOsAo
xDrAKMQ6wCjEOjXeKDUoNSg1KDUoNSg1KDUoNRsDxBsKIwrAIwr9wzX9wArcDxA6MQ8xDzEPEDox
DzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QCv39
wjoPxDrAD8Q6KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06
Ne8oNSg1KDUoI8YKwD-BCvk1-cAK3BAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6ECgx
OhA6EDoQKDE6EDoQOhAoMToQOhA6ECgxOhA6EDoQKAr9-cIPOsQoDzrEKA8oOig6KDo1Dyg6KDoo
OjUPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6Ne8oNSg1KDUoNSYjJiMmIyYjCj87Pzs-
Cvg1-cAK3Do5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5
DxA6EDoQOjkPEDoQOhA6OQr9-cIPOsQoDzrEKC06KDooOijALTooOig6KMAtOig6KDoowC06KDoo
OijALTooOig6KMAtOig6KDoowDXvKDUoNSg1KP6rUjYmGyYbJhsm-imt-z87Pzs-CsIfCh8K8TX9
wArcECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6
ECgQKDE6EDoQKBAoCv39wg86wig6KA86wig6KA8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6
NTo1Dyg6KDo1OjUPKDooOjU6Ne8oNSg1KDUoNf4Ah1EbDxsPGw8DCsA-wQrDHyHACvE1-cAK3Do5
-uQNqxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQ
OjkPEDoQOhA6OQr9-cIPOsQoDzrEKC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALToo
Oig6KMAtOig6KDoowDXvKDUoNSg1KP6rUjYbxAP_Ka3-wT8KxQAK8jX9wArcECgxOjk6EDoQKDE6
OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoCv39
wg86KDrCKA86KDrCKA8owTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjBOig6Ne8o
NSg1KDUoNf6rUjYbxAP_Ka3-wi4KxC4K8jX9wArcOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkP
EDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5Cv39wg86xCgPOsQoLTooOig6
KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijANe8oNSg1KDUo-qtSNhvE
A-4prf-BLgrGLgrxNf3ACtAjCsk5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6ECg5
KDkoOToQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToK-f3COijEOsAoxDrANSg1KDUowDo1KDUoNSjA
OjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA17ig1KDUoNSg1GwPEGwrBLgrFLgryNf3A
Cs8jCsAjCscPOsAPxDrAD8Q6wA-EOsAPxDrAD8Q6wA-EOsAPxDrAD8Q6I-39wigPLQ8tDy06KA8t
Dy0PLTo1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA19yg1
KDUoNSgjzgruNf3AI9w6KA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoJiMmIyYjJiMm
IyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYj
JiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMmIyYjJiMm
IyYjJiMPKDooOig6NQ8oOig6KDo1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1
KDUoNS01KDUoNSg19yg1KDUoNSg1JiMmIyYjJiMmIyYjJiMmIwruNf3AJiMmIyYjJiMmIyYjJiMm
IyYjJiMmIyYjJiMmIyYjOigPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKP6rUjYmGyYb
JhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsm
GyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYbJgomGyYbJhsmCiYbJhsmGyYKJhsmGyYb
JgomGyYbJhsmLTooOig6KMAtOig6KDoowjUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjA
NSg1KDXAKMA1KDUoNfkoNSg1KDUoCiYbJhsmGyYKJhsmGyYbJv4prf-uNf3A-qtSNiYbJhsmGyYK
JhsmGyYbJgomGyYbJhsmCiYbJhsmOigPOsIoOigPOsIoOigPOsIoOigPOsIoOigPOsIoOigPOsIo
OigPOsIoOigPOsIoOij_AIdRGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8D
DxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMP
Gw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxsPA-7kDasoOig6NTo1Dyg6KDo1OjUtNSg1KDUo
NS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDX3KDUoNSg1KDX_AIdRGw8b
DxsPAw8bDxsPGw8D-imt-_41-cAPGw8bDxsPAw8bDxsPGw8DDxsPGw8bDwMPGw8bDxs6KP7kDas6
xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQo-qtSNhvEAwobxAMKG8QDChvEAwobxAMKG8QD
ChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAy06KDooOijALTooOig6KMI1
KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDX5KDUoNSg1KAobxAMK
G8QD-imt-_41-cD_q1I2G8QDChvEAwobxAMKG8M6KA86KDrCKA86KDrCKA86KDrCKA86KDrCKA86
KDrCKA86KDrCKA86KDrCKA86KDrCKAobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvE
AwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMPKME6KDo1DyjBOig6NS01wSg1KDUtNcEoNSg1
LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNfcoNcEoNSg1ChvEAwobxAP_Ka3-7jX9wP6rUjYb
xAMKG8QDChvEAwobwzooDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgKG8QDChvEAwob
xAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDChvEAwobxAMKG8QDLToo
Oig6KMAtOig6KDoowjUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUo
NfkoNSg1KDUoChvEAwobxAP_Ka3-7jX9wP6rUjYbxAMKG8QDChvEAwobwyg6wCjEOsAoxDrAKMQ6
wCjEOsAoxDrAKMQ6wCjEOsAoxDobA8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvA
A8QbwAPEG8ADxBvAA8QbwAPEG8ADxBvAA8QbOjUoNSg1KMA6NSg1KDUowTXFKDXFKDXFKDXFKDXF
KDX9KDUoNSg1KDUbA8QbwAPEG-4prf-uNf3AGwPEG8ADxBvAA8QbwAPDLTooDy0PLQ8tOigPLQ8t
Dy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06wDEPMQ8x
DxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEP
EDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMQ8Q
OjEPMQ8xDxA1LSgtKC0owDUtKC0oLSjANf3RLSgtKC0owDUtKC0oLSjBDy0PLQ8tOjXHKDUoNSg1
KDUoNSg1KDUoI8YK5jX9wDoxDzEPMQ8QOjEPMQ8xDxA6MQ8xDzEPEDoxDzEPMTo1Dyg6KDooOjUP
KDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6NTE6
EDoQOhAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQ
OhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6ECgxOhA6
EDoQKDE6EDoQOhAoLTUoNSg1KDUtNSg1KDUoNf3RLTUoNSg1KDUtNSg1KDUoNQ8oOig6KDo1xyg1
KDUoNSg1KDUoNSg1KDUmIyYjJiMmIwrmNf3AMToQOhA6ECgxOhA6EDoQKDE6EDoQOhAoMToQOhA6
KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoo
wC06KDooOijADxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5
DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkP
EDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkowDUoNSg1wCjANSg1KDX90ijANSg1KDXAKMA1KDUoNcAt
Oig6KDoowDXHKDUoNSg1KDUoNSg1KDUo-qtSNiYbJhsmGyb_Ka3-5jX9wA8QOhA6EDo5DxA6EDoQ
OjkPEDoQOhA6OQ8QOhA6EDo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6
NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NTE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAo
MToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAoECgx
OhA6ECgQKDE6EDoQKBAoMToQOhAoECgxOhA6ECgQKDE6EDoQKBAoLTUoNSg1KDUtNSg1KDUoNf3R
LTUoNSg1KDUtNSg1KDUoNQ8oOig6NTo1xyg1KDUoNSg1KDUoNSg1KDX_AIdRGw8bDxsPAwrmNf3A
MToQOhAoECgxOhA6ECgQKDE6EDoQKBAoMToQOhAowS06KDooOijALTooOig6KMAtOig6KDoowC06
KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMD_5A2rEDoQOhA6OQ8QOhA6EDo5
DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkP
EDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OSjA
NSg1KDXAKMA1KDUoNf3SKMA1KDUoNcAowDUoNSg1wC06KDooOijANccoNSg1KDUoNSg1KDUoNSj_
q1I2G8QD-imt-_Y1-cAPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6NQ8owTooOjUPKME6
KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1MTo5OhA6ECgxOjk6
EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQ
OhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoQKDE6OToQOhAoMTo5OhA6
ECgtNcEoNSg1LTXBKDUoNf3RLTXBKDUoNS01wSg1KDUPKME6KDo1xyg1KDUoNSg1KDUoNSg1KDX_
q1I2G8QD-imt-_Y1-cAxOjk6EDoQKDE6OToQOhAoMTo5OhA6ECgxOjk6EDoowC06KDooOijALToo
Oig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAPEDoQ
OhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6
EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQ
OjkPEDoQOhA6OSjANSg1KDXAKMA1KDUoNf3SKMA1KDUoNcAowDUoNSg1wC06KDooOijANccoNSg1
KDUoNSg1KDUoNSj_q1I2G8QD-imt-_Y1-cAPEDoQOhA6OQ8QOhA6EDo5DxA6EDoQOjkPEDoQOhAo
wDo1KDUoNSjAOjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA6NSg1KDUowDo1KDUoNSjA
OjUoNSg1KMAQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQ
KDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAo
OSg5KDk6ECg5KDkoOToQKDkoOSg5Oig1xSg1-dcoNcUoNcU6NSg1KDUowDXGKDUoNSg1KDUoNSg1
KDUoNRsDxBsK5jX9wBAoOSg5KDk6ECg5KDkoOToQKDkoOSg5OhAoOSg5KME1LSgtKC0owDUtKC0o
LSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjAOg-EOsAP
xDrAD8Q6wA-EOsAPxDrAD8Q6wA-EOsAPxDrAD8Q6wA-EOsAPxDrAD8Q6wA-EOsAPxDrAD8Q6wA-E
OjX98S0oLSgtKMEPLQ8tDy06wA-EOjXHKDUoNSg1KCPOCtY1-cA6D8Q6wA-EOsAPxDrAD8MoNS01
KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUo
NSg1KDUPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQo
DzrEKA86xCgPOsQoNf3wLTUoNSg1KDUPKDooOig6NQ86xCg1xig1KDUoNSg1JiMmIyYjJiMmIyYj
JiMmIwrWNf3ADzrEKA86xCgPOsQoDzrDNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1
wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXADzrEKA86xCgPOsQoDzrEKA86xCgPOsQo
DzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKDX98CjANSg1KDXALTooOig6
KMAPOsQoNccoNSg1KDUo-qtSNiYbJhsmGyYKJhsmGyYbJv4prf-WNf3ADzrEKA86xCgPOsQoDzrD
KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUo
NS01KDUoNSg1DzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDoo
DzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooDzrCKDooNf3wLTUoNSg1
KDUPKDooOjU6NQ86wig6KDXGKDUoNSg1KDX_AIdRGw8bDxsPAw8bDxsPGw8DCtY1-cD_5A2rOsIo
OigPOsIoOigPOsIoOigPOsIoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1
KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXADzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86
xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKDX98CjANSg1KDXALTooOig6KMAPOsQo
NccoNSg1KDUo-qtSNhvEAwobxAP_Ka3-1jX9wA86xCgPOsQoDzrEKA86wyg1LTXBKDUoNS01wSg1
KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUPOig6wigPOig6wigP
Oig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6wigPOig6
wigPOig6wigPOig6wigPOig6wigPOig6wig1-fAtNcEoNSg1DyjBOig6NQ86KDrCKDXGKDUoNSg1
KDX_q1I2G8QDChvEA-4prf-WNf3ADzooOsIoDzooOsIoDzooOsIoDzooOsE1wCjANSg1KDXAKMA1
KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAPOsQo
DzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgPOsQoDzrEKA86xCgP
OsQoNf3wKMA1KDUoNcAtOig6KDoowA86xCg1xyg1KDUoNSj_q1I2G8QDChvEA-4prf-WNf3ADzrE
KA86xCgPOsQoDzrDNcAoNcUoNcUoNcUoNcUoNcUoNcUoNcUoNcU6KMQ6wCjEOsAoxDrAKMQ6wCjE
OsAoxDrAKMQ6wCjEOsAoxDrAKMQ6wCjEOsAoxDrAKMQ6wCjEOsAoxDrAKMQ6Nf3wKDXFOjUoNSg1
KMA6KMQ6NcYoNSg1KDUoNRsDxBvAA8QbCtY1-cA6KMQ6wCjEOsAoxDrAKMM1-cIoDy0PLQ8tOigP
LQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8t
Dy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ8tOigPLQ8tDy06KA8tDy0PLTooDy0P
LQ8tOjX9_S0oLSgtKMEPLQ8tDy06KA8tDy0PLTo1xyg1KDUoNSg1KDUoNSg1KCPGCs41-cAoDy0P
LQ8tOigPLQ8tDy06KA8tDy0PLTooDy0PLQ81-cIPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDoo
Oig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6NQ8oOig6
KDo1Dyg6KDooOjUPKDooOig6NQ8oOig6KDo1Dyg6KDooOjUPKDooOig6Nf35LTUoNSg1KDUPKDoo
Oig6NQ8oOig6KDo1xyg1KDUoNSg1KDUoNSg1KDUmIyYjJiMmIwrONf3ADyg6KDooOjUPKDooOig6
NQ8oOig6KDo1Dyg6KDooNf3CLTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoo
wC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijA
LTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMA1-fgowDUoNSg1wC06KDooOijALTooOig6
KMA1xyg1KDUoNSg1KDUoNSg1KP6rUjYmGyYbJhsm-imt-8gfCh8KwTX9wC06KDooOijALTooOig6
KMAtOig6KDoowC06KDooOjX9wg8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6NTo1Dyg6KDo1
OjUPKDooOjU6NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6
NQ8oOig6NTo1Dyg6KDo1OjUPKDooOjU6NQ8oOig6NTo1-fktNSg1KDUoNQ8oOig6NTo1Dyg6KDo1
OjXHKDUoNSg1KDUoNSg1KDUoNf4Ah1EbDxsPGw8DCsgfIcAKwTX9wP7kDasoOig6NTo1Dyg6KDo1
OjUPKDooOjU6NQ8oOig6Nf3DLTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoo
wC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijA
LTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMA1-fgowDUoNSg1wC06KDooOijALTooOig6
KMA1xyg1KDUoNSg1KDUoNSg1KP6rUjYbxAP_Ka3-yQAKwjX9wC06KDooOijALTooOig6KMAtOig6
KDoowC06KDooOjX9wg8owTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjBOig6NQ8o
wTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjBOig6NQ8owTooOjUPKME6KDo1DyjB
Oig6NQ8owTooOjX9_S01wSg1KDUPKME6KDo1DyjBOig6NccoNSg1KDUoNSg1KDUoNSg1-qtSNhvE
A-4prf-JLgrCNf3ADyjBOig6NQ8owTooOjUPKME6KDo1DyjBOig1-cItOig6KDoowC06KDooOijA
LTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAt
Oig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6KMAtOig6KDoowDX9
_CjANSg1KDXALTooOig6KMAtOig6KDoowDXHKDUoNSg1KDUoNSg1KDUo-qtSNhvEA-4prf-KLgrB
Nf3ALTooOig6KMAtOig6KDoowC06KDooOijALTooOig6Nf3COjUoNSg1KMA6NSg1KDUowDo1KDUo
NSjAOjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1
KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA6NSg1KDUowDo1KDUoNSjAOjUoNSg1KMA1-fgoNcU6
NSg1KDUowDo1KDUoNSjANcYoNSg1KDUoNSg1KDUoNSg1GwPEGwrJLgrCNf3AOjUoNSg1KMA6NSg1
KDUowDo1KDUoNSjAOjUoNSg1-cQtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjANS0oLSgt
KMA1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC0o
wDUtKC0oLSjANS0oLSgtKMA1LSgtKC0owDUtKC0oLSjANf39wy0oLSgtKMA1LSgtKC0owDXXKDUo
NSg1KCPONf3BLSgtKC0owDUtKC0oLSjANS0oLSgtKMA1LSgtKC01-cItNSg1KDUoNS01KDUoNSg1
LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUt
NSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNf39
wy01KDUoNSg1LTUoNSg1KDXXKDUoNSg1KDUmIyYjJiMmIyYjJiMmIyYjNf3ALTUoNSg1KDUtNSg1
KDUoNS01KDUoNSg1LTUoNSg1-cMowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1
KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUo
NcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1-f3EKMA1KDUoNcAowDUoNSg12Sg1KDUo
NSj_q1I2JhsmGyYbJgomGyYbJhsmNf3AKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNf3C
LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUt
NSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01
KDUoNSg1LTUoNSg1KDX9-cMtNSg1KDUoNS01KDUoNSg11yg1KDUoNSg1-gCHURsPGw8bDwMPGw8b
DxsPAzX9wC01KDUoNSg1LTUoNSg1KDUtNSg1KDUoNS01KDUoNf3DKMA1KDUoNcAowDUoNSg1wCjA
NSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1
KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNf39xCjA
NSg1KDXAKMA1KDUoNdkoNSg1KDUoChvEAwobxAM1-cAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAo
wDUoNSg1-cItNcEoNSg1LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUtNcEoNSg1
LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUtNcEoNSg1LTXBKDUoNS01wSg1KDUt
NcEoNSg1-f3DLTXBKDUoNS01wSg1KDXXKDUoNSg1KDUKG8QDChvEAzX9wC01wSg1KDUtNcEoNSg1
LTXBKDUoNS01wSg1-cMowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1
KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDXAKMA1KDUoNcAowDUo
NSg1wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1-f3EKMA1KDUoNcAowDUoNSg12Sg1KDUoNSgKG8QD
ChvEAzX9wCjANSg1KDXAKMA1KDUoNcAowDUoNSg1wCjANSg1KDX9wig1xSg1xSg1xSg1xSg1xSg1
xSg1xSg1xSg1xSg1xSg1xSg1xSg1xSg1xSg1xSg1-f3JKDXFKDXdKDUoNSg1KDUbA8QbwAPEGzX9
wCg1xSg1xSg1xSg1-f39-f39wig1KDUoNSg1KDUoNSg1KDX9-f39-f393Cg1KDUoNSg1KDUoNSg1
KDX9-f39-f393ig1KDUoNSg1KDUoNSg1KDX9-f39-f393Cg1KDUoNSg1KDUoNSg1KDX9-f39-f39
3ig1KDUoNSg1KDUoNSg1KDX9-f39-f393Cg1KDUoNSg1KDUoNSg1KDX9-f39-f393ig1KDUoNSg1
KDUoNSg1KDX9-f39-f393Cg1KDUoNSg1KDUoNSg1KDX9-d8-NcE-wTXAP8A1wz-ANf39-f39-f3a
Pzk1wD85Pzk-NTnANcM-OTX9-f39-f392T85NcA-wTk-OTXFPzk1-f39-f39-dk-OTXAPzk-OT85
PzXEPzk1-f39-f39-dk-wTU-OT85P8E5NcI-wTX9-f39-f392jnBNTk1OTU5wTXDOcE1-f39-f39
-f39-f39-f39-f39-f39-fY-wTU-NT81wD-ANcM-wTU-wTU-NT81-f39-f39-dE-OT85Pzk-OT81
OcA1wzk-OT85Pzk1OT85Nf39-f39-f3QP8E5Pzk-OT85NcU-wDk-wTk1PzU5Nf39-f39-f3QPzk-
OT-BOT85PzXFPzk1OT85PzU5Nf39-f39-f3RPzk-OTU-OcA-wTk1wj-BOTXAPzk-OT81-f39-f39
-dI5NTk1wDk1wDnBNcM5wTXBOTU5NTk1-f39-f39-f39-f39-f39-f39-f39-e4-wTU-wTU-NT81
wz-BNT-BNT81PzX9-f394C0oLSgtKMA1LSgtKC0owDX9-d4-wTk-OT85Pzk-OTXDOT85Pzk-OTU5
Pzk1-f39-d4tNSg1KDUoNS01KDUoNSg1-f3fPzk-OT-BOTU-NTk1wz-AOT-BOTU-NTk1-f39-d4o
wDUoNSg1wCjANSg1KDX9-eA-OT85Pzk-OT81PzXFPzk1OT85PzU5Nf39-f3fLTUoNSg1KDUtNSg1
KDUoNf393z85Pzk-OT85Pzk-OTXCP8E5NcA-OT85PzX9-f393yjANSg1KDXAKMA1KDUoNf394Tk1
OTU5NTk1OTU5NcM5wTXBOTU5NTk1-f39-d4tNcEoNSg1LTXBKDUoNf3f-v8ATfo1-f39-fwowDUo
NSg1wCjANSg1KDX9-f39-f393ig1xSg1-eUo_jXBP8A1PzU-NT-BNcM-NT81P8E1PzU-NcU-NcE-
NcM-wTU-wTU-wTXAP8A1P8E1P8E1wz81wT-BNcM-wTXHPzU-NcA-wDU-NcE-wDXUP8E1wD-ANT-B
NcM-wDXAP8E1P8E1PzU-NcA-wDXDP8E1P8A1wD-BNcA-wDX9-f396z81OcA-OT85Pzk-OTXCPzk-
OT85Pzk1OT85NcM-NTk1PzU5NcM-OcA-OT85Pzk-OT81OcA-OcE1PznANcI-OTXAPzk-OTXCPzk-
OTXGPzk-OT81Pzk-OTXAPzk-NcM-wTXAP8A1P8A1xD85wT81Pzk-OT85NcI-OT81PznBPzk-OT85
Pzk-NTnANcM-OcA-OT81PznBPzU-OTX9-f396j85NcA-OT85P8A1OTXCP8E5Pzk-OTU-NTk1wz85
NcA-OTXEPzk1P8E5P8A1OT85NcA-wDXBPzk1wz-BNT85Pzk1wj85Pzk1xj-BOT85Pzk-OTXAPzk-
OTXDPznAPzU-OT-AOTXDP8A1wD85Pzk-wDU5NcI-OT85P8A1wD-ANTk-OT85Pzk1xT85NT85Pzk-
wDXAPzk-OTX9-f396j85NcA-OT85Pzk-NcQ5Pzk-OT85PzU5NcQ-OTXAPzk1xD85NT85Pzk-OT81
Pzk-NT85wDXAPzk1wz85Pzk-OT85NcI-OT85NcY-OT85Pzk-OT85NcA-OT85NcM-OTU-wTk-OT81
wz85wDU-OT85Pzk-NcM-OT85PznANT85PzU-OT85Pzk-NcQ-OTU-OT85PznANT85Pzk1-f396j-6
NcE-wDXAP8A5Pzk-OTXEPzk-wTk-OT81wz81OTU-NTk1xD85NT85Pzk-OT85P8E5P8E1wD85NcM-
wTk-wTk1PzXAP8E5NcY-OT85P8A1OT-BNT-BOTXDPzk1Pzk-OT-BOTXCPzk1wD-ANTk-OT85NcI-
wTk-wTU-wTk1P8A5P8E5NcI-wTU-OT85Pzk1wD-ANTk1-f39-ew5wDXAOcA1OTU5NcU5NTnBNTk1
OTXDOTXBOTXGOTXAOTU5NTk1OTU5wTU5wTXAOTXEOcE1OcE1wDk1wDnBNcc5NTk1OcA1wDnBNTnB
NcQ5NcA5NTk1OcE1wzk1wTnANcA5NTk1wznBNTnBNTnBNcA5wDU5wTXDOcE1OTU5NTk1wTnANf39
-f39-f39-f39-f39-f39-f3LAAAAAAAAAAE=
:: lightmap_data.lua
--[[pod_format="raw",created="2025-06-17 17:31:54",modified="2025-06-30 15:07:02",revision=343]]

include "logging.lua"

local COLOR_PAIRS = {
	0x0000, 0x0021, 0x2121, 0x2122, 0x2223, 0x2424, 0x2424
}


function make_dither_pattenrs()
	fillp(0b0101101001011010)
	local base_offset = #COLOR_PAIRS
	local out_tiles = {}
	for i,v in pairs(COLOR_PAIRS) do
		local target_sprite = userdata("u8",8,8)
		set_draw_target(target_sprite)
		rectfill(0,0,7,7,v)
		out_tiles[#out_tiles+1] = target_sprite
	end
	set_draw_target()
	return out_tiles
end

function generate_lightmap(tile_table)
	-- ordered as tables of torch light per sky light
	-- will then be stuffed into a buffer where sky * torch = final
	local lightmap_data = {
		{
			-- Global shadow 0, noon
			{0,0,0,0,0,0,0},
			{0,1,1,1,1,1,1},
			{0,1,2,2,2,2,2},
			{0,1,2,3,3,3,3},
			{0,1,2,3,4,4,4},
			{0,1,2,3,4,5,5},
			{0,1,2,3,4,5,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{1,2,2,2,2,2,2},
			{1,2,3,3,3,3,3},
			{1,2,3,4,4,4,4},
			{1,2,3,4,5,5,5},
			{1,2,3,4,5,6,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{2,2,2,2,2,2,2},
			{2,3,3,3,3,3,3},
			{2,3,4,4,4,4,4},
			{2,3,4,5,5,5,5},
			{2,3,4,5,6,6,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{2,2,2,2,2,2,2},
			{3,3,3,3,3,3,3},
			{3,4,4,4,4,4,4},
			{3,4,5,5,5,5,5},
			{3,4,5,6,6,6,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{2,2,2,2,2,2,2},
			{3,3,3,3,3,3,3},
			{4,4,4,4,4,4,4},
			{4,5,5,5,5,5,5},
			{4,5,6,6,6,6,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{2,2,2,2,2,2,2},
			{3,3,3,3,3,3,3},
			{4,4,4,4,4,4,4},
			{5,5,5,5,5,5,5},
			{5,6,6,6,6,6,6},
		},
		{
			{0,0,0,0,0,0,0},
			{1,1,1,1,1,1,1},
			{2,2,2,2,2,2,2},
			{3,3,3,3,3,3,3},
			{4,4,4,4,4,4,4},
			{5,5,5,5,5,5,5},
			{6,6,6,6,6,6,6},
			-- Global shadow 6, night
		},
	}
	
	for time_table in all(lightmap_data) do
		for torch_light_table in all(time_table) do
			for i,v in pairs(torch_light_table) do
				-- clobber values in lightmap_data using input table of tiles
				local tile_index = v+1
				torch_light_table[i] = tile_table[tile_index]
			end
		end
	end
	
	return lightmap_data
end


local DITHER_TILES = make_dither_pattenrs()
local LIGHTMAP_CUBE = generate_lightmap(DITHER_TILES)

function set_lightmap(cube_idx)
	local sane_cube_idx = mid(1,#LIGHTMAP_CUBE,cube_idx)
	local time_table = LIGHTMAP_CUBE[sane_cube_idx]
	-- Write tiles to memory!
	for sky_light_idx, torch_light_table in pairs(time_table) do
		local sky_light_offset = sky_light_idx-1
		local row_str = ''
		for torch_light_idx, light_tile_ref in pairs(torch_light_table) do
			-- "it's writing time" and then he wrote all over the place
			local torch_light_offset = torch_light_idx-1
			local spr_num = 512-(torch_light_offset+(7*sky_light_offset))
			
			set_spr(spr_num,light_tile_ref)
		--	row_str = row_str .. sky_light_offset .. "/" ..torch_light_offset .. ' ->' .. spr_num  .. ", "
		end
	end
end


local TIME_OFFSET = 0
function debug_light()
	if keyp("y") then TIME_OFFSET += 1 end
	if keyp("h") then TIME_OFFSET -= 1 end
	if keyp("y") or keyp("h") then set_lightmap(TIME_OFFSET) end
end
:: logging.lua
--[[pod_format="raw",created="2025-04-12 21:25:08",modified="2025-06-30 15:07:02",revision=1581]]
include "util.lua"

CURRENT_LOG = ""

function dbg(str)
	CURRENT_LOG ..= (str or 'nil') .. "\n"
	CURRENT_LOG = sub(CURRENT_LOG,-1024)
end

function drawlog(x,y)
	local split_log = split(CURRENT_LOG,"\n")
	local c = 0;
	for i = max(1,#split_log-20),#split_log do
		prints(split_log[i],x,8+y+c*10)
		c += 1;
	end
end

function odbg(o,indent)
   if not indent then dbg('Dumping object...') end
	if type(o) == "userdata" then 
		local w,h,t = o:attribs()
		dbg(w .. "x" .. h .. " of " .. t)
		return 
	end
	if type(o) != "table" then dbg("Dumping undumpable " .. type(o) .. ": "  .. o) return end
	local indent = indent or ''
	for i,v in pairs(o) do
		if     (type(v) == 'table') then
			dbg(indent .. i .. " -> ")
			odbg(v, indent .. '  ')	
		elseif (type(v) == "function") then
			dbg("callable " .. i )
		elseif (type(v) == "userdata") then
			local w,h,t = v:attribs()
			dbg(indent .. i .. "	-> " .. w .. "x" .. h .. " of " .. t)
		elseif (type(v) == "boolean") then
			dbg(indent .. i .. " -> " .. (v and "b-true" or "b-false"))
		else
			dbg(indent .. i .. ' = ' .. v )
		end
	end
	if indent == '' then
		dbg("Done dumping")
	end
end
:: main.lua
--[[pod_format="raw",created="2025-04-09 18:59:05",modified="2025-06-30 18:38:20",revision=5750]]
-- Picotron Stargazer
-- ~~ CREDITS ~~
-- Perlin noise implementation: github kitao -> pico8-libs -> perlin.lua

include "util.lua"
include "constants.lua"
include "chunk.lua"
include "logging.lua"
include "generator.lua"
include "entity.lua"
include "entities/player.lua"
include "world_interaction.lua"
include "chunkservice.lua"
include "queue.lua"
include "init_routines.lua"
include "lightmap_data.lua"
include "ticking.lua"


local CAMERA_OFFSET_X = 0
local CAMERA_OFFSET_Y = 0
local CHUNK_X = 0
local CHUNK_Y = 0

local BBS_WARN = false

function anitest(from,count,fskip)
	vid(3)
	local c = 0
	while true do
		spr(from+c,64,64)
			print(flr(from+c),80,80)
		flip()
		local cc = 0
		while cc < fskip do cc+=1 flip() end
		c+=1
		c = c%count
	end
end

function aaa()
	anitest(2,6,5)
end


function init_game()
	poke(0x550b, 0x3f)
	memcpy(0x5000+63*4,0x5000+12*4,4)
	window { cursor = 'crosshair' }
	chunk.init()
	chunk_loader = chunk.start_loader_routine()
	chunk_saver  = chunk.start_saver_routine()
	
	CHUNK_PROCESS = nil 
	if env().sandbox then
		chunk.set_fallback_behavior() BBS_WARN = true 
	else
		CHUNK_PROCESS = create_process("chunkservice.lua", {argv={pid()}} )	
	end 
	
	init_everything()
	on_event("load_chunk", chunk.recv_chunk)
	add_entity(build_player())
	chunk.set_center(CAMERA_OFFSET_X, CAMERA_OFFSET_Y)
end

FRAME_COUNTER = 0
function draw_game()
	start_bar_frame()
	FRAME_COUNTER+=1
	cls(63)
	camera(CAMERA_OFFSET_X,CAMERA_OFFSET_Y)
	chunk.render_loaded_chunks()
	draw_entities(CAMERA_OFFSET_X, CAMERA_OFFSET_Y)
	chunk.render_light()
	draw_world_mouse()

	camera()

	sspr(256+ACTIVE_BLOCK, 0, 0, 8, 8, 400, 32, 16, 16)
	local mem = stat(3)
	if (key('tab')) then 
		mem = stat(0)
		prints("Picotron version: "..  stat(5),1,10)
		prints("Loaded chunks: " .. real_count(LOADED_CHUNKS), 1, 20)
		drawlog(1, 30)
	end

	prints(
		"Picotron Stargazer ".. GAME_VERSION_STRING .. " Seed: " .. WORLD_SEED ..
		"\nPublic experimental build! Send feedback to cardboardbox.tech on bluesky!" ..
		(not key "h" and 
			("\nHold H for help!")
			or
			(
		"\nWASD move, LMB break, RMB place, wheel to change tile\nHold ctrl to place lanterns and break backgrounds" ..
		"\nPress Q to save the map on screen. Map offscreen is autosaved"
		)) ..
		"\n CS: " .. (SAVER_STATUS and "OK" or "FAIL") ..
		"   CL: " .. (LOADER_STATUS and "OK" or "FAIL") ..
		"   TS: " .. (SCHEDULE_STATUS and "OK" or "FAIL") ..
		"   CC: " .. real_count(LOADED_CHUNKS) ..
		(BBS_WARN and "\nRunning sandboxed, using single thread! Expect some lag..." or "")
		,1,1)
	perf_graph()
	draw_debug_bars()
	
	local a,b = work_queues()

end

COLOR_MAGIC = {0, 33, 34, 35, 36, 37, 36, 35, 34, 33, 0}

DEBUG_CAMERA_SPEED = 4

SKIP_MAIN_MENU = true

local load_test = 50
function update_game()

	if not (key("tab") and key("p")) then
		SCHEDULE_STATUS, SCHEDULE_OUTPUT = coresume(tick_schedule)
		if SCHEDULE_OUTPUT then error(SCHEDULE_OUTPUT) end
		LOADER_STATUS, LOADER_OUTPUT = coresume(chunk_loader)
		SAVER_STATUS = coresume(chunk_saver)
	end

	if	key("q") then
		save_all()
	end
	
	
	update_world_mouse(CAMERA_OFFSET_X, CAMERA_OFFSET_Y)
	if FRAME_COUNTER > 150 then
		update_entities()
	end
	
	CAMERA_OFFSET_X = ENTITIES[1].x-240
	CAMERA_OFFSET_Y = ENTITIES[1].y-135
	chunk.set_center(CAMERA_OFFSET_X, CAMERA_OFFSET_Y)

	--debug_light()

end

--=================================================================================--

local TITLE_STATE = {}

function _init()
	fillp()
	TITLE_STATE.worlds = ls(SAVEGAME_DIRECTORY)
	TITLE_STATE.cursor = 1
end

function _draw()
	cls()
	print(
[[
Welcome to Stargazer!
Running experimental build 20/06/2025
Keyboard and mouse required! Arrows to navigate, enter to start, del to DELETE!

(C) cardboardbox.tech 2025
]],16,16,7
)
	for i,v in pairs(TITLE_STATE.worlds) do
		local vy = 74+i*10
		print(v,16,vy)
	end
	spr(1,2,66+TITLE_STATE.cursor*10)
	print("new!",16, 74+(1+#TITLE_STATE.worlds)*10,10)
	
end

function _update()
	if (keyp "up") TITLE_STATE.cursor -= 1 
	if (keyp "down") TITLE_STATE.cursor += 1
	TITLE_STATE.cursor = mid(1,TITLE_STATE.cursor,#TITLE_STATE.worlds+1)
end

	
	if SKIP_MAIN_MENU then
		init_game()
		_update = update_game
		_draw = draw_game
	end
:: noise-all.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNC0yNCAxNjoxNDo0NSIsbW9k
aWZpZWQ9IjIwMjUtMDQtMjQgMTY6MTQ6NDUiLHJldmlzaW9uPTBdXQotLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLS1TaW1wbGV4IE5vaXNlCi0tIE9yaWdp
bmFsIEphdmEgU291cmNlOiBodHRwOi8vc3RhZmZ3d3cuaXRuLmxpdS5zZS9_c3RlZ3Uvc2ltcGxl
eG5vaXNlL3NpbXBsZXhub2lzZS5wZGYKLS0gKG1vc3QpIE9yaWdpbmFsIGNvbW1lbnRzIGluY2x1
ZGVkCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpsb2Nh
bCBtYXRoID0gbWF0aApsb2NhbCB0YWJsZSA9IHRhYmxlCmxvY2FsIHRvbnVtYmVyID0gdG9udW1i
ZXIKbG9jYWwgaXBhaXJzID0gaXBhaXJzCmxvY2FsIGVycm9yID0gZXJyb3IKCnNpbXBsZXggPSB7
fQoKc2ltcGxleC5ESVJfWCA9IDAKc2ltcGxleC5ESVJfWSA9IDEKc2ltcGxleC5ESVJfWiA9IDIK
c2ltcGxleC5ESVJfVyA9IDMKc2ltcGxleC5pbnRlcm5hbENhY2hlID0gZmFsc2UKCmxvY2FsIEdy
YWRpZW50czNEID0ge3sxLDEsMH0sey0xLDEsMH0sezEsLTEsMH0sey0xLC0xLDB9LAp7MSwwLDF9
LHstMSwwLDF9LHsxLDAsLTF9LHstMSwwLC0xfSwKezAsMSwxfSx7MCwtMSwxfSx7MCwxLC0xfSx7
MCwtMSwtMX19Owpsb2NhbCBHcmFkaWVudHM0RCA9IHt7MCwxLDEsMX0sIHswLDEsMSwtMX0sIHsw
LDEsLTEsMX0sIHswLDEsLTEsLTF9LAp7MCwtMSwxLDF9LCB7MCwtMSwxLC0xfSwgezAsLTEsLTEs
MX0sIHswLC0xLC0xLC0xfSwKezEsMCwxLDF9LCB7MSwwLDEsLTF9LCB7MSwwLC0xLDF9LCB7MSww
LC0xLC0xfSwKey0xLDAsMSwxfSwgey0xLDAsMSwtMX0sIHstMSwwLC0xLDF9LCB7LTEsMCwtMSwt
MX0sCnsxLDEsMCwxfSwgezEsMSwwLC0xfSwgezEsLTEsMCwxfSwgezEsLTEsMCwtMX0sCnstMSwx
LDAsMX0sIHstMSwxLDAsLTF9LCB7LTEsLTEsMCwxfSwgey0xLC0xLDAsLTF9LAp7MSwxLDEsMH0s
IHsxLDEsLTEsMH0sIHsxLC0xLDEsMH0sIHsxLC0xLC0xLDB9LAp7LTEsMSwxLDB9LCB7LTEsMSwt
MSwwfSwgey0xLC0xLDEsMH0sIHstMSwtMSwtMSwwfX07CmxvY2FsIHAgPSB7MTUxLDE2MCwxMzcs
OTEsOTAsMTUsCjEzMSwxMywyMDEsOTUsOTYsNTMsMTk0LDIzMyw3LDIyNSwxNDAsMzYsMTAzLDMw
LDY5LDE0Miw4LDk5LDM3LDI0MCwyMSwxMCwyMywKMTkwLCA2LDE0OCwyNDcsMTIwLDIzNCw3NSww
LDI2LDE5Nyw2Miw5NCwyNTIsMjE5LDIwMywxMTcsMzUsMTEsMzIsNTcsMTc3LDMzLAo4OCwyMzcs
MTQ5LDU2LDg3LDE3NCwyMCwxMjUsMTM2LDE3MSwxNjgsIDY4LDE3NSw3NCwxNjUsNzEsMTM0LDEz
OSw0OCwyNywxNjYsCjc3LDE0NiwxNTgsMjMxLDgzLDExMSwyMjksMTIyLDYwLDIxMSwxMzMsMjMw
LDIyMCwxMDUsOTIsNDEsNTUsNDYsMjQ1LDQwLDI0NCwKMTAyLDE0Myw1NCwgNjUsMjUsNjMsMTYx
LCAxLDIxNiw4MCw3MywyMDksNzYsMTMyLDE4NywyMDgsIDg5LDE4LDE2OSwyMDAsMTk2LAoxMzUs
MTMwLDExNiwxODgsMTU5LDg2LDE2NCwxMDAsMTA5LDE5OCwxNzMsMTg2LCAzLDY0LDUyLDIxNywy
MjYsMjUwLDEyNCwxMjMsCjUsMjAyLDM4LDE0NywxMTgsMTI2LDI1NSw4Miw4NSwyMTIsMjA3LDIw
Niw1OSwyMjcsNDcsMTYsNTgsMTcsMTgyLDE4OSwyOCw0MiwKMjIzLDE4MywxNzAsMjEzLDExOSwy
NDgsMTUyLCAyLDQ0LDE1NCwxNjMsIDcwLDIyMSwxNTMsMTAxLDE1NSwxNjcsIDQzLDE3Miw5LAox
MjksMjIsMzksMjUzLCAxOSw5OCwxMDgsMTEwLDc5LDExMywyMjQsMjMyLDE3OCwxODUsIDExMiwx
MDQsMjE4LDI0Niw5NywyMjgsCjI1MSwzNCwyNDIsMTkzLDIzOCwyMTAsMTQ0LDEyLDE5MSwxNzks
MTYyLDI0MSwgODEsNTEsMTQ1LDIzNSwyNDksMTQsMjM5LDEwNywKNDksMTkyLDIxNCwgMzEsMTgx
LDE5OSwxMDYsMTU3LDE4NCwgODQsMjA0LDE3NiwxMTUsMTIxLDUwLDQ1LDEyNywgNCwxNTAsMjU0
LAoxMzgsMjM2LDIwNSw5MywyMjIsMTE0LDY3LDI5LDI0LDcyLDI0MywxNDEsMTI4LDE5NSw3OCw2
NiwyMTUsNjEsMTU2LDE4MH07CgotLSBUbyByZW1vdmUgdGhlIG5lZWQgZm9yIGluZGV4IHdyYXBw
aW5nLCBkb3VibGUgdGhlIHBlcm11dGF0aW9uIHRhYmxlIGxlbmd0aAoKZm9yIGk9MSwjcCBkbwoJ
cFtpLTFdID0gcFtpXQoJcFtpXSA9IG5pbAplbmQKCmZvciBpPTEsI0dyYWRpZW50czNEIGRvCglH
cmFkaWVudHMzRFtpLTFdID0gR3JhZGllbnRzM0RbaV0KCUdyYWRpZW50czNEW2ldID0gbmlsCmVu
ZAoKZm9yIGk9MSwjR3JhZGllbnRzNEQgZG8KCUdyYWRpZW50czREW2ktMV0gPSBHcmFkaWVudHM0
RFtpXQoJR3JhZGllbnRzNERbaV0gPSBuaWwKZW5kCgpsb2NhbCBwZXJtID0ge30KCmZvciBpPTAs
MjU1IGRvCglwZXJtW2ldID0gcFtpXQoJcGVybVtpKzI1Nl0gPSBwW2ldCmVuZAoKLS0gQSBsb29r
dXAgdGFibGUgdG8gdHJhdmVyc2UgdGhlIHNpbSBhcm91bmQgYSBnaXZlbiBwb2ludCBpbiA0RC4K
LS0gRGV0YWlscyBjYW4gYmUgZm91bmQgd2hlcmUgdGhpcyB0YWJsZSBpcyB1c2VkLCBpbiB0aGUg
NEQgbm9pc2UgbWV0aG9kLgoKbG9jYWwgc2ltID0gewp7MCwxLDIsM30sezAsMSwzLDJ9LHswLDAs
MCwwfSx7MCwyLDMsMX0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezEsMiwzLDB9LAp7
MCwyLDEsM30sezAsMCwwLDB9LHswLDMsMSwyfSx7MCwzLDIsMX0sezAsMCwwLDB9LHswLDAsMCww
fSx7MCwwLDAsMH0sezEsMywyLDB9LAp7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCww
LDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAsMCwwLDB9LAp7MSwyLDAsM30s
ezAsMCwwLDB9LHsxLDMsMCwyfSx7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MiwzLDAs
MX0sezIsMywxLDB9LAp7MSwwLDIsM30sezEsMCwzLDJ9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAs
MCwwLDB9LHsyLDAsMywxfSx7MCwwLDAsMH0sezIsMSwzLDB9LAp7MCwwLDAsMH0sezAsMCwwLDB9
LHswLDAsMCwwfSx7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAsMCww
LDB9LAp7MiwwLDEsM30sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezMsMCwxLDJ9LHsz
LDAsMiwxfSx7MCwwLDAsMH0sezMsMSwyLDB9LAp7MiwxLDAsM30sezAsMCwwLDB9LHswLDAsMCww
fSx7MCwwLDAsMH0sezMsMSwwLDJ9LHswLDAsMCwwfSx7MywyLDAsMX0sezMsMiwxLDB9fTsKCmxv
Y2FsIGZ1bmN0aW9uIERvdDJEKHRibCwgeCwgeSkKCXJldHVybiB0YmxbMV0qeCArIHRibFsyXSp5
OyAKZW5kCgpsb2NhbCBmdW5jdGlvbiBEb3QzRCh0YmwsIHgsIHksIHopCglyZXR1cm4gdGJsWzFd
KnggKyB0YmxbMl0qeSArIHRibFszXSp6CmVuZAoKbG9jYWwgZnVuY3Rpb24gRG90NEQoIHRibCwg
eCx5LHosdykgCglyZXR1cm4gdGJsWzFdKnggKyB0YmxbMl0qeSArIHRibFszXSp6ICsgdGJsWzNd
Knc7CmVuZAoKbG9jYWwgUHJldjJEID0ge30KCi0tIDJEIHNpbXBsZXggbm9pc2UKCmZ1bmN0aW9u
IHNpbXBsZXguTm9pc2UyRCh4aW4sIHlpbikKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSBhbmQg
UHJldjJEW3hpbl0gYW5kIFByZXYyRFt4aW5dW3lpbl0gdGhlbiByZXR1cm4gUHJldjJEW3hpbl1b
eWluXSBlbmQgCgoJbG9jYWwgbjAsIG4xLCBuMjsgLS0gTm9pc2UgY29udHJpYnV0aW9ucyBmcm9t
IHRoZSB0aHJlZSBjb3JuZXJzCgktLSBTa2V3IHRoZSBpbnB1dCBzcGFjZSB0byBkZXRlcm1pbmUg
d2hpY2ggc2ltcGxleCBjZWxsIHdlJ3JlIGluCglsb2NhbCBGMiA9IDAuNSoobWF0aC5zcXJ0KDMu
MCktMS4wKTsKCWxvY2FsIHMgPSAoeGluK3lpbikqRjI7IC0tIEhhaXJ5IGZhY3RvciBmb3IgMkQK
CWxvY2FsIGkgPSBtYXRoLmZsb29yKHhpbitzKTsKCWxvY2FsIGogPSBtYXRoLmZsb29yKHlpbitz
KTsKCWxvY2FsIEcyID0gKDMuMC1tYXRoLnNxcnQoMy4wKSkvNi4wOwoKCWxvY2FsIHQgPSAoaStq
KSpHMjsKCWxvY2FsIFgwID0gaS10OyAtLSBVbnNrZXcgdGhlIGNlbGwgb3JpZ2luIGJhY2sgdG8g
KHgseSkgc3BhY2UKCWxvY2FsIFkwID0gai10OwoJbG9jYWwgeDAgPSB4aW4tWDA7IC0tIFRoZSB4
LHkgZGlzdGFuY2VzIGZyb20gdGhlIGNlbGwgb3JpZ2luCglsb2NhbCB5MCA9IHlpbi1ZMDsKCgkt
LSBGb3IgdGhlIDJEIGNhc2UsIHRoZSBzaW1wbGV4IHNoYXBlIGlzIGFuIGVxdWlsYXRlcmFsIHRy
aWFuZ2xlLgoJLS0gRGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggd2UgYXJlIGluLgoJbG9jYWwgaTEs
IGoxOyAtLSBPZmZzZXRzIGZvciBzZWNvbmQgKG1pZGRsZSkgY29ybmVyIG9mIHNpbXBsZXggaW4g
KGksaikgY29vcmRzCglpZih4MD55MCkgdGhlbiAKCQlpMT0xIAoJCWoxPTAgIC0tIGxvd2VyIHRy
aWFuZ2xlLCBYWSBvcmRlcjogKDAsMCktPigxLDApLT4oMSwxKQoJZWxzZQoJCWkxPTAKCQlqMT0x
IC0tIHVwcGVyIHRyaWFuZ2xlLCBZWCBvcmRlcjogKDAsMCktPigwLDEpLT4oMSwxKQoJZW5kCgoJ
LS0gQSBzdGVwIG9mICgxLDApIGluIChpLGopIG1lYW5zIGEgc3RlcCBvZiAoMS1jLC1jKSBpbiAo
eCx5KSwgYW5kCgktLSBhIHN0ZXAgb2YgKDAsMSkgaW4gKGksaikgbWVhbnMgYSBzdGVwIG9mICgt
YywxLWMpIGluICh4LHkpLCB3aGVyZQoJLS0gYyA9ICgzLXNxcnQoMykpLzYKCglsb2NhbCB4MSA9
IHgwIC0gaTEgKyBHMjsgLS0gT2Zmc2V0cyBmb3IgbWlkZGxlIGNvcm5lciBpbiAoeCx5KSB1bnNr
ZXdlZCBjb29yZHMKCWxvY2FsIHkxID0geTAgLSBqMSArIEcyOwoJbG9jYWwgeDIgPSB4MCAtIDEu
MCArIDIuMCAqIEcyOyAtLSBPZmZzZXRzIGZvciBsYXN0IGNvcm5lciBpbiAoeCx5KSB1bnNrZXdl
ZCBjb29yZHMKCWxvY2FsIHkyID0geTAgLSAxLjAgKyAyLjAgKiBHMjsKCgktLSBXb3JrIG91dCB0
aGUgaGFzaGVkIGdyYWRpZW50IGluZGljZXMgb2YgdGhlIHRocmVlIHNpbXBsZXggY29ybmVycwoJ
bG9jYWwgaWkgPSBpJjI1NQoJbG9jYWwgamogPSBqJjI1NQoJbG9jYWwgZ2kwID0gcGVybVtpaStw
ZXJtW2pqXV0gJSAxMjsKCWxvY2FsIGdpMSA9IHBlcm1baWkraTErcGVybVtqaitqMV1dICUgMTI7
Cglsb2NhbCBnaTIgPSBwZXJtW2lpKzErcGVybVtqaisxXV0gJSAxMjsKCgktLSBDYWxjdWxhdGUg
dGhlIGNvbnRyaWJ1dGlvbiBmcm9tIHRoZSB0aHJlZSBjb3JuZXJzCglsb2NhbCB0MCA9IDAuNSAt
IHgwKngwLXkwKnkwOwoJaWYgdDA8MCB0aGVuIAoJCW4wID0gMC4wOwoJZWxzZQoJCXQwID0gdDAg
KiB0MAoJCW4wID0gdDAgKiB0MCAqIERvdDJEKEdyYWRpZW50czNEW2dpMF0sIHgwLCB5MCk7IC0t
ICh4LHkpIG9mIEdyYWRpZW50czNEIHVzZWQgZm9yIDJEIGdyYWRpZW50CgllbmQKCglsb2NhbCB0
MSA9IDAuNSAtIHgxKngxLXkxKnkxOwoJaWYgKHQxPDApIHRoZW4KCQluMSA9IDAuMDsKCWVsc2UK
CQl0MSA9IHQxKnQxCgkJbjEgPSB0MSAqIHQxICogRG90MkQoR3JhZGllbnRzM0RbZ2kxXSwgeDEs
IHkxKTsKCWVuZAoKCWxvY2FsIHQyID0gMC41IC0geDIqeDIteTIqeTI7CglpZiAodDI8MCkgdGhl
bgoJCW4yID0gMC4wOwoJZWxzZQoJCXQyID0gdDIqdDIKCQluMiA9IHQyICogdDIgKiBEb3QyRChH
cmFkaWVudHMzRFtnaTJdLCB4MiwgeTIpOwoJZW5kCgoJLS0gQWRkIGNvbnRyaWJ1dGlvbnMgZnJv
bSBlYWNoIGNvcm5lciB0byBnZXQgdGhlIGZpbmFsIG5vaXNlIHZhbHVlLgoJLS0gVGhlIHJlc3Vs
dCBpcyBzY2FsZWQgdG8gcmV0dXJuIHZhbHVlcyBpbiB0aGUgbG9jYWxlcnZhbCBbLTEsMV0uCgoJ
bG9jYWwgcmV0dmFsID0gNzAuMCAqIChuMCArIG4xICsgbjIpCgoJaWYgc2ltcGxleC5pbnRlcm5h
bENhY2hlIHRoZW4KCQlpZiBub3QgUHJldjJEW3hpbl0gdGhlbiBQcmV2MkRbeGluXSA9IHt9IGVu
ZAoJCVByZXYyRFt4aW5dW3lpbl0gPSByZXR2YWwKCWVuZAoKCXJldHVybiByZXR2YWw7CmVuZAoK
bG9jYWwgUHJldjNEID0ge30KCi0tIDNEIHNpbXBsZXggbm9pc2UKZnVuY3Rpb24gc2ltcGxleC5O
b2lzZTNEKHhpbiwgeWluLCB6aW4pCgoJbG9jYWwgbjAsIG4xLCBuMiwgbjM7IC0tIE5vaXNlIGNv
bnRyaWJ1dGlvbnMgZnJvbSB0aGUgZm91ciBjb3JuZXJzCgoJLS0gU2tldyB0aGUgaW5wdXQgc3Bh
Y2UgdG8gZGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggY2VsbCB3ZSdyZSBpbgoJbG9jYWwgRjMgPSAx
LjAvMy4wOwoJbG9jYWwgcyA9ICh4aW4reWluK3ppbikqRjM7IC0tIFZlcnkgbmljZSBhbmQgc2lt
cGxlIHNrZXcgZmFjdG9yIGZvciAzRAoJbG9jYWwgaSA9IG1hdGguZmxvb3IoeGluK3MpOwoJbG9j
YWwgaiA9IG1hdGguZmxvb3IoeWluK3MpOwoJbG9jYWwgayA9IG1hdGguZmxvb3IoemluK3MpOwoK
CWxvY2FsIEczID0gMS4wLzYuMDsgLS0gVmVyeSBuaWNlIGFuZCBzaW1wbGUgdW5za2V3IGZhY3Rv
ciwgdG9vCglsb2NhbCB0ID0gKGkraitrKSpHMzsKCglsb2NhbCBYMCA9IGktdDsgLS0gVW5za2V3
IHRoZSBjZWxsIG9yaWdpbiBiYWNrIHRvICh4LHkseikgc3BhY2UKCWxvY2FsIFkwID0gai10OwoJ
bG9jYWwgWjAgPSBrLXQ7CgoJbG9jYWwgeDAgPSB4aW4tWDA7IC0tIFRoZSB4LHkseiBkaXN0YW5j
ZXMgZnJvbSB0aGUgY2VsbCBvcmlnaW4KCWxvY2FsIHkwID0geWluLVkwOwoJbG9jYWwgejAgPSB6
aW4tWjA7CgoJLS0gRm9yIHRoZSAzRCBjYXNlLCB0aGUgc2ltcGxleCBzaGFwZSBpcyBhIHNsaWdo
dGx5IGlycmVndWxhciB0ZXRyYWhlZHJvbi4KCS0tIERldGVybWluZSB3aGljaCBzaW1wbGV4IHdl
IGFyZSBpbi4KCWxvY2FsIGkxLCBqMSwgazE7IC0tIE9mZnNldHMgZm9yIHNlY29uZCBjb3JuZXIg
b2Ygc2ltcGxleCBpbiAoaSxqLGspIGNvb3JkcwoJbG9jYWwgaTIsIGoyLCBrMjsgLS0gT2Zmc2V0
cyBmb3IgdGhpcmQgY29ybmVyIG9mIHNpbXBsZXggaW4gKGksaixrKSBjb29yZHMKCglpZiAoeDA_
PXkwKSB0aGVuCgkJaWYgKHkwPj16MCkgdGhlbgoJCQlpMT0xOyBqMT0wOyBrMT0wOyBpMj0xOyBq
Mj0xOyBrMj0wOyAtLSBYIFkgWiBvcmRlcgoJCWVsc2VpZiAoeDA_PXowKSB0aGVuCgkJCWkxPTE7
IGoxPTA7IGsxPTA7IGkyPTE7IGoyPTA7IGsyPTE7IC0tIFggWiBZIG9yZGVyCgkJZWxzZSAKCQkJ
aTE9MDsgajE9MDsgazE9MTsgaTI9MTsgajI9MDsgazI9MTsgIC0tIFogWCBZIG9yZGVyCgkJZW5k
CgllbHNlIC0tIHgwPHkwCgkJaWYgKHkwPHowKSB0aGVuIAoJCQlpMT0wOyBqMT0wOyBrMT0xOyBp
Mj0wOyBqMj0xOyBrMj0xOyAtLSBaIFkgWCBvcmRlcgoJCWVsc2VpZiAoeDA8ejApIHRoZW4gCgkJ
CWkxPTA7IGoxPTE7IGsxPTA7IGkyPTA7IGoyPTE7IGsyPTE7IC0tIFkgWiBYIG9yZGVyCgkJZWxz
ZSAKCQkJaTE9MDsgajE9MTsgazE9MDsgaTI9MTsgajI9MTsgazI9MDsgLS0gWSBYIFogb3JkZXIK
CQllbmQKCWVuZAoKCS0tIEEgc3RlcCBvZiAoMSwwLDApIGluIChpLGosaykgbWVhbnMgYSBzdGVw
IG9mICgxLWMsLWMsLWMpIGluICh4LHkseiksCgktLSBhIHN0ZXAgb2YgKDAsMSwwKSBpbiAoaSxq
LGspIG1lYW5zIGEgc3RlcCBvZiAoLWMsMS1jLC1jKSBpbiAoeCx5LHopLCBhbmQKCS0tIGEgc3Rl
cCBvZiAoMCwwLDEpIGluIChpLGosaykgbWVhbnMgYSBzdGVwIG9mICgtYywtYywxLWMpIGluICh4
LHkseiksIHdoZXJlCgktLSBjID0gMS82LgoKCWxvY2FsIHgxID0geDAgLSBpMSArIEczOyAtLSBP
ZmZzZXRzIGZvciBzZWNvbmQgY29ybmVyIGluICh4LHkseikgY29vcmRzCglsb2NhbCB5MSA9IHkw
IC0gajEgKyBHMzsKCWxvY2FsIHoxID0gejAgLSBrMSArIEczOwoKCWxvY2FsIHgyID0geDAgLSBp
MiArIDIuMCpHMzsgLS0gT2Zmc2V0cyBmb3IgdGhpcmQgY29ybmVyIGluICh4LHkseikgY29vcmRz
Cglsb2NhbCB5MiA9IHkwIC0gajIgKyAyLjAqRzM7Cglsb2NhbCB6MiA9IHowIC0gazIgKyAyLjAq
RzM7CgoJbG9jYWwgeDMgPSB4MCAtIDEuMCArIDMuMCpHMzsgLS0gT2Zmc2V0cyBmb3IgbGFzdCBj
b3JuZXIgaW4gKHgseSx6KSBjb29yZHMKCWxvY2FsIHkzID0geTAgLSAxLjAgKyAzLjAqRzM7Cgls
b2NhbCB6MyA9IHowIC0gMS4wICsgMy4wKkczOwoKCS0tIFdvcmsgb3V0IHRoZSBoYXNoZWQgZ3Jh
ZGllbnQgaW5kaWNlcyBvZiB0aGUgZm91ciBzaW1wbGV4IGNvcm5lcnMKCWxvY2FsIGlpID0gaSYy
NTUKCWxvY2FsIGpqID0gaiYyNTUKCWxvY2FsIGtrID0gayYyNTUKCglsb2NhbCBnaTAgPSBwZXJt
W2lpK3Blcm1bamorcGVybVtra11dXSAlIDEyOwoJbG9jYWwgZ2kxID0gcGVybVtpaStpMStwZXJt
W2pqK2oxK3Blcm1ba2srazFdXV0gJSAxMjsKCWxvY2FsIGdpMiA9IHBlcm1baWkraTIrcGVybVtq
aitqMitwZXJtW2trK2syXV1dICUgMTI7Cglsb2NhbCBnaTMgPSBwZXJtW2lpKzErcGVybVtqaisx
K3Blcm1ba2srMV1dXSAlIDEyOwoKCS0tIENhbGN1bGF0ZSB0aGUgY29udHJpYnV0aW9uIGZyb20g
dGhlIGZvdXIgY29ybmVycwoJbG9jYWwgdDAgPSAwLjUgLSB4MCp4MCAtIHkwKnkwIC0gejAqejA7
CgoJaWYgKHQwPDApIHRoZW4KCQluMCA9IDAuMDsKCWVsc2UgCgkJdDAgPSB0MCp0MDsKCQluMCA9
IHQwICogdDAgKiBEb3QzRChHcmFkaWVudHMzRFtnaTBdLCB4MCwgeTAsIHowKTsKCWVuZAoKCWxv
Y2FsIHQxID0gMC41IC0geDEqeDEgLSB5MSp5MSAtIHoxKnoxOwoKCWlmICh0MTwwKSB0aGVuIAoJ
CW4xID0gMC4wOwoJZWxzZQoJCXQxID0gdDEqdDE7CgkJbjEgPSB0MSAqIHQxICogRG90M0QoR3Jh
ZGllbnRzM0RbZ2kxXSwgeDEsIHkxLCB6MSk7CgllbmQKCglsb2NhbCB0MiA9IDAuNSAtIHgyKngy
IC0geTIqeTIgLSB6Mip6MjsKCglpZiAodDI8MCkgdGhlbiAKCQluMiA9IDAuMDsKCWVsc2UKCQl0
MiA9IHQyKnQyOwoJCW4yID0gdDIgKiB0MiAqIERvdDNEKEdyYWRpZW50czNEW2dpMl0sIHgyLCB5
MiwgejIpOwoJZW5kCgoJbG9jYWwgdDMgPSAwLjUgLSB4Myp4MyAtIHkzKnkzIC0gejMqejM7CgoJ
aWYgKHQzPDApIHRoZW4gCgkJbjMgPSAwLjA7CgllbHNlCgkJdDMgPSB0Myp0MzsKCQluMyA9IHQz
ICogdDMgKiBEb3QzRChHcmFkaWVudHMzRFtnaTNdLCB4MywgeTMsIHozKTsKCWVuZAoKCS0tIEFk
ZCBjb250cmlidXRpb25zIGZyb20gZWFjaCBjb3JuZXIgdG8gZ2V0IHRoZSBmaW5hbCBub2lzZSB2
YWx1ZS4KCS0tIFRoZSByZXN1bHQgaXMgc2NhbGVkIHRvIHN0YXkganVzdCBpbnNpZGUgWy0xLDFd
Cglsb2NhbCByZXR2YWwgPSA0NiAqIChuMCArIG4xICsgbjIgKyBuMykKCglyZXR1cm4gcmV0dmFs
OwplbmQKCmxvY2FsIFByZXY0RCA9IHt9CgotLSA0RCBzaW1wbGV4IG5vaXNlCmZ1bmN0aW9uIHNp
bXBsZXguTm9pc2U0RCh4LHkseix3KQoKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSBhbmQgUHJl
djREW3hdIGFuZCBQcmV2NERbeF1beV0gYW5kIFByZXY0RFt4XVt5XVt6XSBhbmQgUHJldjREW3hd
W3ldW3pdW3ddIHRoZW4gcmV0dXJuIFByZXY0RFt4XVt5XVt6XVt3XSBlbmQKCgktLSBUaGUgc2tl
d2luZyBhbmQgdW5za2V3aW5nIGZhY3RvcnMgYXJlIGhhaXJ5IGFnYWluIGZvciB0aGUgNEQgY2Fz
ZQoJbG9jYWwgRjQgPSAobWF0aC5zcXJ0KDUuMCktMS4wKS80LjA7Cglsb2NhbCBHNCA9ICg1LjAt
bWF0aC5zcXJ0KDUuMCkpLzIwLjA7Cglsb2NhbCBuMCwgbjEsIG4yLCBuMywgbjQ7IC0tIE5vaXNl
IGNvbnRyaWJ1dGlvbnMgZnJvbSB0aGUgZml2ZSBjb3JuZXJzCgktLSBTa2V3IHRoZSAoeCx5LHos
dykgc3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIGNlbGwgb2YgMjQgc2ltcGxpY2VzIHdlJ3JlIGlu
Cglsb2NhbCBzID0gKHggKyB5ICsgeiArIHcpICogRjQ7IC0tIEZhY3RvciBmb3IgNEQgc2tld2lu
ZwoJbG9jYWwgaSA9IG1hdGguZmxvb3IoeCArIHMpOwoJbG9jYWwgaiA9IG1hdGguZmxvb3IoeSAr
IHMpOwoJbG9jYWwgayA9IG1hdGguZmxvb3IoeiArIHMpOwoJbG9jYWwgbCA9IG1hdGguZmxvb3Io
dyArIHMpOwoJbG9jYWwgdCA9IChpICsgaiArIGsgKyBsKSAqIEc0OyAtLSBGYWN0b3IgZm9yIDRE
IHVuc2tld2luZwoJbG9jYWwgWDAgPSBpIC0gdDsgLS0gVW5za2V3IHRoZSBjZWxsIG9yaWdpbiBi
YWNrIHRvICh4LHkseix3KSBzcGFjZQoJbG9jYWwgWTAgPSBqIC0gdDsKCWxvY2FsIFowID0gayAt
IHQ7Cglsb2NhbCBXMCA9IGwgLSB0OwoJbG9jYWwgeDAgPSB4IC0gWDA7IC0tIFRoZSB4LHkseix3
IGRpc3RhbmNlcyBmcm9tIHRoZSBjZWxsIG9yaWdpbgoJbG9jYWwgeTAgPSB5IC0gWTA7Cglsb2Nh
bCB6MCA9IHogLSBaMDsKCWxvY2FsIHcwID0gdyAtIFcwOwoJLS0gRm9yIHRoZSA0RCBjYXNlLCB0
aGUgc2ltcGxleCBpcyBhIDREIHNoYXBlIEkgd29uJ3QgZXZlbiB0cnkgdG8gZGVzY3JpYmUuCgkt
LSBUbyBmaW5kIG91dCB3aGljaCBvZiB0aGUgMjQgcG9zc2libGUgc2ltcGxpY2VzIHdlJ3JlIGlu
LCB3ZSBuZWVkIHRvCgktLSBkZXRlcm1pbmUgdGhlIG1hZ25pdHVkZSBvcmRlcmluZyBvZiB4MCwg
eTAsIHowIGFuZCB3MC4KCS0tIFRoZSBtZXRob2QgYmVsb3cgaXMgYSBnb29kIHdheSBvZiBmaW5k
aW5nIHRoZSBvcmRlcmluZyBvZiB4LHkseix3IGFuZAoJLS0gdGhlbiBmaW5kIHRoZSBjb3JyZWN0
IHRyYXZlcnNhbCBvcmRlciBmb3IgdGhlIHNpbXBsZXggd2Xvv71yZSBpbi4KCS0tIEZpcnN0LCBz
aXggcGFpci13aXNlIGNvbXBhcmlzb25zIGFyZSBwZXJmb3JtZWQgYmV0d2VlbiBlYWNoIHBvc3Np
YmxlIHBhaXIKCS0tIG9mIHRoZSBmb3VyIGNvb3JkaW5hdGVzLCBhbmQgdGhlIHJlc3VsdHMgYXJl
IHVzZWQgdG8gYWRkIHVwIGJpbmFyeSBiaXRzCgktLSBmb3IgYW4gbG9jYWxlZ2VyIGluZGV4LgoJ
bG9jYWwgYzEgPSAoeDAgPiB5MCkgYW5kIDMyIG9yIDE7Cglsb2NhbCBjMiA9ICh4MCA_IHowKSBh
bmQgMTYgb3IgMTsKCWxvY2FsIGMzID0gKHkwID4gejApIGFuZCA4IG9yIDE7Cglsb2NhbCBjNCA9
ICh4MCA_IHcwKSBhbmQgNCBvciAxOwoJbG9jYWwgYzUgPSAoeTAgPiB3MCkgYW5kIDIgb3IgMTsK
CWxvY2FsIGM2ID0gKHowID4gdzApIGFuZCAxIG9yIDE7Cglsb2NhbCBjID0gYzEgKyBjMiArIGMz
ICsgYzQgKyBjNSArIGM2OwoJbG9jYWwgaTEsIGoxLCBrMSwgbDE7IC0tIFRoZSBsb2NhbGVnZXIg
b2Zmc2V0cyBmb3IgdGhlIHNlY29uZCBzaW1wbGV4IGNvcm5lcgoJbG9jYWwgaTIsIGoyLCBrMiwg
bDI7IC0tIFRoZSBsb2NhbGVnZXIgb2Zmc2V0cyBmb3IgdGhlIHRoaXJkIHNpbXBsZXggY29ybmVy
Cglsb2NhbCBpMywgajMsIGszLCBsMzsgLS0gVGhlIGxvY2FsZWdlciBvZmZzZXRzIGZvciB0aGUg
Zm91cnRoIHNpbXBsZXggY29ybmVyCgoJLS0gc2ltW2NdIGlzIGEgNC12ZWN0b3Igd2l0aCB0aGUg
bnVtYmVycyAwLCAxLCAyIGFuZCAzIGluIHNvbWUgb3JkZXIuCgktLSBNYW55IHZhbHVlcyBvZiBj
IHdpbGwgbmV2ZXIgb2NjdXIsIHNpbmNlIGUuZy4geD55Pno_dyBtYWtlcyB4PHosIHk8dyBhbmQg
eDx3CgktLSBpbXBvc3NpYmxlLiBPbmx5IHRoZSAyNCBpbmRpY2VzIHdoaWNoIGhhdmUgbm9uLXpl
cm8gZW50cmllcyBtYWtlIGFueSBzZW5zZS4KCS0tIFdlIHVzZSBhIHRocmVzaG9sZGluZyB0byBz
ZXQgdGhlIGNvb3JkaW5hdGVzIGluIHR1cm4gZnJvbSB0aGUgbGFyZ2VzdCBtYWduaXR1ZGUuCgkt
LSBUaGUgbnVtYmVyIDMgaW4gdGhlICJzaW0iIGFycmF5IGlzIGF0IHRoZSBwb3NpdGlvbiBvZiB0
aGUgbGFyZ2VzdCBjb29yZGluYXRlLgoKCWkxID0gc2ltW2NdWzFdPj0zIGFuZCAxIG9yIDA7Cglq
MSA9IHNpbVtjXVsyXT49MyBhbmQgMSBvciAwOwoJazEgPSBzaW1bY11bM10_PTMgYW5kIDEgb3Ig
MDsKCWwxID0gc2ltW2NdWzRdPj0zIGFuZCAxIG9yIDA7CgktLSBUaGUgbnVtYmVyIDIgaW4gdGhl
ICJzaW0iIGFycmF5IGlzIGF0IHRoZSBzZWNvbmQgbGFyZ2VzdCBjb29yZGluYXRlLgoJaTIgPSBz
aW1bY11bMV0_PTIgYW5kIDEgb3IgMDsKCWoyID0gc2ltW2NdWzJdPj0yIGFuZCAxIG9yIDA7Cglr
MiA9IHNpbVtjXVszXT49MiBhbmQgMSBvciAwOwoJbDIgPSBzaW1bY11bNF0_PTIgYW5kIDEgb3Ig
MDsKCS0tIFRoZSBudW1iZXIgMSBpbiB0aGUgInNpbSIgYXJyYXkgaXMgYXQgdGhlIHNlY29uZCBz
bWFsbGVzdCBjb29yZGluYXRlLgoJaTMgPSBzaW1bY11bMV0_PTEgYW5kIDEgb3IgMDsKCWozID0g
c2ltW2NdWzJdPj0xIGFuZCAxIG9yIDA7CglrMyA9IHNpbVtjXVszXT49MSBhbmQgMSBvciAwOwoJ
bDMgPSBzaW1bY11bNF0_PTEgYW5kIDEgb3IgMDsKCS0tIFRoZSBmaWZ0aCBjb3JuZXIgaGFzIGFs
bCBjb29yZGluYXRlIG9mZnNldHMgPSAxLCBzbyBubyBuZWVkIHRvIGxvb2sgdGhhdCB1cC4KCWxv
Y2FsIHgxID0geDAgLSBpMSArIEc0OyAtLSBPZmZzZXRzIGZvciBzZWNvbmQgY29ybmVyIGluICh4
LHkseix3KSBjb29yZHMKCWxvY2FsIHkxID0geTAgLSBqMSArIEc0OwoJbG9jYWwgejEgPSB6MCAt
IGsxICsgRzQ7Cglsb2NhbCB3MSA9IHcwIC0gbDEgKyBHNDsKCWxvY2FsIHgyID0geDAgLSBpMiAr
IDIuMCpHNDsgLS0gT2Zmc2V0cyBmb3IgdGhpcmQgY29ybmVyIGluICh4LHkseix3KSBjb29yZHMK
CWxvY2FsIHkyID0geTAgLSBqMiArIDIuMCpHNDsKCWxvY2FsIHoyID0gejAgLSBrMiArIDIuMCpH
NDsKCWxvY2FsIHcyID0gdzAgLSBsMiArIDIuMCpHNDsKCWxvY2FsIHgzID0geDAgLSBpMyArIDMu
MCpHNDsgLS0gT2Zmc2V0cyBmb3IgZm91cnRoIGNvcm5lciBpbiAoeCx5LHosdykgY29vcmRzCgls
b2NhbCB5MyA9IHkwIC0gajMgKyAzLjAqRzQ7Cglsb2NhbCB6MyA9IHowIC0gazMgKyAzLjAqRzQ7
Cglsb2NhbCB3MyA9IHcwIC0gbDMgKyAzLjAqRzQ7Cglsb2NhbCB4NCA9IHgwIC0gMS4wICsgNC4w
Kkc0OyAtLSBPZmZzZXRzIGZvciBsYXN0IGNvcm5lciBpbiAoeCx5LHosdykgY29vcmRzCglsb2Nh
bCB5NCA9IHkwIC0gMS4wICsgNC4wKkc0OwoJbG9jYWwgejQgPSB6MCAtIDEuMCArIDQuMCpHNDsK
CWxvY2FsIHc0ID0gdzAgLSAxLjAgKyA0LjAqRzQ7CgoJLS0gV29yayBvdXQgdGhlIGhhc2hlZCBn
cmFkaWVudCBpbmRpY2VzIG9mIHRoZSBmaXZlIHNpbXBsZXggY29ybmVycwoJbG9jYWwgaWkgPSBp
JjI1NQoJbG9jYWwgamogPSBqJjI1NQoJbG9jYWwga2sgPSBrJjI1NQoJbG9jYWwgbGwgPSBsJjI1
NQoJbG9jYWwgZ2kwID0gcGVybVtpaStwZXJtW2pqK3Blcm1ba2srcGVybVtsbF1dXV0gJSAzMjsK
CWxvY2FsIGdpMSA9IHBlcm1baWkraTErcGVybVtqaitqMStwZXJtW2trK2sxK3Blcm1bbGwrbDFd
XV1dICUgMzI7Cglsb2NhbCBnaTIgPSBwZXJtW2lpK2kyK3Blcm1bamorajIrcGVybVtraytrMitw
ZXJtW2xsK2wyXV1dXSAlIDMyOwoJbG9jYWwgZ2kzID0gcGVybVtpaStpMytwZXJtW2pqK2ozK3Bl
cm1ba2srazMrcGVybVtsbCtsM11dXV0gJSAzMjsKCWxvY2FsIGdpNCA9IHBlcm1baWkrMStwZXJt
W2pqKzErcGVybVtraysxK3Blcm1bbGwrMV1dXV0gJSAzMjsKCgktLSBDYWxjdWxhdGUgdGhlIGNv
bnRyaWJ1dGlvbiBmcm9tIHRoZSBmaXZlIGNvcm5lcnMKCWxvY2FsIHQwID0gMC41IC0geDAqeDAg
LSB5MCp5MCAtIHowKnowIC0gdzAqdzA7CglpZiAodDA8MCkgdGhlbgoJCW4wID0gMC4wOwoJZWxz
ZQoJCXQwID0gdDAqdDA7CgkJbjAgPSB0MCAqIHQwICogRG90NEQoR3JhZGllbnRzNERbZ2kwXSwg
eDAsIHkwLCB6MCwgdzApOwoJZW5kCgoJbG9jYWwgdDEgPSAwLjUgLSB4MSp4MSAtIHkxKnkxIC0g
ejEqejEgLSB3MSp3MTsKCWlmICh0MTwwKSB0aGVuCgkJbjEgPSAwLjA7CgllbHNlIAoJCXQxID0g
dDEqdDE7CgkJbjEgPSB0MSAqIHQxICogRG90NEQoR3JhZGllbnRzNERbZ2kxXSwgeDEsIHkxLCB6
MSwgdzEpOwoJZW5kCgoJbG9jYWwgdDIgPSAwLjUgLSB4Mip4MiAtIHkyKnkyIC0gejIqejIgLSB3
Mip3MjsKCWlmICh0MjwwKSB0aGVuCgkJbjIgPSAwLjA7CgllbHNlCgkJdDIgPSB0Mip0MjsKCQlu
MiA9IHQyICogdDIgKiBEb3Q0RChHcmFkaWVudHM0RFtnaTJdLCB4MiwgeTIsIHoyLCB3Mik7Cgll
bmQKCglsb2NhbCB0MyA9IDAuNSAtIHgzKngzIC0geTMqeTMgLSB6Myp6MyAtIHczKnczOwoJaWYg
KHQzPDApIHRoZW4KCQluMyA9IDAuMDsKCWVsc2UgCgkJdDMgPSB0Myp0MzsKCQluMyA9IHQzICog
dDMgKiBEb3Q0RChHcmFkaWVudHM0RFtnaTNdLCB4MywgeTMsIHozLCB3Myk7CgllbmQKCglsb2Nh
bCB0NCA9IDAuNSAtIHg0Kng0IC0geTQqeTQgLSB6NCp6NCAtIHc0Knc0OwoJaWYgKHQ0PDApIHRo
ZW4KCQluNCA9IDAuMDsKCWVsc2UKCQl0NCA9IHQ0KnQ0OwoJCW40ID0gdDQgKiB0NCAqIERvdDRE
KEdyYWRpZW50czREW2dpNF0sIHg0LCB5NCwgejQsIHc0KTsKCWVuZAoKCS0tIFN1bSB1cCBhbmQg
c2NhbGUgdGhlIHJlc3VsdCB0byBjb3ZlciB0aGUgcmFuZ2UgWy0xLDFdCgoJbG9jYWwgcmV0dmFs
ID0gMjcuMCAqIChuMCArIG4xICsgbjIgKyBuMyArIG40KQoKCWlmIHNpbXBsZXguaW50ZXJuYWxD
YWNoZSB0aGVuCgkJaWYgbm90IFByZXY0RFt4XSB0aGVuIFByZXY0RFt4XSA9IHt9IGVuZAoJCWlm
IG5vdCBQcmV2NERbeF1beV0gdGhlbiBQcmV2NERbeF1beV0gPSB7fSBlbmQKCQlpZiBub3QgUHJl
djREW3hdW3ldW3pdIHRoZW4gUHJldjREW3hdW3ldW3pdID0ge30gZW5kCgkJUHJldjREW3hdW3ld
W3pdW3ddID0gcmV0dmFsCgllbmQKCglyZXR1cm4gcmV0dmFsOwoKZW5kIAoKbG9jYWwgZSA9IDIu
NzE4MjgxODI4NDU5MDQ1MjM1MzYKCmxvY2FsIFByZXZCbHVyMkQgPSB7fQoKZnVuY3Rpb24gc2lt
cGxleC5HQmx1cjJEKHgseSxzdGREZXYpCglpZiBzaW1wbGV4LmludGVybmFsQ2FjaGUgYW5kIFBy
ZXZCbHVyMkRbeF0gYW5kIFByZXZCbHVyMkRbeF1beV0gYW5kIFByZXZCbHVyMkRbeF1beV1bc3Rk
RGV2XSB0aGVuIHJldHVybiBQcmV2Qmx1cjJEW3hdW3ldW3N0ZERldl0gZW5kCglsb2NhbCBwd3Ig
PSAoKHheMit5XjIpLygyKihzdGREZXZeMikpKSotMQoJbG9jYWwgcmV0ID0gKDEvKDIqbWF0aC5w
aSooc3RkRGV2XjIpKSkqKGVecHdyKQoKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSB0aGVuCgkJ
aWYgbm90IFByZXZCbHVyMkRbeF0gdGhlbiBQcmV2Qmx1cjJEW3hdID0ge30gZW5kCgkJaWYgbm90
IFByZXZCbHVyMkRbeF1beV0gdGhlbiBQcmV2Qmx1cjJEW3hdW3ldID0ge30gZW5kCgkJUHJldkJs
dXIyRFt4XVt5XVtzdGREZXZdID0gcmV0CgllbmQKCXJldHVybiByZXQKZW5kIAoKbG9jYWwgUHJl
dkJsdXIxRCA9IHt9CgpmdW5jdGlvbiBzaW1wbGV4LkdCbHVyMUQoeCxzdGREZXYpCglpZiBzaW1w
bGV4LmludGVybmFsQ2FjaGUgYW5kIFByZXZCbHVyMURbeF0gYW5kIFByZXZCbHVyMURbeF1bc3Rk
RGV2XSB0aGVuIHJldHVybiBQcmV2Qmx1cjFEW3hdW3N0ZERldl0gZW5kCglsb2NhbCBwd3IgPSAo
eF4yLygyKnN0ZERldl4yKSkqLTEKCWxvY2FsIHJldCA9ICgxLyhtYXRoLnNxcnQoMiptYXRoLnBp
KSpzdGREZXYpKSooZV5wd3IpCgoJaWYgc2ltcGxleC5pbnRlcm5hbENhY2hlIHRoZW4KCQlpZiBu
b3QgUHJldkJsdXIxRFt4XSB0aGVuIFByZXZCbHVyMURbeF0gPSB7fSBlbmQKCQlQcmV2Qmx1cjFE
W3hdW3N0ZERldl0gPSByZXQKCWVuZAoJcmV0dXJuIHJldAplbmQKCmZ1bmN0aW9uIHNpbXBsZXgu
RnJhY3RhbFN1bShmdW5jLCBpdGVyLCAuLi4pCiAgICBsb2NhbCByZXQgPSBmdW5jKC4uLikKICAg
IGZvciBpPTEsaXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0gMl5pdGVyCiAgICAgICAgbG9j
YWwgcyA9IHBvd2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0ge30KICAgICAgICBmb3IgZWxl
bSBpbiBpcGFpcnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzY2FsZWQsIGVs
ZW0qcykKICAgICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAoaS9wb3dlcikqKGZ1bmModW5w
YWNrKHNjYWxlZCkpKQogICAgZW5kCiAgICByZXR1cm4gcmV0CmVuZAoKZnVuY3Rpb24gc2ltcGxl
eC5GcmFjdGFsU3VtQWJzKGZ1bmMsIGl0ZXIsIC4uLikKICAgIGxvY2FsIHJldCA9IG1hdGguYWJz
KGZ1bmMoLi4uKSkKICAgIGZvciBpPTEsaXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0gMl5p
dGVyCiAgICAgICAgbG9jYWwgcyA9IHBvd2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0ge30K
ICAgICAgICBmb3IgZWxlbSBpbiBpcGFpcnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxlLmlu
c2VydChzY2FsZWQsIGVsZW0qcykKICAgICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAoaS9w
b3dlcikqKG1hdGguYWJzKGZ1bmModW5wYWNrKHNjYWxlZCkpKSkKICAgIGVuZAogICAgcmV0dXJu
IHJldAplbmQKCmZ1bmN0aW9uIHNpbXBsZXguVHVyYnVsZW5jZShmdW5jLCBkaXJlY3Rpb24sIGl0
ZXIsIC4uLikKICAgIGxvY2FsIHJldCA9IG1hdGguYWJzKGZ1bmMoLi4uKSkKICAgIGZvciBpPTEs
aXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0gMl5pdGVyCiAgICAgICAgbG9jYWwgcyA9IHBv
d2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0ge30KICAgICAgICBmb3IgZWxlbSBpbiBpcGFp
cnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzY2FsZWQsIGVsZW0qcykKICAg
ICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAoaS9wb3dlcikqKG1hdGguYWJzKGZ1bmModW5w
YWNrKHNjYWxlZCkpKSkKICAgIGVuZAogICAgbG9jYWwgYXJncyA9IHsuLi59CiAgICBsb2NhbCBk
aXJfY29tcG9uZW50ID0gYXJnc1tkaXJlY3Rpb24rMV0KICAgIHJldHVybiBtYXRoLnNpbihkaXJf
Y29tcG9uZW50K3JldCkKZW5k
:: noise.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNC0wOSAxOTozNDoyMyIsbW9k
aWZpZWQ9IjIwMjUtMDUtMDEgMDk6Mzg6NDYiLHJldmlzaW9uPTExMTZdXQotLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLS1TaW1wbGV4IE5vaXNlCi0tIE9y
aWdpbmFsIEphdmEgU291cmNlOiBodHRwOi8vc3RhZmZ3d3cuaXRuLmxpdS5zZS9_c3RlZ3Uvc2lt
cGxleG5vaXNlL3NpbXBsZXhub2lzZS5wZGYKLS0gKG1vc3QpIE9yaWdpbmFsIGNvbW1lbnRzIGlu
Y2x1ZGVkCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgps
b2NhbCBtYXRoID0gbWF0aApsb2NhbCB0YWJsZSA9IHRhYmxlCmxvY2FsIHRvbnVtYmVyID0gdG9u
dW1iZXIKbG9jYWwgaXBhaXJzID0gaXBhaXJzCmxvY2FsIGVycm9yID0gZXJyb3IKCnNpbXBsZXgg
PSB7fQoKc2ltcGxleC5ESVJfWCA9IDAKc2ltcGxleC5ESVJfWSA9IDEKc2ltcGxleC5ESVJfWiA9
IDIKc2ltcGxleC5ESVJfVyA9IDMKc2ltcGxleC5pbnRlcm5hbENhY2hlID0gZmFsc2UKCmxvY2Fs
IEdyYWRpZW50czNEID0ge3sxLDEsMH0sey0xLDEsMH0sezEsLTEsMH0sey0xLC0xLDB9LAp7MSww
LDF9LHstMSwwLDF9LHsxLDAsLTF9LHstMSwwLC0xfSwKezAsMSwxfSx7MCwtMSwxfSx7MCwxLC0x
fSx7MCwtMSwtMX19Owpsb2NhbCBHcmFkaWVudHM0RCA9IHt7MCwxLDEsMX0sIHswLDEsMSwtMX0s
IHswLDEsLTEsMX0sIHswLDEsLTEsLTF9LAp7MCwtMSwxLDF9LCB7MCwtMSwxLC0xfSwgezAsLTEs
LTEsMX0sIHswLC0xLC0xLC0xfSwKezEsMCwxLDF9LCB7MSwwLDEsLTF9LCB7MSwwLC0xLDF9LCB7
MSwwLC0xLC0xfSwKey0xLDAsMSwxfSwgey0xLDAsMSwtMX0sIHstMSwwLC0xLDF9LCB7LTEsMCwt
MSwtMX0sCnsxLDEsMCwxfSwgezEsMSwwLC0xfSwgezEsLTEsMCwxfSwgezEsLTEsMCwtMX0sCnst
MSwxLDAsMX0sIHstMSwxLDAsLTF9LCB7LTEsLTEsMCwxfSwgey0xLC0xLDAsLTF9LAp7MSwxLDEs
MH0sIHsxLDEsLTEsMH0sIHsxLC0xLDEsMH0sIHsxLC0xLC0xLDB9LAp7LTEsMSwxLDB9LCB7LTEs
MSwtMSwwfSwgey0xLC0xLDEsMH0sIHstMSwtMSwtMSwwfX07CmxvY2FsIHAgPSB7MTUxLDE2MCwx
MzcsOTEsOTAsMTUsCjEzMSwxMywyMDEsOTUsOTYsNTMsMTk0LDIzMyw3LDIyNSwxNDAsMzYsMTAz
LDMwLDY5LDE0Miw4LDk5LDM3LDI0MCwyMSwxMCwyMywKMTkwLCA2LDE0OCwyNDcsMTIwLDIzNCw3
NSwwLDI2LDE5Nyw2Miw5NCwyNTIsMjE5LDIwMywxMTcsMzUsMTEsMzIsNTcsMTc3LDMzLAo4OCwy
MzcsMTQ5LDU2LDg3LDE3NCwyMCwxMjUsMTM2LDE3MSwxNjgsIDY4LDE3NSw3NCwxNjUsNzEsMTM0
LDEzOSw0OCwyNywxNjYsCjc3LDE0NiwxNTgsMjMxLDgzLDExMSwyMjksMTIyLDYwLDIxMSwxMzMs
MjMwLDIyMCwxMDUsOTIsNDEsNTUsNDYsMjQ1LDQwLDI0NCwKMTAyLDE0Myw1NCwgNjUsMjUsNjMs
MTYxLCAxLDIxNiw4MCw3MywyMDksNzYsMTMyLDE4NywyMDgsIDg5LDE4LDE2OSwyMDAsMTk2LAox
MzUsMTMwLDExNiwxODgsMTU5LDg2LDE2NCwxMDAsMTA5LDE5OCwxNzMsMTg2LCAzLDY0LDUyLDIx
NywyMjYsMjUwLDEyNCwxMjMsCjUsMjAyLDM4LDE0NywxMTgsMTI2LDI1NSw4Miw4NSwyMTIsMjA3
LDIwNiw1OSwyMjcsNDcsMTYsNTgsMTcsMTgyLDE4OSwyOCw0MiwKMjIzLDE4MywxNzAsMjEzLDEx
OSwyNDgsMTUyLCAyLDQ0LDE1NCwxNjMsIDcwLDIyMSwxNTMsMTAxLDE1NSwxNjcsIDQzLDE3Miw5
LAoxMjksMjIsMzksMjUzLCAxOSw5OCwxMDgsMTEwLDc5LDExMywyMjQsMjMyLDE3OCwxODUsIDEx
MiwxMDQsMjE4LDI0Niw5NywyMjgsCjI1MSwzNCwyNDIsMTkzLDIzOCwyMTAsMTQ0LDEyLDE5MSwx
NzksMTYyLDI0MSwgODEsNTEsMTQ1LDIzNSwyNDksMTQsMjM5LDEwNywKNDksMTkyLDIxNCwgMzEs
MTgxLDE5OSwxMDYsMTU3LDE4NCwgODQsMjA0LDE3NiwxMTUsMTIxLDUwLDQ1LDEyNywgNCwxNTAs
MjU0LAoxMzgsMjM2LDIwNSw5MywyMjIsMTE0LDY3LDI5LDI0LDcyLDI0MywxNDEsMTI4LDE5NSw3
OCw2NiwyMTUsNjEsMTU2LDE4MH07CgotLSBUbyByZW1vdmUgdGhlIG5lZWQgZm9yIGluZGV4IHdy
YXBwaW5nLCBkb3VibGUgdGhlIHBlcm11dGF0aW9uIHRhYmxlIGxlbmd0aAoKZm9yIGk9MSwjcCBk
bwoJcFtpLTFdID0gcFtpXQoJcFtpXSA9IG5pbAplbmQKCmZvciBpPTEsI0dyYWRpZW50czNEIGRv
CglHcmFkaWVudHMzRFtpLTFdID0gR3JhZGllbnRzM0RbaV0KCUdyYWRpZW50czNEW2ldID0gbmls
CmVuZAoKZm9yIGk9MSwjR3JhZGllbnRzNEQgZG8KCUdyYWRpZW50czREW2ktMV0gPSBHcmFkaWVu
dHM0RFtpXQoJR3JhZGllbnRzNERbaV0gPSBuaWwKZW5kCgpsb2NhbCBwZXJtID0ge30KCmZvciBp
PTAsMjU1IGRvCglwZXJtW2ldID0gcFtpXQoJcGVybVtpKzI1Nl0gPSBwW2ldCmVuZAoKLS0gQSBs
b29rdXAgdGFibGUgdG8gdHJhdmVyc2UgdGhlIHNpbSBhcm91bmQgYSBnaXZlbiBwb2ludCBpbiA0
RC4KLS0gRGV0YWlscyBjYW4gYmUgZm91bmQgd2hlcmUgdGhpcyB0YWJsZSBpcyB1c2VkLCBpbiB0
aGUgNEQgbm9pc2UgbWV0aG9kLgoKbG9jYWwgc2ltID0gewp7MCwxLDIsM30sezAsMSwzLDJ9LHsw
LDAsMCwwfSx7MCwyLDMsMX0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezEsMiwzLDB9
LAp7MCwyLDEsM30sezAsMCwwLDB9LHswLDMsMSwyfSx7MCwzLDIsMX0sezAsMCwwLDB9LHswLDAs
MCwwfSx7MCwwLDAsMH0sezEsMywyLDB9LAp7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7
MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAsMCwwLDB9LAp7MSwyLDAs
M30sezAsMCwwLDB9LHsxLDMsMCwyfSx7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7Miwz
LDAsMX0sezIsMywxLDB9LAp7MSwwLDIsM30sezEsMCwzLDJ9LHswLDAsMCwwfSx7MCwwLDAsMH0s
ezAsMCwwLDB9LHsyLDAsMywxfSx7MCwwLDAsMH0sezIsMSwzLDB9LAp7MCwwLDAsMH0sezAsMCww
LDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezAs
MCwwLDB9LAp7MiwwLDEsM30sezAsMCwwLDB9LHswLDAsMCwwfSx7MCwwLDAsMH0sezMsMCwxLDJ9
LHszLDAsMiwxfSx7MCwwLDAsMH0sezMsMSwyLDB9LAp7MiwxLDAsM30sezAsMCwwLDB9LHswLDAs
MCwwfSx7MCwwLDAsMH0sezMsMSwwLDJ9LHswLDAsMCwwfSx7MywyLDAsMX0sezMsMiwxLDB9fTsK
CmxvY2FsIGZ1bmN0aW9uIERvdDJEKHRibCwgeCwgeSkKCXJldHVybiB0YmxbMV0qeCArIHRibFsy
XSp5OyAKZW5kCgpsb2NhbCBmdW5jdGlvbiBEb3QzRCh0YmwsIHgsIHksIHopCglyZXR1cm4gdGJs
WzFdKnggKyB0YmxbMl0qeSArIHRibFszXSp6CmVuZAoKbG9jYWwgZnVuY3Rpb24gRG90NEQoIHRi
bCwgeCx5LHosdykgCglyZXR1cm4gdGJsWzFdKnggKyB0YmxbMl0qeSArIHRibFszXSp6ICsgdGJs
WzNdKnc7CmVuZAoKbG9jYWwgUHJldjJEID0ge30KCi0tIDJEIHNpbXBsZXggbm9pc2UKCmZ1bmN0
aW9uIHNpbXBsZXguTm9pc2UyRCh4aW4sIHlpbikKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSBh
bmQgUHJldjJEW3hpbl0gYW5kIFByZXYyRFt4aW5dW3lpbl0gdGhlbiByZXR1cm4gUHJldjJEW3hp
bl1beWluXSBlbmQgCgoJbG9jYWwgbjAsIG4xLCBuMjsgLS0gTm9pc2UgY29udHJpYnV0aW9ucyBm
cm9tIHRoZSB0aHJlZSBjb3JuZXJzCgktLSBTa2V3IHRoZSBpbnB1dCBzcGFjZSB0byBkZXRlcm1p
bmUgd2hpY2ggc2ltcGxleCBjZWxsIHdlJ3JlIGluCglsb2NhbCBGMiA9IDAuNSoobWF0aC5zcXJ0
KDMuMCktMS4wKTsKCWxvY2FsIHMgPSAoeGluK3lpbikqRjI7IC0tIEhhaXJ5IGZhY3RvciBmb3Ig
MkQKCWxvY2FsIGkgPSBtYXRoLmZsb29yKHhpbitzKTsKCWxvY2FsIGogPSBtYXRoLmZsb29yKHlp
bitzKTsKCWxvY2FsIEcyID0gKDMuMC1tYXRoLnNxcnQoMy4wKSkvNi4wOwoKCWxvY2FsIHQgPSAo
aStqKSpHMjsKCWxvY2FsIFgwID0gaS10OyAtLSBVbnNrZXcgdGhlIGNlbGwgb3JpZ2luIGJhY2sg
dG8gKHgseSkgc3BhY2UKCWxvY2FsIFkwID0gai10OwoJbG9jYWwgeDAgPSB4aW4tWDA7IC0tIFRo
ZSB4LHkgZGlzdGFuY2VzIGZyb20gdGhlIGNlbGwgb3JpZ2luCglsb2NhbCB5MCA9IHlpbi1ZMDsK
CgktLSBGb3IgdGhlIDJEIGNhc2UsIHRoZSBzaW1wbGV4IHNoYXBlIGlzIGFuIGVxdWlsYXRlcmFs
IHRyaWFuZ2xlLgoJLS0gRGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggd2UgYXJlIGluLgoJbG9jYWwg
aTEsIGoxOyAtLSBPZmZzZXRzIGZvciBzZWNvbmQgKG1pZGRsZSkgY29ybmVyIG9mIHNpbXBsZXgg
aW4gKGksaikgY29vcmRzCglpZih4MD55MCkgdGhlbiAKCQlpMT0xIAoJCWoxPTAgIC0tIGxvd2Vy
IHRyaWFuZ2xlLCBYWSBvcmRlcjogKDAsMCktPigxLDApLT4oMSwxKQoJZWxzZQoJCWkxPTAKCQlq
MT0xIC0tIHVwcGVyIHRyaWFuZ2xlLCBZWCBvcmRlcjogKDAsMCktPigwLDEpLT4oMSwxKQoJZW5k
CgoJLS0gQSBzdGVwIG9mICgxLDApIGluIChpLGopIG1lYW5zIGEgc3RlcCBvZiAoMS1jLC1jKSBp
biAoeCx5KSwgYW5kCgktLSBhIHN0ZXAgb2YgKDAsMSkgaW4gKGksaikgbWVhbnMgYSBzdGVwIG9m
ICgtYywxLWMpIGluICh4LHkpLCB3aGVyZQoJLS0gYyA9ICgzLXNxcnQoMykpLzYKCglsb2NhbCB4
MSA9IHgwIC0gaTEgKyBHMjsgLS0gT2Zmc2V0cyBmb3IgbWlkZGxlIGNvcm5lciBpbiAoeCx5KSB1
bnNrZXdlZCBjb29yZHMKCWxvY2FsIHkxID0geTAgLSBqMSArIEcyOwoJbG9jYWwgeDIgPSB4MCAt
IDEuMCArIDIuMCAqIEcyOyAtLSBPZmZzZXRzIGZvciBsYXN0IGNvcm5lciBpbiAoeCx5KSB1bnNr
ZXdlZCBjb29yZHMKCWxvY2FsIHkyID0geTAgLSAxLjAgKyAyLjAgKiBHMjsKCgktLSBXb3JrIG91
dCB0aGUgaGFzaGVkIGdyYWRpZW50IGluZGljZXMgb2YgdGhlIHRocmVlIHNpbXBsZXggY29ybmVy
cwoJbG9jYWwgaWkgPSBpJjI1NQoJbG9jYWwgamogPSBqJjI1NQoJbG9jYWwgZ2kwID0gcGVybVtp
aStwZXJtW2pqXV0gJSAxMjsKCWxvY2FsIGdpMSA9IHBlcm1baWkraTErcGVybVtqaitqMV1dICUg
MTI7Cglsb2NhbCBnaTIgPSBwZXJtW2lpKzErcGVybVtqaisxXV0gJSAxMjsKCgktLSBDYWxjdWxh
dGUgdGhlIGNvbnRyaWJ1dGlvbiBmcm9tIHRoZSB0aHJlZSBjb3JuZXJzCglsb2NhbCB0MCA9IDAu
NSAtIHgwKngwLXkwKnkwOwoJaWYgdDA8MCB0aGVuIAoJCW4wID0gMC4wOwoJZWxzZQoJCXQwID0g
dDAgKiB0MAoJCW4wID0gdDAgKiB0MCAqIERvdDJEKEdyYWRpZW50czNEW2dpMF0sIHgwLCB5MCk7
IC0tICh4LHkpIG9mIEdyYWRpZW50czNEIHVzZWQgZm9yIDJEIGdyYWRpZW50CgllbmQKCglsb2Nh
bCB0MSA9IDAuNSAtIHgxKngxLXkxKnkxOwoJaWYgKHQxPDApIHRoZW4KCQluMSA9IDAuMDsKCWVs
c2UKCQl0MSA9IHQxKnQxCgkJbjEgPSB0MSAqIHQxICogRG90MkQoR3JhZGllbnRzM0RbZ2kxXSwg
eDEsIHkxKTsKCWVuZAoKCWxvY2FsIHQyID0gMC41IC0geDIqeDIteTIqeTI7CglpZiAodDI8MCkg
dGhlbgoJCW4yID0gMC4wOwoJZWxzZQoJCXQyID0gdDIqdDIKCQluMiA9IHQyICogdDIgKiBEb3Qy
RChHcmFkaWVudHMzRFtnaTJdLCB4MiwgeTIpOwoJZW5kCgoJLS0gQWRkIGNvbnRyaWJ1dGlvbnMg
ZnJvbSBlYWNoIGNvcm5lciB0byBnZXQgdGhlIGZpbmFsIG5vaXNlIHZhbHVlLgoJLS0gVGhlIHJl
c3VsdCBpcyBzY2FsZWQgdG8gcmV0dXJuIHZhbHVlcyBpbiB0aGUgbG9jYWxlcnZhbCBbLTEsMV0u
CgoJbG9jYWwgcmV0dmFsID0gNzAuMCAqIChuMCArIG4xICsgbjIpCgoJaWYgc2ltcGxleC5pbnRl
cm5hbENhY2hlIHRoZW4KCQlpZiBub3QgUHJldjJEW3hpbl0gdGhlbiBQcmV2MkRbeGluXSA9IHt9
IGVuZAoJCVByZXYyRFt4aW5dW3lpbl0gPSByZXR2YWwKCWVuZAoKCXJldHVybiByZXR2YWw7CmVu
ZAoKbG9jYWwgUHJldjNEID0ge30KCi0tIDNEIHNpbXBsZXggbm9pc2UKZnVuY3Rpb24gc2ltcGxl
eC5Ob2lzZTNEKHhpbiwgeWluLCB6aW4pCgoJbG9jYWwgbjAsIG4xLCBuMiwgbjM7IC0tIE5vaXNl
IGNvbnRyaWJ1dGlvbnMgZnJvbSB0aGUgZm91ciBjb3JuZXJzCgoJLS0gU2tldyB0aGUgaW5wdXQg
c3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggY2VsbCB3ZSdyZSBpbgoJbG9jYWwgRjMg
PSAxLjAvMy4wOwoJbG9jYWwgcyA9ICh4aW4reWluK3ppbikqRjM7IC0tIFZlcnkgbmljZSBhbmQg
c2ltcGxlIHNrZXcgZmFjdG9yIGZvciAzRAoJbG9jYWwgaSA9IG1hdGguZmxvb3IoeGluK3MpOwoJ
bG9jYWwgaiA9IG1hdGguZmxvb3IoeWluK3MpOwoJbG9jYWwgayA9IG1hdGguZmxvb3IoemluK3Mp
OwoKCWxvY2FsIEczID0gMS4wLzYuMDsgLS0gVmVyeSBuaWNlIGFuZCBzaW1wbGUgdW5za2V3IGZh
Y3RvciwgdG9vCglsb2NhbCB0ID0gKGkraitrKSpHMzsKCglsb2NhbCBYMCA9IGktdDsgLS0gVW5z
a2V3IHRoZSBjZWxsIG9yaWdpbiBiYWNrIHRvICh4LHkseikgc3BhY2UKCWxvY2FsIFkwID0gai10
OwoJbG9jYWwgWjAgPSBrLXQ7CgoJbG9jYWwgeDAgPSB4aW4tWDA7IC0tIFRoZSB4LHkseiBkaXN0
YW5jZXMgZnJvbSB0aGUgY2VsbCBvcmlnaW4KCWxvY2FsIHkwID0geWluLVkwOwoJbG9jYWwgejAg
PSB6aW4tWjA7CgoJLS0gRm9yIHRoZSAzRCBjYXNlLCB0aGUgc2ltcGxleCBzaGFwZSBpcyBhIHNs
aWdodGx5IGlycmVndWxhciB0ZXRyYWhlZHJvbi4KCS0tIERldGVybWluZSB3aGljaCBzaW1wbGV4
IHdlIGFyZSBpbi4KCWxvY2FsIGkxLCBqMSwgazE7IC0tIE9mZnNldHMgZm9yIHNlY29uZCBjb3Ju
ZXIgb2Ygc2ltcGxleCBpbiAoaSxqLGspIGNvb3JkcwoJbG9jYWwgaTIsIGoyLCBrMjsgLS0gT2Zm
c2V0cyBmb3IgdGhpcmQgY29ybmVyIG9mIHNpbXBsZXggaW4gKGksaixrKSBjb29yZHMKCglpZiAo
eDA_PXkwKSB0aGVuCgkJaWYgKHkwPj16MCkgdGhlbgoJCQlpMT0xOyBqMT0wOyBrMT0wOyBpMj0x
OyBqMj0xOyBrMj0wOyAtLSBYIFkgWiBvcmRlcgoJCWVsc2VpZiAoeDA_PXowKSB0aGVuCgkJCWkx
PTE7IGoxPTA7IGsxPTA7IGkyPTE7IGoyPTA7IGsyPTE7IC0tIFggWiBZIG9yZGVyCgkJZWxzZSAK
CQkJaTE9MDsgajE9MDsgazE9MTsgaTI9MTsgajI9MDsgazI9MTsgIC0tIFogWCBZIG9yZGVyCgkJ
ZW5kCgllbHNlIC0tIHgwPHkwCgkJaWYgKHkwPHowKSB0aGVuIAoJCQlpMT0wOyBqMT0wOyBrMT0x
OyBpMj0wOyBqMj0xOyBrMj0xOyAtLSBaIFkgWCBvcmRlcgoJCWVsc2VpZiAoeDA8ejApIHRoZW4g
CgkJCWkxPTA7IGoxPTE7IGsxPTA7IGkyPTA7IGoyPTE7IGsyPTE7IC0tIFkgWiBYIG9yZGVyCgkJ
ZWxzZSAKCQkJaTE9MDsgajE9MTsgazE9MDsgaTI9MTsgajI9MTsgazI9MDsgLS0gWSBYIFogb3Jk
ZXIKCQllbmQKCWVuZAoKCS0tIEEgc3RlcCBvZiAoMSwwLDApIGluIChpLGosaykgbWVhbnMgYSBz
dGVwIG9mICgxLWMsLWMsLWMpIGluICh4LHkseiksCgktLSBhIHN0ZXAgb2YgKDAsMSwwKSBpbiAo
aSxqLGspIG1lYW5zIGEgc3RlcCBvZiAoLWMsMS1jLC1jKSBpbiAoeCx5LHopLCBhbmQKCS0tIGEg
c3RlcCBvZiAoMCwwLDEpIGluIChpLGosaykgbWVhbnMgYSBzdGVwIG9mICgtYywtYywxLWMpIGlu
ICh4LHkseiksIHdoZXJlCgktLSBjID0gMS82LgoKCWxvY2FsIHgxID0geDAgLSBpMSArIEczOyAt
LSBPZmZzZXRzIGZvciBzZWNvbmQgY29ybmVyIGluICh4LHkseikgY29vcmRzCglsb2NhbCB5MSA9
IHkwIC0gajEgKyBHMzsKCWxvY2FsIHoxID0gejAgLSBrMSArIEczOwoKCWxvY2FsIHgyID0geDAg
LSBpMiArIDIuMCpHMzsgLS0gT2Zmc2V0cyBmb3IgdGhpcmQgY29ybmVyIGluICh4LHkseikgY29v
cmRzCglsb2NhbCB5MiA9IHkwIC0gajIgKyAyLjAqRzM7Cglsb2NhbCB6MiA9IHowIC0gazIgKyAy
LjAqRzM7CgoJbG9jYWwgeDMgPSB4MCAtIDEuMCArIDMuMCpHMzsgLS0gT2Zmc2V0cyBmb3IgbGFz
dCBjb3JuZXIgaW4gKHgseSx6KSBjb29yZHMKCWxvY2FsIHkzID0geTAgLSAxLjAgKyAzLjAqRzM7
Cglsb2NhbCB6MyA9IHowIC0gMS4wICsgMy4wKkczOwoKCS0tIFdvcmsgb3V0IHRoZSBoYXNoZWQg
Z3JhZGllbnQgaW5kaWNlcyBvZiB0aGUgZm91ciBzaW1wbGV4IGNvcm5lcnMKCWxvY2FsIGlpID0g
aSYyNTUKCWxvY2FsIGpqID0gaiYyNTUKCWxvY2FsIGtrID0gayYyNTUKCglsb2NhbCBnaTAgPSBw
ZXJtW2lpK3Blcm1bamorcGVybVtra11dXSAlIDEyOwoJbG9jYWwgZ2kxID0gcGVybVtpaStpMStw
ZXJtW2pqK2oxK3Blcm1ba2srazFdXV0gJSAxMjsKCWxvY2FsIGdpMiA9IHBlcm1baWkraTIrcGVy
bVtqaitqMitwZXJtW2trK2syXV1dICUgMTI7Cglsb2NhbCBnaTMgPSBwZXJtW2lpKzErcGVybVtq
aisxK3Blcm1ba2srMV1dXSAlIDEyOwoKCS0tIENhbGN1bGF0ZSB0aGUgY29udHJpYnV0aW9uIGZy
b20gdGhlIGZvdXIgY29ybmVycwoJbG9jYWwgdDAgPSAwLjUgLSB4MCp4MCAtIHkwKnkwIC0gejAq
ejA7CgoJaWYgKHQwPDApIHRoZW4KCQluMCA9IDAuMDsKCWVsc2UgCgkJdDAgPSB0MCp0MDsKCQlu
MCA9IHQwICogdDAgKiBEb3QzRChHcmFkaWVudHMzRFtnaTBdLCB4MCwgeTAsIHowKTsKCWVuZAoK
CWxvY2FsIHQxID0gMC41IC0geDEqeDEgLSB5MSp5MSAtIHoxKnoxOwoKCWlmICh0MTwwKSB0aGVu
IAoJCW4xID0gMC4wOwoJZWxzZQoJCXQxID0gdDEqdDE7CgkJbjEgPSB0MSAqIHQxICogRG90M0Qo
R3JhZGllbnRzM0RbZ2kxXSwgeDEsIHkxLCB6MSk7CgllbmQKCglsb2NhbCB0MiA9IDAuNSAtIHgy
KngyIC0geTIqeTIgLSB6Mip6MjsKCglpZiAodDI8MCkgdGhlbiAKCQluMiA9IDAuMDsKCWVsc2UK
CQl0MiA9IHQyKnQyOwoJCW4yID0gdDIgKiB0MiAqIERvdDNEKEdyYWRpZW50czNEW2dpMl0sIHgy
LCB5MiwgejIpOwoJZW5kCgoJbG9jYWwgdDMgPSAwLjUgLSB4Myp4MyAtIHkzKnkzIC0gejMqejM7
CgoJaWYgKHQzPDApIHRoZW4gCgkJbjMgPSAwLjA7CgllbHNlCgkJdDMgPSB0Myp0MzsKCQluMyA9
IHQzICogdDMgKiBEb3QzRChHcmFkaWVudHMzRFtnaTNdLCB4MywgeTMsIHozKTsKCWVuZAoKCS0t
IEFkZCBjb250cmlidXRpb25zIGZyb20gZWFjaCBjb3JuZXIgdG8gZ2V0IHRoZSBmaW5hbCBub2lz
ZSB2YWx1ZS4KCS0tIFRoZSByZXN1bHQgaXMgc2NhbGVkIHRvIHN0YXkganVzdCBpbnNpZGUgWy0x
LDFdCglsb2NhbCByZXR2YWwgPSA0NiAqIChuMCArIG4xICsgbjIgKyBuMykKCglyZXR1cm4gcmV0
dmFsOwplbmQKCmxvY2FsIFByZXY0RCA9IHt9CgotLSA0RCBzaW1wbGV4IG5vaXNlCmZ1bmN0aW9u
IHNpbXBsZXguTm9pc2U0RCh4LHkseix3KQoKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSBhbmQg
UHJldjREW3hdIGFuZCBQcmV2NERbeF1beV0gYW5kIFByZXY0RFt4XVt5XVt6XSBhbmQgUHJldjRE
W3hdW3ldW3pdW3ddIHRoZW4gcmV0dXJuIFByZXY0RFt4XVt5XVt6XVt3XSBlbmQKCgktLSBUaGUg
c2tld2luZyBhbmQgdW5za2V3aW5nIGZhY3RvcnMgYXJlIGhhaXJ5IGFnYWluIGZvciB0aGUgNEQg
Y2FzZQoJbG9jYWwgRjQgPSAobWF0aC5zcXJ0KDUuMCktMS4wKS80LjA7Cglsb2NhbCBHNCA9ICg1
LjAtbWF0aC5zcXJ0KDUuMCkpLzIwLjA7Cglsb2NhbCBuMCwgbjEsIG4yLCBuMywgbjQ7IC0tIE5v
aXNlIGNvbnRyaWJ1dGlvbnMgZnJvbSB0aGUgZml2ZSBjb3JuZXJzCgktLSBTa2V3IHRoZSAoeCx5
LHosdykgc3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIGNlbGwgb2YgMjQgc2ltcGxpY2VzIHdlJ3Jl
IGluCglsb2NhbCBzID0gKHggKyB5ICsgeiArIHcpICogRjQ7IC0tIEZhY3RvciBmb3IgNEQgc2tl
d2luZwoJbG9jYWwgaSA9IG1hdGguZmxvb3IoeCArIHMpOwoJbG9jYWwgaiA9IG1hdGguZmxvb3Io
eSArIHMpOwoJbG9jYWwgayA9IG1hdGguZmxvb3IoeiArIHMpOwoJbG9jYWwgbCA9IG1hdGguZmxv
b3IodyArIHMpOwoJbG9jYWwgdCA9IChpICsgaiArIGsgKyBsKSAqIEc0OyAtLSBGYWN0b3IgZm9y
IDREIHVuc2tld2luZwoJbG9jYWwgWDAgPSBpIC0gdDsgLS0gVW5za2V3IHRoZSBjZWxsIG9yaWdp
biBiYWNrIHRvICh4LHkseix3KSBzcGFjZQoJbG9jYWwgWTAgPSBqIC0gdDsKCWxvY2FsIFowID0g
ayAtIHQ7Cglsb2NhbCBXMCA9IGwgLSB0OwoJbG9jYWwgeDAgPSB4IC0gWDA7IC0tIFRoZSB4LHks
eix3IGRpc3RhbmNlcyBmcm9tIHRoZSBjZWxsIG9yaWdpbgoJbG9jYWwgeTAgPSB5IC0gWTA7Cgls
b2NhbCB6MCA9IHogLSBaMDsKCWxvY2FsIHcwID0gdyAtIFcwOwoJLS0gRm9yIHRoZSA0RCBjYXNl
LCB0aGUgc2ltcGxleCBpcyBhIDREIHNoYXBlIEkgd29uJ3QgZXZlbiB0cnkgdG8gZGVzY3JpYmUu
CgktLSBUbyBmaW5kIG91dCB3aGljaCBvZiB0aGUgMjQgcG9zc2libGUgc2ltcGxpY2VzIHdlJ3Jl
IGluLCB3ZSBuZWVkIHRvCgktLSBkZXRlcm1pbmUgdGhlIG1hZ25pdHVkZSBvcmRlcmluZyBvZiB4
MCwgeTAsIHowIGFuZCB3MC4KCS0tIFRoZSBtZXRob2QgYmVsb3cgaXMgYSBnb29kIHdheSBvZiBm
aW5kaW5nIHRoZSBvcmRlcmluZyBvZiB4LHkseix3IGFuZAoJLS0gdGhlbiBmaW5kIHRoZSBjb3Jy
ZWN0IHRyYXZlcnNhbCBvcmRlciBmb3IgdGhlIHNpbXBsZXggd2Xvv71yZSBpbi4KCS0tIEZpcnN0
LCBzaXggcGFpci13aXNlIGNvbXBhcmlzb25zIGFyZSBwZXJmb3JtZWQgYmV0d2VlbiBlYWNoIHBv
c3NpYmxlIHBhaXIKCS0tIG9mIHRoZSBmb3VyIGNvb3JkaW5hdGVzLCBhbmQgdGhlIHJlc3VsdHMg
YXJlIHVzZWQgdG8gYWRkIHVwIGJpbmFyeSBiaXRzCgktLSBmb3IgYW4gbG9jYWxlZ2VyIGluZGV4
LgoJbG9jYWwgYzEgPSAoeDAgPiB5MCkgYW5kIDMyIG9yIDE7Cglsb2NhbCBjMiA9ICh4MCA_IHow
KSBhbmQgMTYgb3IgMTsKCWxvY2FsIGMzID0gKHkwID4gejApIGFuZCA4IG9yIDE7Cglsb2NhbCBj
NCA9ICh4MCA_IHcwKSBhbmQgNCBvciAxOwoJbG9jYWwgYzUgPSAoeTAgPiB3MCkgYW5kIDIgb3Ig
MTsKCWxvY2FsIGM2ID0gKHowID4gdzApIGFuZCAxIG9yIDE7Cglsb2NhbCBjID0gYzEgKyBjMiAr
IGMzICsgYzQgKyBjNSArIGM2OwoJbG9jYWwgaTEsIGoxLCBrMSwgbDE7IC0tIFRoZSBsb2NhbGVn
ZXIgb2Zmc2V0cyBmb3IgdGhlIHNlY29uZCBzaW1wbGV4IGNvcm5lcgoJbG9jYWwgaTIsIGoyLCBr
MiwgbDI7IC0tIFRoZSBsb2NhbGVnZXIgb2Zmc2V0cyBmb3IgdGhlIHRoaXJkIHNpbXBsZXggY29y
bmVyCglsb2NhbCBpMywgajMsIGszLCBsMzsgLS0gVGhlIGxvY2FsZWdlciBvZmZzZXRzIGZvciB0
aGUgZm91cnRoIHNpbXBsZXggY29ybmVyCgoJLS0gc2ltW2NdIGlzIGEgNC12ZWN0b3Igd2l0aCB0
aGUgbnVtYmVycyAwLCAxLCAyIGFuZCAzIGluIHNvbWUgb3JkZXIuCgktLSBNYW55IHZhbHVlcyBv
ZiBjIHdpbGwgbmV2ZXIgb2NjdXIsIHNpbmNlIGUuZy4geD55Pno_dyBtYWtlcyB4PHosIHk8dyBh
bmQgeDx3CgktLSBpbXBvc3NpYmxlLiBPbmx5IHRoZSAyNCBpbmRpY2VzIHdoaWNoIGhhdmUgbm9u
LXplcm8gZW50cmllcyBtYWtlIGFueSBzZW5zZS4KCS0tIFdlIHVzZSBhIHRocmVzaG9sZGluZyB0
byBzZXQgdGhlIGNvb3JkaW5hdGVzIGluIHR1cm4gZnJvbSB0aGUgbGFyZ2VzdCBtYWduaXR1ZGUu
CgktLSBUaGUgbnVtYmVyIDMgaW4gdGhlICJzaW0iIGFycmF5IGlzIGF0IHRoZSBwb3NpdGlvbiBv
ZiB0aGUgbGFyZ2VzdCBjb29yZGluYXRlLgoKCWkxID0gc2ltW2NdWzFdPj0zIGFuZCAxIG9yIDA7
CglqMSA9IHNpbVtjXVsyXT49MyBhbmQgMSBvciAwOwoJazEgPSBzaW1bY11bM10_PTMgYW5kIDEg
b3IgMDsKCWwxID0gc2ltW2NdWzRdPj0zIGFuZCAxIG9yIDA7CgktLSBUaGUgbnVtYmVyIDIgaW4g
dGhlICJzaW0iIGFycmF5IGlzIGF0IHRoZSBzZWNvbmQgbGFyZ2VzdCBjb29yZGluYXRlLgoJaTIg
PSBzaW1bY11bMV0_PTIgYW5kIDEgb3IgMDsKCWoyID0gc2ltW2NdWzJdPj0yIGFuZCAxIG9yIDA7
CglrMiA9IHNpbVtjXVszXT49MiBhbmQgMSBvciAwOwoJbDIgPSBzaW1bY11bNF0_PTIgYW5kIDEg
b3IgMDsKCS0tIFRoZSBudW1iZXIgMSBpbiB0aGUgInNpbSIgYXJyYXkgaXMgYXQgdGhlIHNlY29u
ZCBzbWFsbGVzdCBjb29yZGluYXRlLgoJaTMgPSBzaW1bY11bMV0_PTEgYW5kIDEgb3IgMDsKCWoz
ID0gc2ltW2NdWzJdPj0xIGFuZCAxIG9yIDA7CglrMyA9IHNpbVtjXVszXT49MSBhbmQgMSBvciAw
OwoJbDMgPSBzaW1bY11bNF0_PTEgYW5kIDEgb3IgMDsKCS0tIFRoZSBmaWZ0aCBjb3JuZXIgaGFz
IGFsbCBjb29yZGluYXRlIG9mZnNldHMgPSAxLCBzbyBubyBuZWVkIHRvIGxvb2sgdGhhdCB1cC4K
CWxvY2FsIHgxID0geDAgLSBpMSArIEc0OyAtLSBPZmZzZXRzIGZvciBzZWNvbmQgY29ybmVyIGlu
ICh4LHkseix3KSBjb29yZHMKCWxvY2FsIHkxID0geTAgLSBqMSArIEc0OwoJbG9jYWwgejEgPSB6
MCAtIGsxICsgRzQ7Cglsb2NhbCB3MSA9IHcwIC0gbDEgKyBHNDsKCWxvY2FsIHgyID0geDAgLSBp
MiArIDIuMCpHNDsgLS0gT2Zmc2V0cyBmb3IgdGhpcmQgY29ybmVyIGluICh4LHkseix3KSBjb29y
ZHMKCWxvY2FsIHkyID0geTAgLSBqMiArIDIuMCpHNDsKCWxvY2FsIHoyID0gejAgLSBrMiArIDIu
MCpHNDsKCWxvY2FsIHcyID0gdzAgLSBsMiArIDIuMCpHNDsKCWxvY2FsIHgzID0geDAgLSBpMyAr
IDMuMCpHNDsgLS0gT2Zmc2V0cyBmb3IgZm91cnRoIGNvcm5lciBpbiAoeCx5LHosdykgY29vcmRz
Cglsb2NhbCB5MyA9IHkwIC0gajMgKyAzLjAqRzQ7Cglsb2NhbCB6MyA9IHowIC0gazMgKyAzLjAq
RzQ7Cglsb2NhbCB3MyA9IHcwIC0gbDMgKyAzLjAqRzQ7Cglsb2NhbCB4NCA9IHgwIC0gMS4wICsg
NC4wKkc0OyAtLSBPZmZzZXRzIGZvciBsYXN0IGNvcm5lciBpbiAoeCx5LHosdykgY29vcmRzCgls
b2NhbCB5NCA9IHkwIC0gMS4wICsgNC4wKkc0OwoJbG9jYWwgejQgPSB6MCAtIDEuMCArIDQuMCpH
NDsKCWxvY2FsIHc0ID0gdzAgLSAxLjAgKyA0LjAqRzQ7CgoJLS0gV29yayBvdXQgdGhlIGhhc2hl
ZCBncmFkaWVudCBpbmRpY2VzIG9mIHRoZSBmaXZlIHNpbXBsZXggY29ybmVycwoJbG9jYWwgaWkg
PSBpJjI1NQoJbG9jYWwgamogPSBqJjI1NQoJbG9jYWwga2sgPSBrJjI1NQoJbG9jYWwgbGwgPSBs
JjI1NQoJbG9jYWwgZ2kwID0gcGVybVtpaStwZXJtW2pqK3Blcm1ba2srcGVybVtsbF1dXV0gJSAz
MjsKCWxvY2FsIGdpMSA9IHBlcm1baWkraTErcGVybVtqaitqMStwZXJtW2trK2sxK3Blcm1bbGwr
bDFdXV1dICUgMzI7Cglsb2NhbCBnaTIgPSBwZXJtW2lpK2kyK3Blcm1bamorajIrcGVybVtraytr
MitwZXJtW2xsK2wyXV1dXSAlIDMyOwoJbG9jYWwgZ2kzID0gcGVybVtpaStpMytwZXJtW2pqK2oz
K3Blcm1ba2srazMrcGVybVtsbCtsM11dXV0gJSAzMjsKCWxvY2FsIGdpNCA9IHBlcm1baWkrMStw
ZXJtW2pqKzErcGVybVtraysxK3Blcm1bbGwrMV1dXV0gJSAzMjsKCgktLSBDYWxjdWxhdGUgdGhl
IGNvbnRyaWJ1dGlvbiBmcm9tIHRoZSBmaXZlIGNvcm5lcnMKCWxvY2FsIHQwID0gMC41IC0geDAq
eDAgLSB5MCp5MCAtIHowKnowIC0gdzAqdzA7CglpZiAodDA8MCkgdGhlbgoJCW4wID0gMC4wOwoJ
ZWxzZQoJCXQwID0gdDAqdDA7CgkJbjAgPSB0MCAqIHQwICogRG90NEQoR3JhZGllbnRzNERbZ2kw
XSwgeDAsIHkwLCB6MCwgdzApOwoJZW5kCgoJbG9jYWwgdDEgPSAwLjUgLSB4MSp4MSAtIHkxKnkx
IC0gejEqejEgLSB3MSp3MTsKCWlmICh0MTwwKSB0aGVuCgkJbjEgPSAwLjA7CgllbHNlIAoJCXQx
ID0gdDEqdDE7CgkJbjEgPSB0MSAqIHQxICogRG90NEQoR3JhZGllbnRzNERbZ2kxXSwgeDEsIHkx
LCB6MSwgdzEpOwoJZW5kCgoJbG9jYWwgdDIgPSAwLjUgLSB4Mip4MiAtIHkyKnkyIC0gejIqejIg
LSB3Mip3MjsKCWlmICh0MjwwKSB0aGVuCgkJbjIgPSAwLjA7CgllbHNlCgkJdDIgPSB0Mip0MjsK
CQluMiA9IHQyICogdDIgKiBEb3Q0RChHcmFkaWVudHM0RFtnaTJdLCB4MiwgeTIsIHoyLCB3Mik7
CgllbmQKCglsb2NhbCB0MyA9IDAuNSAtIHgzKngzIC0geTMqeTMgLSB6Myp6MyAtIHczKnczOwoJ
aWYgKHQzPDApIHRoZW4KCQluMyA9IDAuMDsKCWVsc2UgCgkJdDMgPSB0Myp0MzsKCQluMyA9IHQz
ICogdDMgKiBEb3Q0RChHcmFkaWVudHM0RFtnaTNdLCB4MywgeTMsIHozLCB3Myk7CgllbmQKCgls
b2NhbCB0NCA9IDAuNSAtIHg0Kng0IC0geTQqeTQgLSB6NCp6NCAtIHc0Knc0OwoJaWYgKHQ0PDAp
IHRoZW4KCQluNCA9IDAuMDsKCWVsc2UKCQl0NCA9IHQ0KnQ0OwoJCW40ID0gdDQgKiB0NCAqIERv
dDREKEdyYWRpZW50czREW2dpNF0sIHg0LCB5NCwgejQsIHc0KTsKCWVuZAoKCS0tIFN1bSB1cCBh
bmQgc2NhbGUgdGhlIHJlc3VsdCB0byBjb3ZlciB0aGUgcmFuZ2UgWy0xLDFdCgoJbG9jYWwgcmV0
dmFsID0gMjcuMCAqIChuMCArIG4xICsgbjIgKyBuMyArIG40KQoKCWlmIHNpbXBsZXguaW50ZXJu
YWxDYWNoZSB0aGVuCgkJaWYgbm90IFByZXY0RFt4XSB0aGVuIFByZXY0RFt4XSA9IHt9IGVuZAoJ
CWlmIG5vdCBQcmV2NERbeF1beV0gdGhlbiBQcmV2NERbeF1beV0gPSB7fSBlbmQKCQlpZiBub3Qg
UHJldjREW3hdW3ldW3pdIHRoZW4gUHJldjREW3hdW3ldW3pdID0ge30gZW5kCgkJUHJldjREW3hd
W3ldW3pdW3ddID0gcmV0dmFsCgllbmQKCglyZXR1cm4gcmV0dmFsOwoKZW5kIAoKbG9jYWwgZSA9
IDIuNzE4MjgxODI4NDU5MDQ1MjM1MzYKCmxvY2FsIFByZXZCbHVyMkQgPSB7fQoKZnVuY3Rpb24g
c2ltcGxleC5HQmx1cjJEKHgseSxzdGREZXYpCglpZiBzaW1wbGV4LmludGVybmFsQ2FjaGUgYW5k
IFByZXZCbHVyMkRbeF0gYW5kIFByZXZCbHVyMkRbeF1beV0gYW5kIFByZXZCbHVyMkRbeF1beV1b
c3RkRGV2XSB0aGVuIHJldHVybiBQcmV2Qmx1cjJEW3hdW3ldW3N0ZERldl0gZW5kCglsb2NhbCBw
d3IgPSAoKHheMit5XjIpLygyKihzdGREZXZeMikpKSotMQoJbG9jYWwgcmV0ID0gKDEvKDIqbWF0
aC5waSooc3RkRGV2XjIpKSkqKGVecHdyKQoKCWlmIHNpbXBsZXguaW50ZXJuYWxDYWNoZSB0aGVu
CgkJaWYgbm90IFByZXZCbHVyMkRbeF0gdGhlbiBQcmV2Qmx1cjJEW3hdID0ge30gZW5kCgkJaWYg
bm90IFByZXZCbHVyMkRbeF1beV0gdGhlbiBQcmV2Qmx1cjJEW3hdW3ldID0ge30gZW5kCgkJUHJl
dkJsdXIyRFt4XVt5XVtzdGREZXZdID0gcmV0CgllbmQKCXJldHVybiByZXQKZW5kIAoKbG9jYWwg
UHJldkJsdXIxRCA9IHt9CgpmdW5jdGlvbiBzaW1wbGV4LkdCbHVyMUQoeCxzdGREZXYpCglpZiBz
aW1wbGV4LmludGVybmFsQ2FjaGUgYW5kIFByZXZCbHVyMURbeF0gYW5kIFByZXZCbHVyMURbeF1b
c3RkRGV2XSB0aGVuIHJldHVybiBQcmV2Qmx1cjFEW3hdW3N0ZERldl0gZW5kCglsb2NhbCBwd3Ig
PSAoeF4yLygyKnN0ZERldl4yKSkqLTEKCWxvY2FsIHJldCA9ICgxLyhtYXRoLnNxcnQoMiptYXRo
LnBpKSpzdGREZXYpKSooZV5wd3IpCgoJaWYgc2ltcGxleC5pbnRlcm5hbENhY2hlIHRoZW4KCQlp
ZiBub3QgUHJldkJsdXIxRFt4XSB0aGVuIFByZXZCbHVyMURbeF0gPSB7fSBlbmQKCQlQcmV2Qmx1
cjFEW3hdW3N0ZERldl0gPSByZXQKCWVuZAoJcmV0dXJuIHJldAplbmQKCmZ1bmN0aW9uIHNpbXBs
ZXguRnJhY3RhbFN1bShmdW5jLCBpdGVyLCAuLi4pCiAgICBsb2NhbCByZXQgPSBmdW5jKC4uLikK
ICAgIGZvciBpPTEsaXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0gMl5pdGVyCiAgICAgICAg
bG9jYWwgcyA9IHBvd2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0ge30KICAgICAgICBmb3Ig
ZWxlbSBpbiBpcGFpcnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzY2FsZWQs
IGVsZW0qcykKICAgICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAoaS9wb3dlcikqKGZ1bmMo
dW5wYWNrKHNjYWxlZCkpKQogICAgZW5kCiAgICByZXR1cm4gcmV0CmVuZAoKZnVuY3Rpb24gc2lt
cGxleC5GcmFjdGFsU3VtQWJzKGZ1bmMsIGl0ZXIsIC4uLikKICAgIGxvY2FsIHJldCA9IG1hdGgu
YWJzKGZ1bmMoLi4uKSkKICAgIGZvciBpPTEsaXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0g
Ml5pdGVyCiAgICAgICAgbG9jYWwgcyA9IHBvd2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0g
e30KICAgICAgICBmb3IgZWxlbSBpbiBpcGFpcnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxl
Lmluc2VydChzY2FsZWQsIGVsZW0qcykKICAgICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAo
aS9wb3dlcikqKG1hdGguYWJzKGZ1bmModW5wYWNrKHNjYWxlZCkpKSkKICAgIGVuZAogICAgcmV0
dXJuIHJldAplbmQKCmZ1bmN0aW9uIHNpbXBsZXguVHVyYnVsZW5jZShmdW5jLCBkaXJlY3Rpb24s
IGl0ZXIsIC4uLikKICAgIGxvY2FsIHJldCA9IG1hdGguYWJzKGZ1bmMoLi4uKSkKICAgIGZvciBp
PTEsaXRlciBkbwogICAgICAgIGxvY2FsIHBvd2VyID0gMl5pdGVyCiAgICAgICAgbG9jYWwgcyA9
IHBvd2VyL2kKCiAgICAgICAgbG9jYWwgc2NhbGVkID0ge30KICAgICAgICBmb3IgZWxlbSBpbiBp
cGFpcnMoey4uLn0pIGRvCiAgICAgICAgICAgIHRhYmxlLmluc2VydChzY2FsZWQsIGVsZW0qcykK
ICAgICAgICBlbmQKICAgICAgICByZXQgPSByZXQgKyAoaS9wb3dlcikqKG1hdGguYWJzKGZ1bmMo
dW5wYWNrKHNjYWxlZCkpKSkKICAgIGVuZAogICAgbG9jYWwgYXJncyA9IHsuLi59CiAgICBsb2Nh
bCBkaXJfY29tcG9uZW50ID0gYXJnc1tkaXJlY3Rpb24rMV0KICAgIHJldHVybiBtYXRoLnNpbihk
aXJfY29tcG9uZW50K3JldCkKZW5k
:: queue.lua
--[[pod_format="raw",created="2025-06-08 15:17:51",modified="2025-06-12 19:57:00",revision=185]]
include "logging.lua"

local QUEUES = {}

function work_queues()
	local running_queues = 0
	for i,q in pairs(QUEUES) do
		local s, err = coresume(q)
		if s then running_queues += 1 end
		if err then error(err) end
	end
	return running_queues, #QUEUES
end

function make_queue()
	local actions = {}
	
	local r = cocreate(function()
		while true do
			local next_action = deli(actions, 1)
			if next_action then
				r = next_action.f(unpack(next_action.argv))
				--error(tostr(next_action.args))
			end
			yield()
		end
	end)
	local a = function(func, argv)
		actions[#actions+1] = { f = func, argv = argv }
	end
	
	QUEUES[#QUEUES+1] = r
	return a
end
:: ticking.lua
--[[pod_format="raw",created="2025-06-30 15:08:35",modified="2025-06-30 18:38:20",revision=269]]

include "chunk.lua"
include "util.lua"
include "logging.lua"

local get_chunk_by_world_pos = chunk.get_chunk_by_world_pos
local get_tile_in_world = chunk.get_tile_in_world
local set_tile_in_world = chunk.set_tile_in_world

function enqueue(x,y,fx,fy)
	local c = get_chunk_by_world_pos(x,y)
	if c then 
		c.next_schedule[x .. " " .. y] = {x,y}
	else
		local fc = get_chunk_by_world_pos(fx,fy)
		fc.next_schedule[fx .. " " .. fy] = {fx,fy}
	end
end

RULES = {
	[10] = function(x,y)
		if get_tile_in_world(x,y+1) == 0 then
			-- downwards motion
			set_tile_in_world(x,y,0,false,true)
			set_tile_in_world(x,y+1,10,false,true)
			enqueue(x,y-1,x,y)
			enqueue(x,y+1,x,y)
			enqueue(x+1,y,x,y)
			enqueue(x-1,y,x,y)
		else
			-- lateral motion
			local delta_x = sgn(rnd()-0.5)
			-- first try
			if get_tile_in_world(x+delta_x,y) == 0 then
				-- move
				set_tile_in_world(x,y,0,false,true)
				set_tile_in_world(x+delta_x,y,10,false,true)
				-- enqueue free tiles and my next position
				enqueue(x,y-1,x,y)
				enqueue(x,y+1,x,y)
				enqueue(x+1,y,x,y)
				enqueue(x-1,y,x,y)
			else
				delta_x *= -1
				-- second try
				if get_tile_in_world(x+delta_x,y) == 0 then
					-- move
					set_tile_in_world(x,y,0,false,true)
					set_tile_in_world(x+delta_x,y,10,false,true)
					-- enqueue free tiles and my next position
					enqueue(x,y-1,x,y)
					enqueue(x,y+1,x,y)
					enqueue(x+1,y,x,y)
					enqueue(x-1,y,x,y)
				end
			end
		end
	end
}

local RESUME_COUNT = 0
tick_schedule = cocreate(function() 
	while true do
		RESUME_COUNT += 1
		for _,c in pairs(LOADED_CHUNKS) do
			if c.y%3 != RESUME_COUNT%3 then goto continue end
			local next_action
			local action_count = 0
			repeat
				next_action = deli(c.schedule,1)
				if next_action then
					local x, y = unpack(next_action)
					local rule = get_tile_in_world(x,y)
					local r = RULES[rule]
					if (r) r(x,y)			
				end
			until not next_action
			::continue::
		end
		yield()
		for _,c in pairs(LOADED_CHUNKS) do
			for _,v in pairs(c.next_schedule) do
				c.schedule[#c.schedule+1] = v
			end
			c.next_schedule = {}
			c.debug_label = #c.schedule
		end
		yield()
	end
end)
:: util.lua
--[[pod_format="raw",created="2025-04-12 19:25:23",modified="2025-06-12 19:57:00",revision=2664]]

function cofetch(r, cb)
	coresume(cocreate(function() 
		local res = fetch(r)
		cb(res)
	end))
end

local perf_rec = {}
local perf_c = 1
local lag_counter = 0
function perf_graph()
	perf_c = (perf_c + 1)%60
	perf_rec[perf_c] = stat(1) * 10
	local acc = 0
	local m = 0
	for i,v in pairs(perf_rec) do
		pset(i,SCREEN_HEIGHT - 10, 8)
		pset(i,SCREEN_HEIGHT - 8, 1)
		pset(i,SCREEN_HEIGHT - v,7)
		acc += v
		if v > m then m = v end
	end
	if stat(7) < 60 then lag_counter += 1 end
	m = flr(m*10)
	local avg = flr(acc / 6)
	prints("lag " .. lag_counter,62, SCREEN_HEIGHT - 32)
	prints("avg " .. avg .. "%",62,SCREEN_HEIGHT - 24)
	prints("max " .. m .. "%",62,SCREEN_HEIGHT - 16)
	prints("cur " .. flr(stat(1)*100) .. "% // target " .. stat(7) .. "  hold TAB for debug info",62,SCREEN_HEIGHT - 8)
end

local bars = {}

function draw_debug_bars()
	local last_bar_top = 0
	for n,bar in pairs(bars) do
		local next_bar_top = last_bar_top + (bar.max_slice_frame * 100)
		rectfill(SCREEN_WIDTH,last_bar_top, SCREEN_WIDTH - 8, next_bar_top, bar.color)
		rect(SCREEN_WIDTH,last_bar_top, SCREEN_WIDTH - 8, next_bar_top, 1)
		print(n,SCREEN_WIDTH-#n*5-8,last_bar_top)
		local perf_text = "WCpF " .. flr(bar.max_slice_frame * 100) .. "%"
		print(perf_text,SCREEN_WIDTH-#perf_text*5-8,last_bar_top+8)
		last_bar_top = next_bar_top
	end
end

function start_bar_frame()
	for n,bar in pairs(bars) do
		bar.frame_slice = 0
		if key("tab") then
			bar.max_slice = 0
			bar.max_slice_frame = 0
		end
	end
end

function bar_start(n)
	local bar = bars[n]
	if not bar then 
		bar = {
			max_slice = 0,
			frame_slice = 0,
			max_slice_frame = 0,
			color = flr(rnd(29)+2)
		}
		bars[n] = bar
	end
	bar.waiting_slice = stat(1)
end

function bar_end(n)
	local bar = bars[n]
	bar.current_slice = stat(1) - bar.waiting_slice
	bar.frame_slice += bar.current_slice
	
	if bar.max_slice_frame < bar.frame_slice then bar.max_slice_frame = bar.frame_slice end
	if bar.max_slice < bar.current_slice then bar.max_slice = bar.current_slice end
end



function prints(s,x,y,c)
	print(s,x+1,y+1,19)
	print(s,x,y,c or 7)
end

function real_count(t)
	local c = 0
	for i,v in pairs(t) do c+=1 end
	return c
end

function indexof(t,iv)
	for i,ov in pairs(t) do if iv == ov then return i end end
end

function tracked_rect(w,h,cb)
	bar_start("Rect")
	local short_side = w < h and w or h
	local half_short_side = short_side/2
	for ix=0,w do
		for iy=0,h do
			local dist = sqrt( (half_short_side - ix)^2 + (half_short_side - iy)^2 )
			local inverse_dist = half_short_side - dist
			inverse_dist = inverse_dist < 0 and 0 or inverse_dist
			cb(ix,iy,dist,inverse_dist)
		end
	end
	bar_end("Rect")
end


:: world_interaction.lua
--[[pod_format="raw",created="2025-04-16 12:52:53",modified="2025-06-30 18:38:20",revision=1660]]
include "constants.lua"
include "chunk.lua"
include "ticking.lua"

WORLD_MOUSE_X = 0
WORLD_MOUSE_Y = 0
PREV_MOUSE_LEFT = false
PREV_MOUSE_RIGHT = false

local BLOCK_BREAKS = {}

ACTIVE_BLOCK = 0

function update_world_mouse(camera_x, camera_y)
	local g_mouse_x, g_mouse_y, g_mouse_b, g_wheel_x, g_wheel_y = mouse()
	local left_down = g_mouse_b & 0x1 > 0
	local right_down = g_mouse_b & 0x2 > 0
	local wheel_delta = -(g_wheel_y == 0 and 0 or sgn(g_wheel_y))
	
	local left_pressed = left_down and not PREV_MOUSE_LEFT
	local left_released = not left_down and PREV_MOUSE_LEFT
	
	local right_pressed = right_down and not PREV_MOUSE_RIGHT
	local right_released = not right_down and PREV_MOUSE_RIGHT
	
	PREV_MOUSE_LEFT = left_down
	PREV_MOUSE_RIGHT = right_down
	WORLD_MOUSE_X = flr((camera_x + g_mouse_x) / TILE_SIZE)
	WORLD_MOUSE_Y = flr((camera_y + g_mouse_y) / TILE_SIZE)
	
	ACTIVE_BLOCK = mid(1,24,ACTIVE_BLOCK+wheel_delta)
	
	if not key "ctrl" then
		if right_pressed then
			chunk.set_tile_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y, ACTIVE_BLOCK, fget(256+ACTIVE_BLOCK,0))
			enqueue(WORLD_MOUSE_X,WORLD_MOUSE_Y)
		end
		if left_pressed then
			chunk.set_tile_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y, 0)
			chunk.break_light_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y)
			enqueue(WORLD_MOUSE_X,WORLD_MOUSE_Y+1)
			enqueue(WORLD_MOUSE_X,WORLD_MOUSE_Y-1)
			enqueue(WORLD_MOUSE_X+1,WORLD_MOUSE_Y)
			enqueue(WORLD_MOUSE_X-1,WORLD_MOUSE_Y)
		end
	end
	

	if key "ctrl" then
		if right_pressed then
			chunk.break_light_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y)
			chunk.set_tile_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y, 57)
			chunk.place_light_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y, 32)
		end
		if left_pressed then
			chunk.break_light_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y)
			chunk.set_tile_in_world(WORLD_MOUSE_X, WORLD_MOUSE_Y, 0, true)
		end
	end
end

function block_break_routine(x,y)
	local block_break_name = x .. '/' .. y
	local block_break = BLOCK_BREAKS[block_break_name]
	if not block_break then
		
		block_break = 0
	end
end

function draw_world_mouse()
	local rx = WORLD_MOUSE_X * TILE_SIZE
	local ry = WORLD_MOUSE_Y * TILE_SIZE
	fillp(0b1010010110100101)
	rect(rx+1, ry+1, rx+TILE_SIZE, ry+TILE_SIZE, 1)
	rect(rx, ry, rx+TILE_SIZE-1, ry+TILE_SIZE-1, 7)
	
	fillp()
		print(rx .. "/" .. ry, rx,ry-8, 7)
end
:: .info.pod
b64$LS1bW3BvZCxiYnNfaWQ9Il9kZXYyMjc5IixjcmVhdGVkPSIyMDI1LTA0LTA5IDE5OjUwOjMx
IixpY29uPXVzZXJkYXRhKCJ1OCIsMTYsMTYsIjAwMDAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDAw
MDAwMDAwMDAxMDcwNzA3MDcwNzA3MDcwNzA3MDcwMTAwMDAwMDAxMDcxNTE1MTUwYTBhMGEwYTE1
MTUxNTA3MDEwMDAxMDcxNTE1MTUwYTBhMDkwNjA3MGExNTE1MTUwNzAxMDEwNzE1MTUxNTA5MDkw
OTA3MDcwOTE1MTUxNTA3MDEwMTA3MTUxNTE5MTkxOTE5MTkxOTE5MTkxNTE1MDcwMTAxMDcxNTE1
MTUwNzA3MDEwNzA3MDExNTE1MTUwNzAxMDEwNzE1MTUxNTA3MDcwMTA3MDcwMTE1MTUxNTA3MDEw
MTA3MTUxNTE1MTAwNzA3MDcwNzA3MTUxNTE1MDcwMTAxMDcxNTE1MTUwNzEwMDcwNzA3MDcxNTE1
MTUwNzAxMDEwNzAxMTUxNTEwMTAxMDEwMTAxMDE1MTUxNTA3MDEwMTA2MDcxNTE1MTAxMDAxMDEx
MDEwMTUxNTA3MDYwMTAxMDYwNjA3MDcwNzA3MDcwNzA3MDcwNzA3MDYwNjAxMDAwMTA2MDYwNjA2
MDYwNjA2MDYwNjA2MDYwNjAxMDAwMDAwMDEwNjA2MDYwNjA2MDYwNjA2MDYwNjAxMDAwMDAwMDAw
MDAxMDEwMTAxMDEwMTAxMDEwMTAxMDAwMDAwIiksbG93Y29sX2ljb249ZmFsc2UsbW9kaWZpZWQ9
IjIwMjUtMDYtMzAgMTg6Mzg6MjEiLHJ1bnRpbWU9MTgsc2FuZGJveD1mYWxzZSx3b3Jrc3BhY2Vz
PXt7bG9jYXRpb249Im1haW4ubHVhIzczIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJj
aHVuay5sdWEjMzgyIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJ0aWNraW5nLmx1YSM2
NiIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iZ2VuZXJhdG9yLmx1YSM2OSIsd29ya3Nw
YWNlX2luZGV4PTF9LHtsb2NhdGlvbj0id29ybGRfaW50ZXJhY3Rpb24ubHVhIzQ0Iix3b3Jrc3Bh
Y2VfaW5kZXg9MX0se2xvY2F0aW9uPSJjaHVua3NlcnZpY2UubHVhIzgiLHdvcmtzcGFjZV9pbmRl
eD0xfSx7bG9jYXRpb249ImdmeC8wLmdmeCIsd29ya3NwYWNlX2luZGV4PTJ9LHtsb2NhdGlvbj0i
Z2Z4LzEuZ2Z4Iix3b3Jrc3BhY2VfaW5kZXg9Mn0se2xvY2F0aW9uPSJtYXAvZGVidWcubWFwIix3
b3Jrc3BhY2VfaW5kZXg9M30se2xvY2F0aW9uPSJzZngvMC5zZngiLHdvcmtzcGFjZV9pbmRleD00
fX1dXQ==
:: [eoc]
